{"pageProps":{"post":{"title":"Python 패키지 관리를 위한 로컬 PyPi 저장소 서버 설정 방법","description":"","date":"2024-07-14 23:39","slug":"2024-07-14-HowtoSetUpYourOwnLocalPyPiRepositoryServerforPythonPackageManagement","content":"\n\n<img src=\"/TIL/assets/img/2024-07-14-HowtoSetUpYourOwnLocalPyPiRepositoryServerforPythonPackageManagement_0.png\" />\n\n파이썬 패키지 저장소는 파이썬 패키지를 호스팅하여 개발자가 라이브러리를 게시하고 배포할 수 있는 중앙 웹 사이트입니다. PyPI(Python Package Index)를 호스팅하거나 미러링하여 네트워크 내에서 Python 패키지에 빠르고 신뢰할 수 있는 액세스를 제공하는 것이 중요합니다. 특히 네트워크 대역폭이 제한되었거나 인터넷 연결이 불안정한 환경에서는 더욱 중요합니다.\n\n# 전제 조건\n\n- 관리 권한이 있는 Red Hat 또는 Rocky Linux 8 시스템이 있어야 합니다.\n- 필요한 패키지를 다운로드하려면 인터넷에 액세스해야 합니다.\n- PyPI 저장소를 위한 충분한 저장 공간(1TB)이 필요할 수 있으며, 해당 패키지를 저장할 데이터 파티션을 설정할 수 있습니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 실행 단계\n\n— Bandersnatch 사용\n\n- 필수 패키지 설치: python3, pip, virtualenv이 설치되어 있는지 확인해주세요.\n\n```bash\nsudo dnf install python2 python3 python3-pip python3-virtualenv vim -y\npython3 -m venv venv\nsource venv/bin/activate\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n2. Bandersnatch 설치: Bandersnatch는 PyPI를 미러링하는 도구입니다.\n\n```js\npip install --upgrade pip\npip install dataclasses\npip install bandersnatch\n```\n\n3. Bandersnatch 구성: 초기 구성 파일을 생성하고 편집하세요.\n\na. 구성 파일을 생성하려면 처음으로 bandersnatch 미러 명령을 실행하십시오.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\n밴더스내치 미러\n2024–07–14 00:04:36,297 경고: 설정 파일 ‘/etc/bandersnatch.conf’이 누락되어 기본 설정이 생성되었습니다.\n2024–07-14 00:04:36,297 경고: 설정 파일을 검토한 후 ‘bandersnatch’를 다시 실행해주세요.\n```\n\nb. 거울 데이터를 저장할 디렉토리에 대한 구성 파일 매개변수를 업데이트하세요. 제 경우에는 데이터 파티션을 만드는 것이죠. 여러분의 설정은 다를 수 있어요.\n\n```js\nvim /etc/bandersnatch.conf\n\n...\ndirectory = /data/\n...\n```\n\n파일을 저장하세요.\n\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n명령을 다시 실행하면 bandersnatch mirror가 실행됩니다.\n\n```js\nbandersnatch mirror\n2024-07-14 00:09:40,793 INFO: 선택된 스토리지 백엔드: 파일 시스템\n2024-07-14 00:09:40,860 ERROR: swift_plugin = bandersnatch_storage_plugins.swift:SwiftStorage 진입점 로드 불가능: 'keystoneauth1' 모듈을 찾을 수 없음\n2024-07-14 00:09:40,911 INFO: 미러 디렉토리 설정 중: /data/web/simple\n2024-07-14 00:09:40,912 INFO: 미러 디렉토리 설정 중: /data/web/packages\n2024-07-14 00:09:40,913 INFO: 미러 디렉토리 설정 중: /data/web/local-stats/days\n2024-07-14 00:09:40,913 INFO: 생성 파일이 누락되었습니다. 상태 파일을 다시 초기화합니다.\n2024-07-14 00:09:40,914 INFO: status 파일 /data/status 누락됨. 처음부터 다시 시작합니다.\n2024-07-14 00:09:40,914 INFO: https://pypi.org와 동기화 중.\n2024-07-14 00:09:40,914 INFO: 현재 미러 일련번호: 0\n2024-07-14 00:09:40,914 INFO: 모든 패키지 동기화 중.\n```\n\n명령이 다시 실행되어 모든 패키지가 pypi 웹사이트에서 다운로드됩니다.\n\n이 데이터를 웹 서버로 복사하거나 웹 서버를 설정해보세요.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n4. 웹 서버 설치: 아파치 httpd 웹 서버를 설치합니다.\n\n```js\nsudo dnf install httpd\nsudo systemctl start httpd\nsudo systemctl enable httpd\n```\n\n5. 웹 서버 구성: 웹 서버를 PyPI 미러가 저장된 디렉토리로 지정합니다.\n\n```js\nsudo vim /etc/httpd/conf.d/pypi_repo.conf\n\nAlias /pypi /var/www/html/pypi\n<Directory /var/www/html/pypi>\n    Options Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nsudo systemctl restart httpd\n```\n\n6. 클라이언트가 로컬 저장소를 사용하도록 구성하기: 클라이언트 기기에서 pip를 사용하여 로컬 PyPI 미러를 사용하도록 구성합니다.\n\n```js\nmkdir -p ~/.config/pip\ncat << EOF > ~/.config/pip/pip.conf\n[global]\nindex-url = http://mywebserver.example.com/pypi/simple\nEOF\n```\n\nBandersnatcher의 문제는 선택적 미러링을 할 수 없다는 것입니다. 왜냐하면 pypi 서버로부터 전체 내용을 가져오기 때문입니다. 이 문제를 해결하기 위해 개발자가 모든 선택적 다운로드를 위한 라이브러리 minirepo를 제공했고, 이를 아래에서 나열해보겠습니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n— Minirepo과 pypi-server를 사용 중\n\n안녕하세요! 라즈베리 파이를 설정한 사람의 정보를 바탕으로 이 라이브러리들을 테스트하고 있는데, 재미있는 일이 있었어요. 여러 오류를 마주쳤지만 그 덕분에 코드에서 버그를 발견하고 고칠 수 있었어요. 저의 수정 사항은 여기에서 확인할 수 있어요. 필요하시면 제 수정 사항을 자유롭게 적용해 보세요.\n\n- Python3 호환성 문제\n- XML 구문 분석 오류 문제\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬 파이프 파이프 파프리리바 리프 파이사이사이 사이브\n\n이제 처음으로 minirepo를 실행하면 json 형식의 .minirepo 파일 이름을 요청합니다.\n\n```js\nminirepo\n\n/******** Minirepo ********/\nTraceback (most recent call last):\n File \"/root/venv/lib64/python3.6/site-packages/minirepo.py\", line 206, in get_config\n config = json.load(open(config_file))\nFileNotFoundError: [Errno 2] No such file or directory: '/root/.minirepo'\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n위의 텍스트를 친근한 톤으로 한국어로 번역하면 다음과 같습니다.\n\n```js\n파일을 생성해 봅시다.\n\ncat << EOF > /root/.minirepo\n{\n  \"processes\": 10,\n  \"package_types\": [\n    \"bdist_egg\",\n    \"bdist_wheel\",\n    \"sdist\"\n  ],\n  \"extensions\": [\n    \"bz2\",\n    \"egg\",\n    \"gz\",\n    \"tgz\",\n    \"whl\",\n    \"zip\"\n  ],\n  \"python_versions\": [\n    \"3.0\",\n    \"3.1\",\n    \"3.2\",\n    \"3.3\",\n    \"3.4.10\",\n    \"3.5.7\",\n    \"3.6.9\",\n    \"any\",\n    \"cp27\",\n    \"py2\",\n    \"py2.py3\",\n    \"py27\",\n    \"source\"\n  ],\n  \"repository\": \"/data\"\n}\nEOF\n\n이제 실행해 봅시다.\n\nminirepo \n\n(venv) [root@localhost ~]# minirepo \n/******** Minirepo ********/\nextensions      = ['bz2', 'egg', 'gz', 'tgz', 'whl', 'zip']\npackage_types   = ['bdist_egg', 'bdist_wheel', 'sdist']\nprocesses       = 10\npython_versions = ['3.0', '3.1', '3.2', '3.3', '3.4.10', '3.5.7', '3.6.9', 'any', 'cp27', 'py2', 'py2.py3', 'py27', 'source']\nrepository      = /data\n설정 파일 사용 중 /root/.minirepo\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬 코드를 이용하여 pypi 웹사이트를 파싱하고 패키지를 다운로드할 것입니다.\n\n.......\n[zzzutils 다운로드](/simple/zzzutils/)\n[zzz-web 다운로드](/simple/zzz-web/)\n[zzzymobbe 다운로드](/simple/zzzymobbe/)\n[zzzz 다운로드](/simple/zzzz/)\n[zzzZZZzzz 다운로드](/simple/zzzzzzzzz/)\n</body>\n</html>\n/tmp/tmpvt3vfas8/worker.2565 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2566 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2567 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2568 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2569 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2570 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2571 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2572 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2573 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker.2574 파일에서 워커 시작...\n2024-07-14 12:58:06,098:경고: 다운로드 완료: jira_test-0.0.1.tar.gz                             Ok pid:2567 0% [1/55510.0]\n2024-07-14 12:58:06,127:경고: 다운로드 완료: nvitop-1.3.2.tar.gz                                Ok pid:2565 0% [1/55509.0]\n\n이제 PyPi 패키지를 로컬 저장소에 복제했으며, 클라이언트에 설치된 pip를 통해 해당 패키지를 직접 설치할 수 있습니다. 이제 pypiserver가 등장합니다. pypiserver는 로컬 패키지 인덱스를 제공하여 네트워크를 통해 저장소에서 패키지를 찾을 수 있도록 하는 역할을 합니다.\n\n우리는 도커를 사용하여 pypi 서버를 배포할 것입니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nservices:\n  pypi-server:\n    image: pypiserver/pypiserver:latest\n    ports:\n      - 8082:8080\n    volumes:\n      - type: volume\n        source: pypi-server\n        target: /data\n    command: -P . -a . /data/\n    restart: always\nvolumes:\n  pypi-server:\r\n\n![How to Set Up Your Own Local PyPi Repository Server for Python Package Management](/TIL/assets/img/2024-07-14-HowtoSetUpYourOwnLocalPyPiRepositoryServerforPythonPackageManagement_1.png)\n\n![Reference](https://miro.medium.com/v2/resize:fit:960/0*6KpBJVtYreNzCL3G.gif)\n\n# 참고 문헌\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n[1] https://bandersnatch.readthedocs.io/en/latest/\n\n[2] https://vuyisile.com/pypi-in-a-box-using-a-raspberry-pi-as-a-portable-pypi-server/","ogImage":{"url":"/TIL/assets/img/2024-07-14-HowtoSetUpYourOwnLocalPyPiRepositoryServerforPythonPackageManagement_0.png"},"coverImage":"/TIL/assets/img/2024-07-14-HowtoSetUpYourOwnLocalPyPiRepositoryServerforPythonPackageManagement_0.png","tag":["Tech"],"readingTime":10},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/TIL/assets/img/2024-07-14-HowtoSetUpYourOwnLocalPyPiRepositoryServerforPythonPackageManagement_0.png\">\n<p>파이썬 패키지 저장소는 파이썬 패키지를 호스팅하여 개발자가 라이브러리를 게시하고 배포할 수 있는 중앙 웹 사이트입니다. PyPI(Python Package Index)를 호스팅하거나 미러링하여 네트워크 내에서 Python 패키지에 빠르고 신뢰할 수 있는 액세스를 제공하는 것이 중요합니다. 특히 네트워크 대역폭이 제한되었거나 인터넷 연결이 불안정한 환경에서는 더욱 중요합니다.</p>\n<h1>전제 조건</h1>\n<ul>\n<li>관리 권한이 있는 Red Hat 또는 Rocky Linux 8 시스템이 있어야 합니다.</li>\n<li>필요한 패키지를 다운로드하려면 인터넷에 액세스해야 합니다.</li>\n<li>PyPI 저장소를 위한 충분한 저장 공간(1TB)이 필요할 수 있으며, 해당 패키지를 저장할 데이터 파티션을 설정할 수 있습니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>실행 단계</h1>\n<p>— Bandersnatch 사용</p>\n<ul>\n<li>필수 패키지 설치: python3, pip, virtualenv이 설치되어 있는지 확인해주세요.</li>\n</ul>\n<pre><code class=\"hljs language-bash\">sudo dnf install python2 python3 python3-pip python3-virtualenv vim -y\npython3 -m venv venv\n<span class=\"hljs-built_in\">source</span> venv/bin/activate\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ol start=\"2\">\n<li>Bandersnatch 설치: Bandersnatch는 PyPI를 미러링하는 도구입니다.</li>\n</ol>\n<pre><code class=\"hljs language-js\">pip install --upgrade pip\npip install dataclasses\npip install bandersnatch\n</code></pre>\n<ol start=\"3\">\n<li>Bandersnatch 구성: 초기 구성 파일을 생성하고 편집하세요.</li>\n</ol>\n<p>a. 구성 파일을 생성하려면 처음으로 bandersnatch 미러 명령을 실행하십시오.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\">밴더스내치 미러\n<span class=\"hljs-number\">2024</span>–<span class=\"hljs-number\">07</span>–<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">04</span>:<span class=\"hljs-number\">36</span>,<span class=\"hljs-number\">297</span> 경고: 설정 파일 ‘/etc/bandersnatch.<span class=\"hljs-property\">conf</span>’이 누락되어 기본 설정이 생성되었습니다.\n<span class=\"hljs-number\">2024</span>–<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">04</span>:<span class=\"hljs-number\">36</span>,<span class=\"hljs-number\">297</span> 경고: 설정 파일을 검토한 후 ‘bandersnatch’를 다시 실행해주세요.\n</code></pre>\n<p>b. 거울 데이터를 저장할 디렉토리에 대한 구성 파일 매개변수를 업데이트하세요. 제 경우에는 데이터 파티션을 만드는 것이죠. 여러분의 설정은 다를 수 있어요.</p>\n<pre><code class=\"hljs language-js\">vim /etc/bandersnatch.<span class=\"hljs-property\">conf</span>\n\n...\ndirectory = <span class=\"hljs-regexp\">/data/</span>\n...\n</code></pre>\n<p>파일을 저장하세요.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>명령을 다시 실행하면 bandersnatch mirror가 실행됩니다.</p>\n<pre><code class=\"hljs language-js\">bandersnatch mirror\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">793</span> <span class=\"hljs-attr\">INFO</span>: 선택된 스토리지 백엔드: 파일 시스템\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">860</span> <span class=\"hljs-attr\">ERROR</span>: swift_plugin = bandersnatch_storage_plugins.<span class=\"hljs-property\">swift</span>:<span class=\"hljs-title class_\">SwiftStorage</span> 진입점 로드 불가능: <span class=\"hljs-string\">'keystoneauth1'</span> 모듈을 찾을 수 없음\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">911</span> <span class=\"hljs-attr\">INFO</span>: 미러 디렉토리 설정 중: <span class=\"hljs-regexp\">/data/</span>web/simple\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">912</span> <span class=\"hljs-attr\">INFO</span>: 미러 디렉토리 설정 중: <span class=\"hljs-regexp\">/data/</span>web/packages\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">913</span> <span class=\"hljs-attr\">INFO</span>: 미러 디렉토리 설정 중: <span class=\"hljs-regexp\">/data/</span>web/local-stats/days\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">913</span> <span class=\"hljs-attr\">INFO</span>: 생성 파일이 누락되었습니다. 상태 파일을 다시 초기화합니다.\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">914</span> <span class=\"hljs-attr\">INFO</span>: status 파일 /data/status 누락됨. 처음부터 다시 시작합니다.\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">914</span> <span class=\"hljs-attr\">INFO</span>: <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//pypi.org와 동기화 중.</span>\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">914</span> <span class=\"hljs-attr\">INFO</span>: 현재 미러 일련번호: <span class=\"hljs-number\">0</span>\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">914</span> <span class=\"hljs-attr\">INFO</span>: 모든 패키지 동기화 중.\n</code></pre>\n<p>명령이 다시 실행되어 모든 패키지가 pypi 웹사이트에서 다운로드됩니다.</p>\n<p>이 데이터를 웹 서버로 복사하거나 웹 서버를 설정해보세요.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ol start=\"4\">\n<li>웹 서버 설치: 아파치 httpd 웹 서버를 설치합니다.</li>\n</ol>\n<pre><code class=\"hljs language-js\">sudo dnf install httpd\nsudo systemctl start httpd\nsudo systemctl enable httpd\n</code></pre>\n<ol start=\"5\">\n<li>웹 서버 구성: 웹 서버를 PyPI 미러가 저장된 디렉토리로 지정합니다.</li>\n</ol>\n<pre><code class=\"hljs language-js\">sudo vim /etc/httpd/conf.<span class=\"hljs-property\">d</span>/pypi_repo.<span class=\"hljs-property\">conf</span>\n\n<span class=\"hljs-title class_\">Alias</span> /pypi /<span class=\"hljs-keyword\">var</span>/www/html/pypi\n&#x3C;<span class=\"hljs-title class_\">Directory</span> /<span class=\"hljs-keyword\">var</span>/www/html/pypi>\n    <span class=\"hljs-title class_\">Options</span> <span class=\"hljs-title class_\">Indexes</span> <span class=\"hljs-title class_\">FollowSymLinks</span>\n    <span class=\"hljs-title class_\">AllowOverride</span> <span class=\"hljs-title class_\">None</span>\n    <span class=\"hljs-title class_\">Require</span> all granted\n&#x3C;/<span class=\"hljs-title class_\">Directory</span>>\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\">sudo systemctl restart httpd\n</code></pre>\n<ol start=\"6\">\n<li>클라이언트가 로컬 저장소를 사용하도록 구성하기: 클라이언트 기기에서 pip를 사용하여 로컬 PyPI 미러를 사용하도록 구성합니다.</li>\n</ol>\n<pre><code class=\"hljs language-js\">mkdir -p ~<span class=\"hljs-regexp\">/.config/</span>pip\ncat &#x3C;&#x3C; <span class=\"hljs-variable constant_\">EOF</span> > ~<span class=\"hljs-regexp\">/.config/</span>pip/pip.<span class=\"hljs-property\">conf</span>\n[<span class=\"hljs-variable language_\">global</span>]\nindex-url = <span class=\"hljs-attr\">http</span>:<span class=\"hljs-comment\">//mywebserver.example.com/pypi/simple</span>\n<span class=\"hljs-variable constant_\">EOF</span>\n</code></pre>\n<p>Bandersnatcher의 문제는 선택적 미러링을 할 수 없다는 것입니다. 왜냐하면 pypi 서버로부터 전체 내용을 가져오기 때문입니다. 이 문제를 해결하기 위해 개발자가 모든 선택적 다운로드를 위한 라이브러리 minirepo를 제공했고, 이를 아래에서 나열해보겠습니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>— Minirepo과 pypi-server를 사용 중</p>\n<p>안녕하세요! 라즈베리 파이를 설정한 사람의 정보를 바탕으로 이 라이브러리들을 테스트하고 있는데, 재미있는 일이 있었어요. 여러 오류를 마주쳤지만 그 덕분에 코드에서 버그를 발견하고 고칠 수 있었어요. 저의 수정 사항은 여기에서 확인할 수 있어요. 필요하시면 제 수정 사항을 자유롭게 적용해 보세요.</p>\n<ul>\n<li>Python3 호환성 문제</li>\n<li>XML 구문 분석 오류 문제</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>파이썬 파이프 파이프 파프리리바 리프 파이사이사이 사이브</p>\n<p>이제 처음으로 minirepo를 실행하면 json 형식의 .minirepo 파일 이름을 요청합니다.</p>\n<pre><code class=\"hljs language-js\">minirepo\n\n<span class=\"hljs-comment\">/******** Minirepo ********/</span>\n<span class=\"hljs-title class_\">Traceback</span> (most recent call last):\n <span class=\"hljs-title class_\">File</span> <span class=\"hljs-string\">\"/root/venv/lib64/python3.6/site-packages/minirepo.py\"</span>, line <span class=\"hljs-number\">206</span>, <span class=\"hljs-keyword\">in</span> get_config\n config = json.<span class=\"hljs-title function_\">load</span>(<span class=\"hljs-title function_\">open</span>(config_file))\n<span class=\"hljs-title class_\">FileNotFoundError</span>: [<span class=\"hljs-title class_\">Errno</span> <span class=\"hljs-number\">2</span>] <span class=\"hljs-title class_\">No</span> such file or <span class=\"hljs-attr\">directory</span>: <span class=\"hljs-string\">'/root/.minirepo'</span>\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>위의 텍스트를 친근한 톤으로 한국어로 번역하면 다음과 같습니다.</p>\n<pre><code class=\"hljs language-js\">파일을 생성해 봅시다.\n\ncat &#x3C;&#x3C; <span class=\"hljs-variable constant_\">EOF</span> > <span class=\"hljs-regexp\">/root/</span>.<span class=\"hljs-property\">minirepo</span>\n{\n  <span class=\"hljs-string\">\"processes\"</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-string\">\"package_types\"</span>: [\n    <span class=\"hljs-string\">\"bdist_egg\"</span>,\n    <span class=\"hljs-string\">\"bdist_wheel\"</span>,\n    <span class=\"hljs-string\">\"sdist\"</span>\n  ],\n  <span class=\"hljs-string\">\"extensions\"</span>: [\n    <span class=\"hljs-string\">\"bz2\"</span>,\n    <span class=\"hljs-string\">\"egg\"</span>,\n    <span class=\"hljs-string\">\"gz\"</span>,\n    <span class=\"hljs-string\">\"tgz\"</span>,\n    <span class=\"hljs-string\">\"whl\"</span>,\n    <span class=\"hljs-string\">\"zip\"</span>\n  ],\n  <span class=\"hljs-string\">\"python_versions\"</span>: [\n    <span class=\"hljs-string\">\"3.0\"</span>,\n    <span class=\"hljs-string\">\"3.1\"</span>,\n    <span class=\"hljs-string\">\"3.2\"</span>,\n    <span class=\"hljs-string\">\"3.3\"</span>,\n    <span class=\"hljs-string\">\"3.4.10\"</span>,\n    <span class=\"hljs-string\">\"3.5.7\"</span>,\n    <span class=\"hljs-string\">\"3.6.9\"</span>,\n    <span class=\"hljs-string\">\"any\"</span>,\n    <span class=\"hljs-string\">\"cp27\"</span>,\n    <span class=\"hljs-string\">\"py2\"</span>,\n    <span class=\"hljs-string\">\"py2.py3\"</span>,\n    <span class=\"hljs-string\">\"py27\"</span>,\n    <span class=\"hljs-string\">\"source\"</span>\n  ],\n  <span class=\"hljs-string\">\"repository\"</span>: <span class=\"hljs-string\">\"/data\"</span>\n}\n<span class=\"hljs-variable constant_\">EOF</span>\n\n이제 실행해 봅시다.\n\nminirepo \n\n(venv) [root@localhost ~]# minirepo \n<span class=\"hljs-comment\">/******** Minirepo ********/</span>\nextensions      = [<span class=\"hljs-string\">'bz2'</span>, <span class=\"hljs-string\">'egg'</span>, <span class=\"hljs-string\">'gz'</span>, <span class=\"hljs-string\">'tgz'</span>, <span class=\"hljs-string\">'whl'</span>, <span class=\"hljs-string\">'zip'</span>]\npackage_types   = [<span class=\"hljs-string\">'bdist_egg'</span>, <span class=\"hljs-string\">'bdist_wheel'</span>, <span class=\"hljs-string\">'sdist'</span>]\nprocesses       = <span class=\"hljs-number\">10</span>\npython_versions = [<span class=\"hljs-string\">'3.0'</span>, <span class=\"hljs-string\">'3.1'</span>, <span class=\"hljs-string\">'3.2'</span>, <span class=\"hljs-string\">'3.3'</span>, <span class=\"hljs-string\">'3.4.10'</span>, <span class=\"hljs-string\">'3.5.7'</span>, <span class=\"hljs-string\">'3.6.9'</span>, <span class=\"hljs-string\">'any'</span>, <span class=\"hljs-string\">'cp27'</span>, <span class=\"hljs-string\">'py2'</span>, <span class=\"hljs-string\">'py2.py3'</span>, <span class=\"hljs-string\">'py27'</span>, <span class=\"hljs-string\">'source'</span>]\nrepository      = /data\n설정 파일 사용 중 /root/.<span class=\"hljs-property\">minirepo</span>\n\n&#x3C;!-- <span class=\"hljs-variable constant_\">TIL</span> 수평 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n     <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n     <span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n     <span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"1549334788\"</span>\n     <span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n     <span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n파이썬 코드를 이용하여 pypi 웹사이트를 파싱하고 패키지를 다운로드할 것입니다.\n\n.......\n[zzzutils 다운로드](<span class=\"hljs-regexp\">/simple/</span>zzzutils/)\n[zzz-web 다운로드](<span class=\"hljs-regexp\">/simple/</span>zzz-web/)\n[zzzymobbe 다운로드](<span class=\"hljs-regexp\">/simple/</span>zzzymobbe/)\n[zzzz 다운로드](<span class=\"hljs-regexp\">/simple/</span>zzzz/)\n[zzzZZZzzz 다운로드](<span class=\"hljs-regexp\">/simple/</span>zzzzzzzzz/)\n&#x3C;/body>\n&#x3C;/html>\n<span class=\"hljs-regexp\">/tmp/</span>tmpvt3vfas8/worker<span class=\"hljs-number\">.2565</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2566</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2567</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2568</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2569</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2570</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2571</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2572</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2573</span> 파일에서 워커 시작...\n/tmp/tmpvt3vfas8/worker<span class=\"hljs-number\">.2574</span> 파일에서 워커 시작...\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">58</span>:<span class=\"hljs-number\">06</span>,<span class=\"hljs-number\">098</span>:경고: 다운로드 완료: jira_test-<span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.1</span>.<span class=\"hljs-property\">tar</span>.<span class=\"hljs-property\">gz</span>                             <span class=\"hljs-title class_\">Ok</span> <span class=\"hljs-attr\">pid</span>:<span class=\"hljs-number\">2567</span> <span class=\"hljs-number\">0</span>% [<span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">55510.0</span>]\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span> <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">58</span>:<span class=\"hljs-number\">06</span>,<span class=\"hljs-number\">127</span>:경고: 다운로드 완료: nvitop-<span class=\"hljs-number\">1.3</span><span class=\"hljs-number\">.2</span>.<span class=\"hljs-property\">tar</span>.<span class=\"hljs-property\">gz</span>                                <span class=\"hljs-title class_\">Ok</span> <span class=\"hljs-attr\">pid</span>:<span class=\"hljs-number\">2565</span> <span class=\"hljs-number\">0</span>% [<span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">55509.0</span>]\n\n이제 <span class=\"hljs-title class_\">PyPi</span> 패키지를 로컬 저장소에 복제했으며, 클라이언트에 설치된 pip를 통해 해당 패키지를 직접 설치할 수 있습니다. 이제 pypiserver가 등장합니다. pypiserver는 로컬 패키지 인덱스를 제공하여 네트워크를 통해 저장소에서 패키지를 찾을 수 있도록 하는 역할을 합니다.\n\n우리는 도커를 사용하여 pypi 서버를 배포할 것입니다.\n\n&#x3C;!-- <span class=\"hljs-variable constant_\">TIL</span> 수평 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n     <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n     <span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n     <span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"1549334788\"</span>\n     <span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n     <span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n<span class=\"hljs-attr\">services</span>:\n  pypi-<span class=\"hljs-attr\">server</span>:\n    <span class=\"hljs-attr\">image</span>: pypiserver/<span class=\"hljs-attr\">pypiserver</span>:latest\n    <span class=\"hljs-attr\">ports</span>:\n      - <span class=\"hljs-number\">8082</span>:<span class=\"hljs-number\">8080</span>\n    <span class=\"hljs-attr\">volumes</span>:\n      - <span class=\"hljs-attr\">type</span>: volume\n        <span class=\"hljs-attr\">source</span>: pypi-server\n        <span class=\"hljs-attr\">target</span>: /data\n    <span class=\"hljs-attr\">command</span>: -P . -a . /data/\n    <span class=\"hljs-attr\">restart</span>: always\n<span class=\"hljs-attr\">volumes</span>:\n  pypi-<span class=\"hljs-attr\">server</span>:\r\n\n![<span class=\"hljs-title class_\">How</span> to <span class=\"hljs-title class_\">Set</span> <span class=\"hljs-title class_\">Up</span> <span class=\"hljs-title class_\">Your</span> <span class=\"hljs-title class_\">Own</span> <span class=\"hljs-title class_\">Local</span> <span class=\"hljs-title class_\">PyPi</span> <span class=\"hljs-title class_\">Repository</span> <span class=\"hljs-title class_\">Server</span> <span class=\"hljs-keyword\">for</span> <span class=\"hljs-title class_\">Python</span> <span class=\"hljs-title class_\">Package</span> <span class=\"hljs-title class_\">Management</span>](<span class=\"hljs-regexp\">/TIL/</span>assets/img/<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">07</span>-<span class=\"hljs-number\">14</span>-<span class=\"hljs-title class_\">HowtoSetUpYourOwnLocalPyPiRepositoryServerforPythonPackageManagement</span>_1.<span class=\"hljs-property\">png</span>)\n\n![<span class=\"hljs-title class_\">Reference</span>](<span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//miro.medium.com/v2/resize:fit:960/0*6KpBJVtYreNzCL3G.gif)</span>\n\n# 참고 문헌\n\n&#x3C;!-- <span class=\"hljs-variable constant_\">TIL</span> 수평 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n     <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n     <span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n     <span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"1549334788\"</span>\n     <span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n     <span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n[<span class=\"hljs-number\">1</span>] <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//bandersnatch.readthedocs.io/en/latest/</span>\n\n[<span class=\"hljs-number\">2</span>] <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//vuyisile.com/pypi-in-a-box-using-a-raspberry-pi-as-a-portable-pypi-server/</span>\n</code></pre>\n</body>\n</html>\n"},"__N_SSG":true}