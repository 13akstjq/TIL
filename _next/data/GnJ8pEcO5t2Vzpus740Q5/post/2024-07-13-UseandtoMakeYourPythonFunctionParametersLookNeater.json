{"pageProps":{"post":{"title":"와 를 사용해서 Python 함수 파라미터를 깔끔하게 정리하는 방법","description":"","date":"2024-07-13 19:03","slug":"2024-07-13-UseandtoMakeYourPythonFunctionParametersLookNeater","content":"\n\n![TIL 이미지](/TIL/assets/img/2024-07-13-UseandtoMakeYourPythonFunctionParametersLookNeater_0.png)\n\n파이썬에서는 위치 매개변수 또는 키워드 매개변수를 사용하여 함수에 데이터를 전달할 수 있습니다. 이는 파이썬에서 함수를 매우 유연하게 사용할 수 있게 해줍니다. 그러나 이에는 일부 제한 사항이 있습니다. 예를 들어, 일부 매개변수를 위치 전용으로 지정하고 일부를 키워드 전용으로 지정할 수 있습니다. 또 다른 일반적인 사용 사례는 기본 값이 있는 매개변수를 기본 값이 없는 매개변수보다 먼저 놓아 매개변수가 더 구성되고 사용하기 쉽도록 만드는 것입니다. 이러한 요청은 파이썬의 * 및 / 기호를 사용하여 수행할 수 있습니다.\n\n## 기본 동작\n\n이미 알고 있듯이, 파이썬에서는 위치 매개변수 또는 키워드 매개변수를 사용하여 함수에 데이터를 전달할 수 있습니다. 여기에 간단한 함수 예제가 있습니다:\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```python\ndef echo(x, y, z):\n    print(f\"{x=}, {y=}, {z=}\")\n```\n\n이 함수를 호출할 때 위치 매개변수나 키워드 매개변수를 사용할 수 있습니다. 단, 키워드 매개변수는 위치 매개변수 뒤에 있어야 합니다:\n\n```python\necho(1, 2, 3)\necho(1, 2, z=3)\necho(1, y=2, z=3)\necho(x=1, y=2, z=3)\n# x=1, y=2, z=3\n```\n\n모두 작동하고 동일한 결과를 출력합니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## /를 사용하여 위치 전용 매개변수 지정하기\n\n함수 정의에서 / 기호 앞에 배치된 매개변수는 위치 전용으로 전달돼야 합니다. echo() 함수를 업데이트하여 /를 사용해봅시다:\n\n```js\ndef echo(x, /, y, z):\n    print(f\"{x=}, {y=}, {z=}\")\n```\n\n이 업데이트로 x는 위치 매개변수로만 전달될 수 있으며, y와 z는 여전히 위치 및 키워드 매개변수로 모두 전달될 수 있습니다:\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n\n```js\necho(1, 2, 3)\necho(1, 2, z=3)\necho(1, y=2, z=3)\n# x=1, y=2, z=3\n```\n\n그리고 x가 키워드 매개변수로 전달되면 TypeError가 발생합니다:\n\n```js\necho(x=1, y=2, z=3)\n# TypeError: echo() got some positional-only arguments passed as keyword arguments: 'x'\n```\n\n## *를 사용하여 키워드 전용 매개변수 지정하기\n\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n함수 정의에서 * 기호 뒤에 올 파라미터는 키워드 인수로 전달되어야 합니다. echo() 함수에서 / 대신 *를 사용해보겠습니다:\n\n```js\ndef echo(x, *, y, z):\n    print(f\"{x=}, {y=}, {z=}\")\n```\n\n이제 x는 위치 인수 또는 키워드 인수로 전달할 수 있지만, y와 z는 키워드 인수로 반드시 전달되어야 합니다 (x가 위치 매개변수로 전달되더라도):\n\n```js\necho(1, y=2, z=3)\necho(x=1, y=2, z=3)\n# x=1, y=2, z=3\n\necho(1, 2, z=3)\n# TypeError: echo() takes 1 positional argument but 2 positional arguments (and 1 keyword-only argument) were given\n\necho(1, 2, 3)\n# TypeError: echo() takes 1 positional argument but 3 were given\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\n* 기호의 매우 유용한 기능 중 하나는 매개변수를 보다 구성되게 보이도록 기본값이 설정된 매개변수를 기본값이 없는 매개변수보다 먼저 배치할 수 있다는 것입니다. 예를 들어, * 기호를 사용하여 y에 기본값을 지정하고 여전히 y 뒤에 z를 놓을 수 있습니다:\n\ndef echo(x, *, y=2, z):\n    print(f\"{x=}, {y=}, {z=}\")\n\n이것은 Python에서 유효한 구문이며 복잡한 함수 매개변수를 갖는 서드 파티 Python 라이브러리에서 흔히 사용됩니다.\n\n이제 y와 z 둘 다 키워드 매개변수로 전달되어야 하며 y에는 기본값이 설정되어 있습니다:\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n\n```js\necho(1, z=3)\necho(1, y=2, z=3)\n# x=1, y=2, z=3\n```\n\n## 함수 정의에서 *와 /를 결합하기\n\n*와 /를 결합하여 위치 매개변수와 키워드 전용 매개변수를 가진 함수를 정의할 수 있습니다:\n\n```js\ndef echo(x, /, *, y=2, z):\n    print(f\"{x=}, {y=}, {z=}\")\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 경우에는 x는 위치 전용이고 y와 z는 키워드 전용 매개변수입니다:\n\n```js\necho(1, z=3)\necho(1, y=2, z=3)\n# x=1, y=2, z=3\n\necho(x=1, z=3)\n# TypeError: echo() got some positional-only arguments passed as keyword arguments: 'x'\n```\n\n이 게시물에서는 함수 정의에서 *와 / 기호를 사용한 것을 소개했는데, 이들은 다음과 같은 흥미로운 유틸리티를 가지고 있습니다:\n\n- 일부 매개변수를 위치 전용으로 지정하고 일부를 키워드 전용으로 지정합니다.\n- 기본값을 가진 매개변수는 기본값이 없는 매개변수 앞에 두어 매개변수를 더욱 구성하기 쉽고 사용하기 편리하게 합니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 관련 포스트:\n\n- 특별한 Python 문자열 포맷팅으로 로깅 및 단위 변환하기\n- Python 코드를 더 전문적으로 만들기 위해 black, mypy, pylint 사용하기","ogImage":{"url":"/TIL/assets/img/2024-07-13-UseandtoMakeYourPythonFunctionParametersLookNeater_0.png"},"coverImage":"/TIL/assets/img/2024-07-13-UseandtoMakeYourPythonFunctionParametersLookNeater_0.png","tag":["Tech"],"readingTime":6},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/TIL/assets/img/2024-07-13-UseandtoMakeYourPythonFunctionParametersLookNeater_0.png\" alt=\"TIL 이미지\"></p>\n<p>파이썬에서는 위치 매개변수 또는 키워드 매개변수를 사용하여 함수에 데이터를 전달할 수 있습니다. 이는 파이썬에서 함수를 매우 유연하게 사용할 수 있게 해줍니다. 그러나 이에는 일부 제한 사항이 있습니다. 예를 들어, 일부 매개변수를 위치 전용으로 지정하고 일부를 키워드 전용으로 지정할 수 있습니다. 또 다른 일반적인 사용 사례는 기본 값이 있는 매개변수를 기본 값이 없는 매개변수보다 먼저 놓아 매개변수가 더 구성되고 사용하기 쉽도록 만드는 것입니다. 이러한 요청은 파이썬의 * 및 / 기호를 사용하여 수행할 수 있습니다.</p>\n<h2>기본 동작</h2>\n<p>이미 알고 있듯이, 파이썬에서는 위치 매개변수 또는 키워드 매개변수를 사용하여 함수에 데이터를 전달할 수 있습니다. 여기에 간단한 함수 예제가 있습니다:</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-params\">x, y, z</span>):\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"<span class=\"hljs-subst\">{x=}</span>, <span class=\"hljs-subst\">{y=}</span>, <span class=\"hljs-subst\">{z=}</span>\"</span>)\n</code></pre>\n<p>이 함수를 호출할 때 위치 매개변수나 키워드 매개변수를 사용할 수 있습니다. 단, 키워드 매개변수는 위치 매개변수 뒤에 있어야 합니다:</p>\n<pre><code class=\"hljs language-python\">echo(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>)\necho(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\necho(<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\necho(x=<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n<span class=\"hljs-comment\"># x=1, y=2, z=3</span>\n</code></pre>\n<p>모두 작동하고 동일한 결과를 출력합니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>/를 사용하여 위치 전용 매개변수 지정하기</h2>\n<p>함수 정의에서 / 기호 앞에 배치된 매개변수는 위치 전용으로 전달돼야 합니다. echo() 함수를 업데이트하여 /를 사용해봅시다:</p>\n<pre><code class=\"hljs language-js\">def <span class=\"hljs-title function_\">echo</span>(x, /, y, z):\n    <span class=\"hljs-title function_\">print</span>(f<span class=\"hljs-string\">\"{x=}, {y=}, {z=}\"</span>)\n</code></pre>\n<p>이 업데이트로 x는 위치 매개변수로만 전달될 수 있으며, y와 z는 여전히 위치 및 키워드 매개변수로 모두 전달될 수 있습니다:</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>)\n<span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n<span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n# x=<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>\n</code></pre>\n<p>그리고 x가 키워드 매개변수로 전달되면 TypeError가 발생합니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">echo</span>(x=<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n# <span class=\"hljs-title class_\">TypeError</span>: <span class=\"hljs-title function_\">echo</span>() got some positional-only <span class=\"hljs-variable language_\">arguments</span> passed <span class=\"hljs-keyword\">as</span> keyword <span class=\"hljs-attr\">arguments</span>: <span class=\"hljs-string\">'x'</span>\n</code></pre>\n<h2>*를 사용하여 키워드 전용 매개변수 지정하기</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>함수 정의에서 * 기호 뒤에 올 파라미터는 키워드 인수로 전달되어야 합니다. echo() 함수에서 / 대신 *를 사용해보겠습니다:</p>\n<pre><code class=\"hljs language-js\">def <span class=\"hljs-title function_\">echo</span>(x, *, y, z):\n    <span class=\"hljs-title function_\">print</span>(f<span class=\"hljs-string\">\"{x=}, {y=}, {z=}\"</span>)\n</code></pre>\n<p>이제 x는 위치 인수 또는 키워드 인수로 전달할 수 있지만, y와 z는 키워드 인수로 반드시 전달되어야 합니다 (x가 위치 매개변수로 전달되더라도):</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n<span class=\"hljs-title function_\">echo</span>(x=<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n# x=<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>\n\n<span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n# <span class=\"hljs-title class_\">TypeError</span>: <span class=\"hljs-title function_\">echo</span>() takes <span class=\"hljs-number\">1</span> positional argument but <span class=\"hljs-number\">2</span> positional <span class=\"hljs-variable language_\">arguments</span> (and <span class=\"hljs-number\">1</span> keyword-only argument) were given\n\n<span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>)\n# <span class=\"hljs-title class_\">TypeError</span>: <span class=\"hljs-title function_\">echo</span>() takes <span class=\"hljs-number\">1</span> positional argument but <span class=\"hljs-number\">3</span> were given\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\">* 기호의 매우 유용한 기능 중 하나는 매개변수를 보다 구성되게 보이도록 기본값이 설정된 매개변수를 기본값이 없는 매개변수보다 먼저 배치할 수 있다는 것입니다. 예를 들어, * 기호를 사용하여 y에 기본값을 지정하고 여전히 y 뒤에 z를 놓을 수 있습니다:\n\ndef <span class=\"hljs-title function_\">echo</span>(x, *, y=<span class=\"hljs-number\">2</span>, z):\n    <span class=\"hljs-title function_\">print</span>(f<span class=\"hljs-string\">\"{x=}, {y=}, {z=}\"</span>)\n\n이것은 <span class=\"hljs-title class_\">Python</span>에서 유효한 구문이며 복잡한 함수 매개변수를 갖는 서드 파티 <span class=\"hljs-title class_\">Python</span> 라이브러리에서 흔히 사용됩니다.\n\n이제 y와 z 둘 다 키워드 매개변수로 전달되어야 하며 y에는 기본값이 설정되어 있습니다:\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, z=<span class=\"hljs-number\">3</span>)\n<span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n# x=<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>\n</code></pre>\n<h2>함수 정의에서 *와 /를 결합하기</h2>\n<p>*와 /를 결합하여 위치 매개변수와 키워드 전용 매개변수를 가진 함수를 정의할 수 있습니다:</p>\n<pre><code class=\"hljs language-js\">def <span class=\"hljs-title function_\">echo</span>(x, /, *, y=<span class=\"hljs-number\">2</span>, z):\n    <span class=\"hljs-title function_\">print</span>(f<span class=\"hljs-string\">\"{x=}, {y=}, {z=}\"</span>)\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>이 경우에는 x는 위치 전용이고 y와 z는 키워드 전용 매개변수입니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, z=<span class=\"hljs-number\">3</span>)\n<span class=\"hljs-title function_\">echo</span>(<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>)\n# x=<span class=\"hljs-number\">1</span>, y=<span class=\"hljs-number\">2</span>, z=<span class=\"hljs-number\">3</span>\n\n<span class=\"hljs-title function_\">echo</span>(x=<span class=\"hljs-number\">1</span>, z=<span class=\"hljs-number\">3</span>)\n# <span class=\"hljs-title class_\">TypeError</span>: <span class=\"hljs-title function_\">echo</span>() got some positional-only <span class=\"hljs-variable language_\">arguments</span> passed <span class=\"hljs-keyword\">as</span> keyword <span class=\"hljs-attr\">arguments</span>: <span class=\"hljs-string\">'x'</span>\n</code></pre>\n<p>이 게시물에서는 함수 정의에서 *와 / 기호를 사용한 것을 소개했는데, 이들은 다음과 같은 흥미로운 유틸리티를 가지고 있습니다:</p>\n<ul>\n<li>일부 매개변수를 위치 전용으로 지정하고 일부를 키워드 전용으로 지정합니다.</li>\n<li>기본값을 가진 매개변수는 기본값이 없는 매개변수 앞에 두어 매개변수를 더욱 구성하기 쉽고 사용하기 편리하게 합니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>관련 포스트:</h2>\n<ul>\n<li>특별한 Python 문자열 포맷팅으로 로깅 및 단위 변환하기</li>\n<li>Python 코드를 더 전문적으로 만들기 위해 black, mypy, pylint 사용하기</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}