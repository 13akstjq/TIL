{"pageProps":{"post":{"title":"Vite에서 SVG 사용하는 두 가지 방법 (React + TypeScript 기준)","description":"","date":"2025-04-18 00:06","slug":"2025-04-18-vite-svg","content":"\n## ✅ 1. React 컴포넌트로 사용하는 방법 (`?react` 쿼리)\n\nSVG를 직접 React 컴포넌트로 import 하여 사용하려면 **vite-plugin-svgr** 플러그인이 필요합니다.\n\n---\n\n### 📦 1-1. 설치\n\n```bash\nnpm install vite-plugin-svgr --save-dev\n# 또는\nyarn add vite-plugin-svgr --dev\n```\n\n---\n\n### ⚙️ 1-2. vite.config.ts 설정\n\n```ts\n// vite.config.ts\nimport { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport svgr from \"vite-plugin-svgr\";\nimport path from \"path\";\n\nexport default defineConfig({\n  plugins: [react(), svgr()],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"src\"),\n    },\n  },\n});\n```\n\n---\n\n### 🧩 1-3. TypeScript 선언 추가 (`svg.d.ts`)\n\n```ts\n// src/svg.d.ts\ndeclare module \"*.svg?react\" {\n  import * as React from \"react\";\n  export const ReactComponent: React.FC<React.SVGProps<SVGSVGElement>>;\n  export default ReactComponent;\n}\n```\n\n---\n\n### 🧪 1-4. 사용 예시\n\n```tsx\n// 예: src/components/Icon.tsx\nimport { ReactComponent as HeartIcon } from \"@/assets/icons/heart.svg?react\";\n\nconst Icon = () => {\n  return <HeartIcon width={32} height={32} fill=\"red\" />;\n};\n\nexport default Icon;\n```\n\n---\n\n## 📁 2. 이미지 파일처럼 사용하는 방법 (`img` 태그)\n\n`vite-plugin-svgr` 없이도 기본적으로 SVG 파일은 **URL로 import**해서 이미지처럼 사용할 수 있습니다.\n\n---\n\n### 📂 2-1. import 방식\n\n```tsx\n// 예: src/components/ImageIcon.tsx\nimport heartUrl from \"@/assets/icons/heart.svg\";\n\nconst ImageIcon = () => {\n  return <img src={heartUrl} alt=\"Heart\" width={32} />;\n};\n\nexport default ImageIcon;\n```\n\n---\n\n### 🧩 2-2. TypeScript 선언 추가 (`svg.d.ts`)\n\n```ts\n// src/svg.d.ts\ndeclare module \"*.svg\" {\n  const src: string;\n  export default src;\n}\n```\n\n> ⚠️ `*.svg?react`과 `*.svg` 둘 다 선언해주면 두 방식 모두 사용할 수 있습니다.\n\n---\n\n## 🔁 3. 마무리 - 개발 서버 재시작\n\n```bash\nnpm run dev\n# 또는\nyarn dev\n```\n\n---\n","ogImage":{"url":"/TIL/assets/img/2024-07-15-TechStackForProduction-ReadyLLMApplicationsIn2024_0.png"},"coverImage":"/TIL/assets/img/2024-07-15-TechStackForProduction-ReadyLLMApplicationsIn2024_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>✅ 1. React 컴포넌트로 사용하는 방법 (<code>?react</code> 쿼리)</h2>\n<p>SVG를 직접 React 컴포넌트로 import 하여 사용하려면 <strong>vite-plugin-svgr</strong> 플러그인이 필요합니다.</p>\n<hr>\n<h3>📦 1-1. 설치</h3>\n<pre><code class=\"hljs language-bash\">npm install vite-plugin-svgr --save-dev\n<span class=\"hljs-comment\"># 또는</span>\nyarn add vite-plugin-svgr --dev\n</code></pre>\n<hr>\n<h3>⚙️ 1-2. vite.config.ts 설정</h3>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-comment\">// vite.config.ts</span>\n<span class=\"hljs-keyword\">import</span> { defineConfig } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"vite\"</span>;\n<span class=\"hljs-keyword\">import</span> react <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"@vitejs/plugin-react\"</span>;\n<span class=\"hljs-keyword\">import</span> svgr <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"vite-plugin-svgr\"</span>;\n<span class=\"hljs-keyword\">import</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"path\"</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">defineConfig</span>({\n  <span class=\"hljs-attr\">plugins</span>: [<span class=\"hljs-title function_\">react</span>(), <span class=\"hljs-title function_\">svgr</span>()],\n  <span class=\"hljs-attr\">resolve</span>: {\n    <span class=\"hljs-attr\">alias</span>: {\n      <span class=\"hljs-string\">\"@\"</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">\"src\"</span>),\n    },\n  },\n});\n</code></pre>\n<hr>\n<h3>🧩 1-3. TypeScript 선언 추가 (<code>svg.d.ts</code>)</h3>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-comment\">// src/svg.d.ts</span>\n<span class=\"hljs-keyword\">declare</span> <span class=\"hljs-variable language_\">module</span> <span class=\"hljs-string\">\"*.svg?react\"</span> {\n  <span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ReactComponent</span>: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span>&#x3C;<span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">SVGProps</span>&#x3C;<span class=\"hljs-title class_\">SVGSVGElement</span>>>;\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">ReactComponent</span>;\n}\n</code></pre>\n<hr>\n<h3>🧪 1-4. 사용 예시</h3>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// 예: src/components/Icon.tsx</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ReactComponent</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">HeartIcon</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"@/assets/icons/heart.svg?react\"</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">Icon</span> = (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">HeartIcon</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{32}</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{32}</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"red\"</span> /></span></span>;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Icon</span>;\n</code></pre>\n<hr>\n<h2>📁 2. 이미지 파일처럼 사용하는 방법 (<code>img</code> 태그)</h2>\n<p><code>vite-plugin-svgr</code> 없이도 기본적으로 SVG 파일은 <strong>URL로 import</strong>해서 이미지처럼 사용할 수 있습니다.</p>\n<hr>\n<h3>📂 2-1. import 방식</h3>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// 예: src/components/ImageIcon.tsx</span>\n<span class=\"hljs-keyword\">import</span> heartUrl <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"@/assets/icons/heart.svg\"</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">ImageIcon</span> = (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">{heartUrl}</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Heart\"</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{32}</span> /></span></span>;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">ImageIcon</span>;\n</code></pre>\n<hr>\n<h3>🧩 2-2. TypeScript 선언 추가 (<code>svg.d.ts</code>)</h3>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-comment\">// src/svg.d.ts</span>\n<span class=\"hljs-keyword\">declare</span> <span class=\"hljs-variable language_\">module</span> <span class=\"hljs-string\">\"*.svg\"</span> {\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> src;\n}\n</code></pre>\n<blockquote>\n<p>⚠️ <code>*.svg?react</code>과 <code>*.svg</code> 둘 다 선언해주면 두 방식 모두 사용할 수 있습니다.</p>\n</blockquote>\n<hr>\n<h2>🔁 3. 마무리 - 개발 서버 재시작</h2>\n<pre><code class=\"hljs language-bash\">npm run dev\n<span class=\"hljs-comment\"># 또는</span>\nyarn dev\n</code></pre>\n<hr>\n</body>\n</html>\n"},"__N_SSG":true}