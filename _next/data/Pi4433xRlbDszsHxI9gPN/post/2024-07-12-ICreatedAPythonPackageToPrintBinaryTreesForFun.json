{"pageProps":{"post":{"title":"이진 트리 출력용 파이썬 패키지 제작기 재미로 했어요","description":"","date":"2024-07-12 20:57","slug":"2024-07-12-ICreatedAPythonPackageToPrintBinaryTreesForFun","content":"\n\n<img src=\"/TIL/assets/img/2024-07-12-ICreatedAPythonPackageToPrintBinaryTreesForFun_0.png\" />\n\n이번에 이진 트리와 힙을 다루다가, 나만의 트리를 빠르고 쉽게 표시하고 시각화하는 방법이 필요했어요.\n\n그래서 온라인에서 Python 패키지를 검색해보니 몇 개가 그 역할을 해줄 수 있었어요. 그래도 사용하기가 귀찮은 경우가 많았어요.\n\n기존 솔루션을 사용하고 코드를 약간 더 써가며 내 시간을 낭비하는 대신, 개발자들이 흔히 하는 것처럼, 몇 일을 허비해서 처음부터 내가 직접 패키지를 만들기로 결정했죠.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 내 패키지 — print-btree\n\n내 패키지를 설치하는 방법:\n\n```js\npip install print-btree\n```\n\nGithub: https://github.com/zlliu246/print_btree\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 기본 사용 방법\n\n```js\nfrom print_btree import print_btree\n\nclass Node:\n    def __init__(self, val):\n        self.val = val\n        self.left = None\n        self.right = None\n\n# 이진 트리를 만드세요\nroot = Node(1)\nroot.left = Node(2)\nroot.right = Node(3)\nroot.left.left = Node(4)\nroot.left.right = Node(5)\n\nprint_btree(root)\n\n'''\n\n __1__\n |   |\n_2_  3 \n| |    \n4 5   \n\n'''\n```\n\n만약 이진 트리 Node가 .val .left 및 .right를 사용한다면, print_btree 함수를 간단히 가져와 트리를 출력할 수 있습니다\n\n# 노드가 다른 이름을 사용하는 경우 어떻게 하나요?\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nfrom print_btree import print_btree\n\nclass BNode:\n    def __init__(self, value):\n        self.value = value\n        self.left_node = None\n        self.right_node = None\n\nroot = BNode(1)\nroot.left_node = BNode(2)\nroot.right_node = BNode(3)\nroot.left_node.left_node = BNode(4)\nroot.left_node.right_node = BNode(5)\nroot.right_node.right_node = BNode(100)\n\n# we pass in the names here\nprint_btree(root, \n            val='value',\n            left='left_node',\n            right='right_node')\n\n'''\n\n __1__\n |   |\n_2_  3__\n| |    |\n4 5   100\n\n'''\n```\n\n저희 클래스는 다음과 같이 사용합니다:\n\n- 노드 대신 BNode\n- .val 대신 .value\n- .left 대신 .left_node\n- .right 대신 .right_node\n\n문제없이 이 이름들을 print_btree에 전달할 수 있습니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 일부로 매우 긴 값 이름을 지원합니다\n\n```js\nfrom print_btree import print_btree\n\nclass Node:\n    def __init__(self, val):\n        self.val = val\n        self.left = None\n        self.right = None\n\nroot = Node('apple')\nroot.left = Node('pie')\nroot.right = Node('juice')\nroot.left.left = Node('pear')\nroot.left.right = Node('pineapplejuice')\nroot.right.right = Node('durian')\n\nprint_btree(root)\n\n'''\n       ________apple________\n       |                   |\n _____pie_____           juice_\n |           |                |\npear   pineapplejuice       durian\n\n'''\n```\n\n물론, Node(`appleorangepearwithcherriesontop`) 같은 값이 들어있는 경우, 출력된 이진 트리 모양은 여전히 잘못 보일 수 있어요\n\n# 빠른 논리 요약\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n가정하에 이진 트리를 출력해야 한다고 가정합시다.\n\n```python\nclass Node:\n    def __init__(self, val):\n        self.val = val\n        self.left = None\n        self.right = None\n\nroot = Node('apple')\nroot.left = Node('pie')\nroot.right = Node('juice')\nroot.left.left = Node('pear')\nroot.left.right = Node('pineapplejuice')\nroot.right.right = Node('durian')\n\n'''\n       ________apple________\n       |                   |\n _____pie_____           juice_\n |           |                |\npear   pineapplejuice       durian\n'''\n```\n\n단계 1) 이진 트리를 2D 리스트로 변환하세요.\n\n```python\n# 입력\nroot\n\n# 출력\n[\n    ['apple'],\n    ['pie', 'juice'],\n    ['pear', 'pineapplejuice', None, 'durian']\n]\n\n# 참고: None 값은 순서를 유지하기 위해 유지됩니다.\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n테이블 태그를 마크다운 형식으로 변경해주세요.\n\nStep 2) 가장 아래에 있는 목록에서 문자열 생성하기\n\n```js\n['pear', 'pineapplejuice', None, 'durian']\n\n# 다음과 같은 형태로 변환\n\n'pear   pineapplejuice  ?   durian'\n\n# None 값은 ?으로 변환됩니다\n```\n\nStep 3) 이전 문자열에서 값과 일치하는 파이프 |를 포함하는 문자열 생성하기\n\n```js\n# 다음과 같은 문자열에서\n'pear   pineapplejuice  ?   durian'\n\n# 다음을 생성\n' |           |          |    |'\n\n\n# 현재는 트리의 기초만 갖추어져 있습니다\n'''\n |           |         |     |\npear   pineapplejuice  ?   durian\n'''\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n\"4단계) 다음으로 아래에 있는 목록에서 문자열 생성하기\n\n```js\n# from \n['pie', 'juice']    # 그리고\n' |        |      |      |  '\n\n# generate\n' _____pie_____           juice_'\n\n\n# 현재 우리가 가지고 있는 것\n'''\n _____pie_____          _juice_\n |           |          |     |\npear   pineapplejuice   ?   durian\n'''\n```\n\n5단계) 루트에 도달할 때까지 단계 3과 4 반복하기\n\n```js\n'''\n _____pie_____          _juice_\n |           |          |     |\npear   pineapplejuice   ?   durian\n'''\n\n# 다음으로\n\n'''\n       |                   |\n _____pie_____          _juice_\n |           |          |     |\npear   pineapplejuice   ?   durian\n'''\n\n# 그리고 아래처럼 변환됩니다\n\n'''\n       ________apple________\n       |                   |\n _____pie_____          _juice_\n |           |          |     |\npear   pineapplejuice   ?   durian\n'''\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 결론\n\n이 작은 프로젝트가 이진 트리와 힙 등을 다룰 때 조금이나마 도움이 되었으면 좋겠어요.\n\n만약 버그를 발견하거나 이 패키지에 대한 제안이 있으시다면 언제든지 알려주세요!\n\n응원합니다\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 만약 제가 만든 작품을 지원하고 싶다면\n\n- 제 책을 구입해주세요! — 101가지 파이썬에 대해 몰랐던 것들\n- 구입처: [여기를 클릭하세요](https://payhip.com/b/vywcf)\n- 이 이야기에 박수를 50번 치십시오\n- 여러분의 생각을 댓글로 나누어 주세요\n- 이야기 중에서 가장 좋아하는 부분을 강조해 주세요\n\n감사합니다! 이런 작은 동작들이 큰 도움이 되고, 저는 정말로 감사하게 생각합니다!\n\nYouTube: [여기를 클릭하세요](https://www.youtube.com/@zlliu246)\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nLinkedIn: [https://www.linkedin.com/in/zlliu/](https://www.linkedin.com/in/zlliu/)","ogImage":{"url":"/TIL/assets/img/2024-07-12-ICreatedAPythonPackageToPrintBinaryTreesForFun_0.png"},"coverImage":"/TIL/assets/img/2024-07-12-ICreatedAPythonPackageToPrintBinaryTreesForFun_0.png","tag":["Tech"],"readingTime":8},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/TIL/assets/img/2024-07-12-ICreatedAPythonPackageToPrintBinaryTreesForFun_0.png\">\n<p>이번에 이진 트리와 힙을 다루다가, 나만의 트리를 빠르고 쉽게 표시하고 시각화하는 방법이 필요했어요.</p>\n<p>그래서 온라인에서 Python 패키지를 검색해보니 몇 개가 그 역할을 해줄 수 있었어요. 그래도 사용하기가 귀찮은 경우가 많았어요.</p>\n<p>기존 솔루션을 사용하고 코드를 약간 더 써가며 내 시간을 낭비하는 대신, 개발자들이 흔히 하는 것처럼, 몇 일을 허비해서 처음부터 내가 직접 패키지를 만들기로 결정했죠.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>내 패키지 — print-btree</h1>\n<p>내 패키지를 설치하는 방법:</p>\n<pre><code class=\"hljs language-js\">pip install print-btree\n</code></pre>\n<p>Github: <a href=\"https://github.com/zlliu246/print_btree\" rel=\"nofollow\" target=\"_blank\">https://github.com/zlliu246/print_btree</a></p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>기본 사용 방법</h1>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">from</span> print_btree <span class=\"hljs-keyword\">import</span> print_btree\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Node</span>:\n    def <span class=\"hljs-title function_\">__init__</span>(self, val):\n        self.<span class=\"hljs-property\">val</span> = val\n        self.<span class=\"hljs-property\">left</span> = <span class=\"hljs-title class_\">None</span>\n        self.<span class=\"hljs-property\">right</span> = <span class=\"hljs-title class_\">None</span>\n\n# 이진 트리를 만드세요\nroot = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-number\">1</span>)\nroot.<span class=\"hljs-property\">left</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-number\">2</span>)\nroot.<span class=\"hljs-property\">right</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-number\">3</span>)\nroot.<span class=\"hljs-property\">left</span>.<span class=\"hljs-property\">left</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-number\">4</span>)\nroot.<span class=\"hljs-property\">left</span>.<span class=\"hljs-property\">right</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-number\">5</span>)\n\n<span class=\"hljs-title function_\">print_btree</span>(root)\n\n<span class=\"hljs-string\">''</span><span class=\"hljs-string\">'\n\n __1__\n |   |\n_2_  3 \n| |    \n4 5   \n\n'</span><span class=\"hljs-string\">''</span>\n</code></pre>\n<p>만약 이진 트리 Node가 .val .left 및 .right를 사용한다면, print_btree 함수를 간단히 가져와 트리를 출력할 수 있습니다</p>\n<h1>노드가 다른 이름을 사용하는 경우 어떻게 하나요?</h1>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">from</span> print_btree <span class=\"hljs-keyword\">import</span> print_btree\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BNode</span>:\n    def <span class=\"hljs-title function_\">__init__</span>(self, value):\n        self.<span class=\"hljs-property\">value</span> = value\n        self.<span class=\"hljs-property\">left_node</span> = <span class=\"hljs-title class_\">None</span>\n        self.<span class=\"hljs-property\">right_node</span> = <span class=\"hljs-title class_\">None</span>\n\nroot = <span class=\"hljs-title class_\">BNode</span>(<span class=\"hljs-number\">1</span>)\nroot.<span class=\"hljs-property\">left_node</span> = <span class=\"hljs-title class_\">BNode</span>(<span class=\"hljs-number\">2</span>)\nroot.<span class=\"hljs-property\">right_node</span> = <span class=\"hljs-title class_\">BNode</span>(<span class=\"hljs-number\">3</span>)\nroot.<span class=\"hljs-property\">left_node</span>.<span class=\"hljs-property\">left_node</span> = <span class=\"hljs-title class_\">BNode</span>(<span class=\"hljs-number\">4</span>)\nroot.<span class=\"hljs-property\">left_node</span>.<span class=\"hljs-property\">right_node</span> = <span class=\"hljs-title class_\">BNode</span>(<span class=\"hljs-number\">5</span>)\nroot.<span class=\"hljs-property\">right_node</span>.<span class=\"hljs-property\">right_node</span> = <span class=\"hljs-title class_\">BNode</span>(<span class=\"hljs-number\">100</span>)\n\n# we pass <span class=\"hljs-keyword\">in</span> the names here\n<span class=\"hljs-title function_\">print_btree</span>(root, \n            val=<span class=\"hljs-string\">'value'</span>,\n            left=<span class=\"hljs-string\">'left_node'</span>,\n            right=<span class=\"hljs-string\">'right_node'</span>)\n\n<span class=\"hljs-string\">''</span><span class=\"hljs-string\">'\n\n __1__\n |   |\n_2_  3__\n| |    |\n4 5   100\n\n'</span><span class=\"hljs-string\">''</span>\n</code></pre>\n<p>저희 클래스는 다음과 같이 사용합니다:</p>\n<ul>\n<li>노드 대신 BNode</li>\n<li>.val 대신 .value</li>\n<li>.left 대신 .left_node</li>\n<li>.right 대신 .right_node</li>\n</ul>\n<p>문제없이 이 이름들을 print_btree에 전달할 수 있습니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>일부로 매우 긴 값 이름을 지원합니다</h1>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">from</span> print_btree <span class=\"hljs-keyword\">import</span> print_btree\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Node</span>:\n    def <span class=\"hljs-title function_\">__init__</span>(self, val):\n        self.<span class=\"hljs-property\">val</span> = val\n        self.<span class=\"hljs-property\">left</span> = <span class=\"hljs-title class_\">None</span>\n        self.<span class=\"hljs-property\">right</span> = <span class=\"hljs-title class_\">None</span>\n\nroot = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-string\">'apple'</span>)\nroot.<span class=\"hljs-property\">left</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-string\">'pie'</span>)\nroot.<span class=\"hljs-property\">right</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-string\">'juice'</span>)\nroot.<span class=\"hljs-property\">left</span>.<span class=\"hljs-property\">left</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-string\">'pear'</span>)\nroot.<span class=\"hljs-property\">left</span>.<span class=\"hljs-property\">right</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-string\">'pineapplejuice'</span>)\nroot.<span class=\"hljs-property\">right</span>.<span class=\"hljs-property\">right</span> = <span class=\"hljs-title class_\">Node</span>(<span class=\"hljs-string\">'durian'</span>)\n\n<span class=\"hljs-title function_\">print_btree</span>(root)\n\n<span class=\"hljs-string\">''</span><span class=\"hljs-string\">'\n       ________apple________\n       |                   |\n _____pie_____           juice_\n |           |                |\npear   pineapplejuice       durian\n\n'</span><span class=\"hljs-string\">''</span>\n</code></pre>\n<p>물론, Node(<code>appleorangepearwithcherriesontop</code>) 같은 값이 들어있는 경우, 출력된 이진 트리 모양은 여전히 잘못 보일 수 있어요</p>\n<h1>빠른 논리 요약</h1>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>가정하에 이진 트리를 출력해야 한다고 가정합시다.</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Node</span>:\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self, val</span>):\n        self.val = val\n        self.left = <span class=\"hljs-literal\">None</span>\n        self.right = <span class=\"hljs-literal\">None</span>\n\nroot = Node(<span class=\"hljs-string\">'apple'</span>)\nroot.left = Node(<span class=\"hljs-string\">'pie'</span>)\nroot.right = Node(<span class=\"hljs-string\">'juice'</span>)\nroot.left.left = Node(<span class=\"hljs-string\">'pear'</span>)\nroot.left.right = Node(<span class=\"hljs-string\">'pineapplejuice'</span>)\nroot.right.right = Node(<span class=\"hljs-string\">'durian'</span>)\n\n<span class=\"hljs-string\">'''\n       ________apple________\n       |                   |\n _____pie_____           juice_\n |           |                |\npear   pineapplejuice       durian\n'''</span>\n</code></pre>\n<p>단계 1) 이진 트리를 2D 리스트로 변환하세요.</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-comment\"># 입력</span>\nroot\n\n<span class=\"hljs-comment\"># 출력</span>\n[\n    [<span class=\"hljs-string\">'apple'</span>],\n    [<span class=\"hljs-string\">'pie'</span>, <span class=\"hljs-string\">'juice'</span>],\n    [<span class=\"hljs-string\">'pear'</span>, <span class=\"hljs-string\">'pineapplejuice'</span>, <span class=\"hljs-literal\">None</span>, <span class=\"hljs-string\">'durian'</span>]\n]\n\n<span class=\"hljs-comment\"># 참고: None 값은 순서를 유지하기 위해 유지됩니다.</span>\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>테이블 태그를 마크다운 형식으로 변경해주세요.</p>\n<p>Step 2) 가장 아래에 있는 목록에서 문자열 생성하기</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">'pear'</span>, <span class=\"hljs-string\">'pineapplejuice'</span>, <span class=\"hljs-title class_\">None</span>, <span class=\"hljs-string\">'durian'</span>]\n\n# 다음과 같은 형태로 변환\n\n<span class=\"hljs-string\">'pear   pineapplejuice  ?   durian'</span>\n\n# <span class=\"hljs-title class_\">None</span> 값은 ?으로 변환됩니다\n</code></pre>\n<p>Step 3) 이전 문자열에서 값과 일치하는 파이프 |를 포함하는 문자열 생성하기</p>\n<pre><code class=\"hljs language-js\"># 다음과 같은 문자열에서\n<span class=\"hljs-string\">'pear   pineapplejuice  ?   durian'</span>\n\n# 다음을 생성\n<span class=\"hljs-string\">' |           |          |    |'</span>\n\n\n# 현재는 트리의 기초만 갖추어져 있습니다\n<span class=\"hljs-string\">''</span><span class=\"hljs-string\">'\n |           |         |     |\npear   pineapplejuice  ?   durian\n'</span><span class=\"hljs-string\">''</span>\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>\"4단계) 다음으로 아래에 있는 목록에서 문자열 생성하기</p>\n<pre><code class=\"hljs language-js\"># <span class=\"hljs-keyword\">from</span> \n[<span class=\"hljs-string\">'pie'</span>, <span class=\"hljs-string\">'juice'</span>]    # 그리고\n<span class=\"hljs-string\">' |        |      |      |  '</span>\n\n# generate\n<span class=\"hljs-string\">' _____pie_____           juice_'</span>\n\n\n# 현재 우리가 가지고 있는 것\n<span class=\"hljs-string\">''</span><span class=\"hljs-string\">'\n _____pie_____          _juice_\n |           |          |     |\npear   pineapplejuice   ?   durian\n'</span><span class=\"hljs-string\">''</span>\n</code></pre>\n<p>5단계) 루트에 도달할 때까지 단계 3과 4 반복하기</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-string\">''</span><span class=\"hljs-string\">'\n _____pie_____          _juice_\n |           |          |     |\npear   pineapplejuice   ?   durian\n'</span><span class=\"hljs-string\">''</span>\n\n# 다음으로\n\n<span class=\"hljs-string\">''</span><span class=\"hljs-string\">'\n       |                   |\n _____pie_____          _juice_\n |           |          |     |\npear   pineapplejuice   ?   durian\n'</span><span class=\"hljs-string\">''</span>\n\n# 그리고 아래처럼 변환됩니다\n\n<span class=\"hljs-string\">''</span><span class=\"hljs-string\">'\n       ________apple________\n       |                   |\n _____pie_____          _juice_\n |           |          |     |\npear   pineapplejuice   ?   durian\n'</span><span class=\"hljs-string\">''</span>\n\n&#x3C;!-- <span class=\"hljs-variable constant_\">TIL</span> 수평 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n     <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n     <span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n     <span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"1549334788\"</span>\n     <span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n     <span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n# 결론\n\n이 작은 프로젝트가 이진 트리와 힙 등을 다룰 때 조금이나마 도움이 되었으면 좋겠어요.\n\n만약 버그를 발견하거나 이 패키지에 대한 제안이 있으시다면 언제든지 알려주세요!\n\n응원합니다\n\n&#x3C;!-- <span class=\"hljs-variable constant_\">TIL</span> 수평 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n     <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n     <span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n     <span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"1549334788\"</span>\n     <span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n     <span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n# 만약 제가 만든 작품을 지원하고 싶다면\n\n- 제 책을 구입해주세요! — <span class=\"hljs-number\">101</span>가지 파이썬에 대해 몰랐던 것들\n- 구입처: [여기를 클릭하세요](<span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//payhip.com/b/vywcf)</span>\n- 이 이야기에 박수를 <span class=\"hljs-number\">50</span>번 치십시오\n- 여러분의 생각을 댓글로 나누어 주세요\n- 이야기 중에서 가장 좋아하는 부분을 강조해 주세요\n\n감사합니다! 이런 작은 동작들이 큰 도움이 되고, 저는 정말로 감사하게 생각합니다!\n\n<span class=\"hljs-title class_\">YouTube</span>: [여기를 클릭하세요](<span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//www.youtube.com/@zlliu246)</span>\n\n&#x3C;!-- <span class=\"hljs-variable constant_\">TIL</span> 수평 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n     <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n     <span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n     <span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"1549334788\"</span>\n     <span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n     <span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n<span class=\"hljs-title class_\">LinkedIn</span>: [<span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//www.linkedin.com/in/zlliu/](https://www.linkedin.com/in/zlliu/)</span>\n</code></pre>\n</body>\n</html>\n"},"__N_SSG":true}