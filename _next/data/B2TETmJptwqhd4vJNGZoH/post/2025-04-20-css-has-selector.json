{"pageProps":{"post":{"title":"CSS :has() 선택자 사용 방법 정리","description":"","date":"2025-04-20 00:06","slug":"2025-04-20-css-has-selector","content":"\n안녕하세요! 오늘은 CSS에서 최근에 도입된 강력한 기능인 `:has()` 선택자에 대해 알아보겠습니다. 이 선택자는 부모 요소가 특정 자식 요소를 포함하고 있는지 여부에 따라 스타일을 적용할 수 있게 해줍니다. 자바스크립트 없이도 동적인 스타일링이 가능해졌다는 점에서 매우 유용합니다.\n\n## `:has()` 선택자란?\n\n`:has()`는 CSS의 관계형 의사 클래스(relational pseudo-class)로, 특정 자식 요소를 포함하는 부모 요소를 선택할 수 있게 해줍니다. 예를 들어, `<div>` 요소 중에서 `<p>` 요소를 포함하는 것만 선택하고 싶다면 다음과 같이 작성할 수 있습니다:\n\n```css\ndiv:has(p) {\n  background-color: #f0f0f0;\n}\n```\n\n이렇게 하면 `<p>` 요소를 포함한 `<div>`에만 배경색이 적용됩니다.\n\n## 실전 예제들\n\n### 1. 이미지가 있는 아티클 강조하기\n\n```html\n<article>\n  <h2>첫 번째 아티클</h2>\n  <p>내용이 여기에 있습니다.</p>\n</article>\n\n<article>\n  <h2>두 번째 아티클</h2>\n  <img src=\"image.jpg\" alt=\"이미지 설명\" />\n  <p>이미지가 포함된 아티클입니다.</p>\n</article>\n```\n\n```css\narticle:has(img) {\n  border: 2px solid #007acc;\n  padding: 10px;\n}\n```\n\n**설명**: 이미지가 포함된 아티클에만 테두리와 패딩을 적용하여 시각적으로 강조합니다.\n\n### 2. 서브메뉴가 있는 네비게이션 항목 표시하기\n\n```html\n<ul class=\"main-menu\">\n  <li>홈</li>\n  <li>\n    서비스\n    <ul class=\"sub-menu\">\n      <li>웹 개발</li>\n      <li>모바일 앱</li>\n    </ul>\n  </li>\n  <li>문의하기</li>\n</ul>\n```\n\n```css\n.main-menu > li:has(.sub-menu)::after {\n  content: \" ▼\";\n  font-size: 0.8em;\n  color: #555;\n}\n```\n\n**설명**: 서브메뉴가 있는 항목에만 화살표 기호를 추가하여 사용자가 하위 메뉴가 있음을 알 수 있도록 합니다.\n\n### 3. 입력 필드가 비어 있을 때 버튼 비활성화하기\n\n```html\n<form>\n  <input type=\"text\" id=\"username\" placeholder=\"사용자 이름\" />\n  <button type=\"submit\">제출</button>\n</form>\n```\n\n```css\nform:has(input:placeholder-shown) button {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n```\n\n**설명**: 입력 필드가 비어 있을 때 버튼의 배경색을 변경하고 커서를 비활성화 상태로 표시하여 제출을 방지합니다.\n\n## 주의할 점 및 참고 사항\n\n- **브라우저 지원**: `:has()` 선택자는 최신 브라우저에서 지원됩니다. [Can I use](https://caniuse.com/css-has)에 따르면, 대부분의 최신 브라우저에서 사용할 수 있지만, 일부 구형 브라우저에서는 지원되지 않을 수 있습니다.\n\n- **성능 고려**: 복잡한 선택자나 많은 요소에 `:has()`를 사용할 경우 성능에 영향을 줄 수 있으므로 주의해야 합니다.\n\n- **중첩 사용 제한**: `:has()` 선택자 안에 또 다른 `:has()`를 중첩해서 사용하는 것은 현재 지원되지 않습니다.\n\n## 마무리\n\n`:has()` 선택자는 CSS에서 부모 요소를 자식 요소의 상태에 따라 스타일링할 수 있게 해주는 강력한 도구입니다. 자바스크립트 없이도 동적인 스타일링이 가능해져 코드의 간결성과 유지보수성이 향상됩니다. 실무에서도 다양한 상황에 활용할 수 있으니, 적극적으로 사용해보시기 바랍니다!\n","ogImage":{"url":"/TIL/assets/img/2024-07-15-TechStackForProduction-ReadyLLMApplicationsIn2024_0.png"},"coverImage":"/TIL/assets/img/2025-04-20-css-has-selector.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>안녕하세요! 오늘은 CSS에서 최근에 도입된 강력한 기능인 <code>:has()</code> 선택자에 대해 알아보겠습니다. 이 선택자는 부모 요소가 특정 자식 요소를 포함하고 있는지 여부에 따라 스타일을 적용할 수 있게 해줍니다. 자바스크립트 없이도 동적인 스타일링이 가능해졌다는 점에서 매우 유용합니다.</p>\n<h2><code>:has()</code> 선택자란?</h2>\n<p><code>:has()</code>는 CSS의 관계형 의사 클래스(relational pseudo-class)로, 특정 자식 요소를 포함하는 부모 요소를 선택할 수 있게 해줍니다. 예를 들어, <code>&#x3C;div></code> 요소 중에서 <code>&#x3C;p></code> 요소를 포함하는 것만 선택하고 싶다면 다음과 같이 작성할 수 있습니다:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:has</span>(<span class=\"hljs-selector-tag\">p</span>) {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#f0f0f0</span>;\n}\n</code></pre>\n<p>이렇게 하면 <code>&#x3C;p></code> 요소를 포함한 <code>&#x3C;div></code>에만 배경색이 적용됩니다.</p>\n<h2>실전 예제들</h2>\n<h3>1. 이미지가 있는 아티클 강조하기</h3>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>첫 번째 아티클<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>내용이 여기에 있습니다.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>두 번째 아티클<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"image.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"이미지 설명\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>이미지가 포함된 아티클입니다.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">article</span><span class=\"hljs-selector-pseudo\">:has</span>(<span class=\"hljs-selector-tag\">img</span>) {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> solid <span class=\"hljs-number\">#007acc</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span>;\n}\n</code></pre>\n<p><strong>설명</strong>: 이미지가 포함된 아티클에만 테두리와 패딩을 적용하여 시각적으로 강조합니다.</p>\n<h3>2. 서브메뉴가 있는 네비게이션 항목 표시하기</h3>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"main-menu\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>홈<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>\n    서비스\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"sub-menu\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>웹 개발<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>모바일 앱<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>문의하기<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.main-menu</span> > <span class=\"hljs-selector-tag\">li</span><span class=\"hljs-selector-pseudo\">:has</span>(<span class=\"hljs-selector-class\">.sub-menu</span>)<span class=\"hljs-selector-pseudo\">::after</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">\" ▼\"</span>;\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">0.8em</span>;\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#555</span>;\n}\n</code></pre>\n<p><strong>설명</strong>: 서브메뉴가 있는 항목에만 화살표 기호를 추가하여 사용자가 하위 메뉴가 있음을 알 수 있도록 합니다.</p>\n<h3>3. 입력 필드가 비어 있을 때 버튼 비활성화하기</h3>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"username\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"사용자 이름\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span>></span>제출<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">form</span><span class=\"hljs-selector-pseudo\">:has</span>(<span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:placeholder-shown</span>) <span class=\"hljs-selector-tag\">button</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#ccc</span>;\n  <span class=\"hljs-attribute\">cursor</span>: not-allowed;\n}\n</code></pre>\n<p><strong>설명</strong>: 입력 필드가 비어 있을 때 버튼의 배경색을 변경하고 커서를 비활성화 상태로 표시하여 제출을 방지합니다.</p>\n<h2>주의할 점 및 참고 사항</h2>\n<ul>\n<li>\n<p><strong>브라우저 지원</strong>: <code>:has()</code> 선택자는 최신 브라우저에서 지원됩니다. <a href=\"https://caniuse.com/css-has\" rel=\"nofollow\" target=\"_blank\">Can I use</a>에 따르면, 대부분의 최신 브라우저에서 사용할 수 있지만, 일부 구형 브라우저에서는 지원되지 않을 수 있습니다.</p>\n</li>\n<li>\n<p><strong>성능 고려</strong>: 복잡한 선택자나 많은 요소에 <code>:has()</code>를 사용할 경우 성능에 영향을 줄 수 있으므로 주의해야 합니다.</p>\n</li>\n<li>\n<p><strong>중첩 사용 제한</strong>: <code>:has()</code> 선택자 안에 또 다른 <code>:has()</code>를 중첩해서 사용하는 것은 현재 지원되지 않습니다.</p>\n</li>\n</ul>\n<h2>마무리</h2>\n<p><code>:has()</code> 선택자는 CSS에서 부모 요소를 자식 요소의 상태에 따라 스타일링할 수 있게 해주는 강력한 도구입니다. 자바스크립트 없이도 동적인 스타일링이 가능해져 코드의 간결성과 유지보수성이 향상됩니다. 실무에서도 다양한 상황에 활용할 수 있으니, 적극적으로 사용해보시기 바랍니다!</p>\n</body>\n</html>\n"},"__N_SSG":true}