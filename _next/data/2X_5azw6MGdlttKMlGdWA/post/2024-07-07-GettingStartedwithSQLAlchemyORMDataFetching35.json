{"pageProps":{"post":{"title":"SQLAlchemy ORM 시작하기  데이터 가져오기 버전 35","description":"","date":"2024-07-07 21:46","slug":"2024-07-07-GettingStartedwithSQLAlchemyORMDataFetching35","content":"\n![이미지](/TIL/assets/img/2024-07-07-GettingStartedwithSQLAlchemyORMDataFetching35_0.png)\n\nORM에서 Core와 동일하게 많은 것들이 작동합니다. 한 가지 다른 점은 연결 실행 방법 대신 세션을 사용한다는 것입니다.\n\n## ID로 가져오기\n\n만약 ID로 사용자를 가져오고 싶다면, 두 가지 옵션이 있습니다. session.query와 session.get을 사용할 수 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n세션에서 get 메서드를 직접 사용할 수 있으며, Todo 클래스와 기본 키를 전달해야 합니다.\n\n```python\nfrom sqlalchemy import create_engine, Column, Integer, Text\nfrom sqlalchemy.orm import Session, DeclarativeBase\n\nclass Base(DeclarativeBase):\n    pass\n\nclass Todo(Base):\n    __tablename__ = \"todos\"\n\n    id = Column(Integer, primary_key=True)\n    label = Column(Text, nullable=False)\n    status = Column(Text, nullable=False)\n\n# Base.metadata.drop_all(engine)\n# Base.metadata.create_all(engine)\n\ntodos = [\n    Todo(label=\"Walk a dog\", status=\"doing\"),\n    Todo(label=\"Shopping\", status=\"in_progress\"),\n]\n\nwith Session(engine) as session:\n    # session.add_all(todos)\n    # session.commit()\n\n    result = (\n        session.get(Todo, 1)\n    )\n\n    print(result.id, result.label, result.status)  # 1 Walk a dog doing\n```\n\n기본 키를 사용하지 않거나 다른 열에서 검색하려는 경우 where 메서드를 사용할 수 있습니다. 이 경우에는 예를 들어서...\n","ogImage":{"url":"/assets/img/2024-07-07-GettingStartedwithSQLAlchemyORMDataFetching35_0.png"},"coverImage":"/TIL/assets/img/2024-07-07-GettingStartedwithSQLAlchemyORMDataFetching35_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/TIL/assets/img/2024-07-07-GettingStartedwithSQLAlchemyORMDataFetching35_0.png\" alt=\"이미지\"></p>\n<p>ORM에서 Core와 동일하게 많은 것들이 작동합니다. 한 가지 다른 점은 연결 실행 방법 대신 세션을 사용한다는 것입니다.</p>\n<h2>ID로 가져오기</h2>\n<p>만약 ID로 사용자를 가져오고 싶다면, 두 가지 옵션이 있습니다. session.query와 session.get을 사용할 수 있습니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>세션에서 get 메서드를 직접 사용할 수 있으며, Todo 클래스와 기본 키를 전달해야 합니다.</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> sqlalchemy <span class=\"hljs-keyword\">import</span> create_engine, Column, Integer, Text\n<span class=\"hljs-keyword\">from</span> sqlalchemy.orm <span class=\"hljs-keyword\">import</span> Session, DeclarativeBase\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Base</span>(<span class=\"hljs-title class_ inherited__\">DeclarativeBase</span>):\n    <span class=\"hljs-keyword\">pass</span>\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Todo</span>(<span class=\"hljs-title class_ inherited__\">Base</span>):\n    __tablename__ = <span class=\"hljs-string\">\"todos\"</span>\n\n    <span class=\"hljs-built_in\">id</span> = Column(Integer, primary_key=<span class=\"hljs-literal\">True</span>)\n    label = Column(Text, nullable=<span class=\"hljs-literal\">False</span>)\n    status = Column(Text, nullable=<span class=\"hljs-literal\">False</span>)\n\n<span class=\"hljs-comment\"># Base.metadata.drop_all(engine)</span>\n<span class=\"hljs-comment\"># Base.metadata.create_all(engine)</span>\n\ntodos = [\n    Todo(label=<span class=\"hljs-string\">\"Walk a dog\"</span>, status=<span class=\"hljs-string\">\"doing\"</span>),\n    Todo(label=<span class=\"hljs-string\">\"Shopping\"</span>, status=<span class=\"hljs-string\">\"in_progress\"</span>),\n]\n\n<span class=\"hljs-keyword\">with</span> Session(engine) <span class=\"hljs-keyword\">as</span> session:\n    <span class=\"hljs-comment\"># session.add_all(todos)</span>\n    <span class=\"hljs-comment\"># session.commit()</span>\n\n    result = (\n        session.get(Todo, <span class=\"hljs-number\">1</span>)\n    )\n\n    <span class=\"hljs-built_in\">print</span>(result.<span class=\"hljs-built_in\">id</span>, result.label, result.status)  <span class=\"hljs-comment\"># 1 Walk a dog doing</span>\n</code></pre>\n<p>기본 키를 사용하지 않거나 다른 열에서 검색하려는 경우 where 메서드를 사용할 수 있습니다. 이 경우에는 예를 들어서...</p>\n</body>\n</html>\n"},"__N_SSG":true}