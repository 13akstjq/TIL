{"pageProps":{"post":{"title":"빠른 푸리에 변환을 이용한 주식 시장 신호 분석 방법","description":"","date":"2024-07-09 15:03","slug":"2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform","content":"\n# 소개\n\n금융 시장은 본질적으로 소음이 많고 예측할 수 없어서, 수익성 있는 기회를 식별하고 활용하려는 트레이더와 투자자에게 상당한 어려움을 줍니다.\n\n이 복잡성을 해결하기 위해 현대 트레이더들은 수학적 및 통계적 기술을 활용하여 소음을 걸러내고 데이터의 기저 주기/트렌드를 더 명확히 이해하기 위한 다양한 기법을 사용합니다. FFT(Fast Fourier Transform) 알고리즘은 이러한 강력한 도구 중 하나로, 어떤 신호/파형을 주파수가 변하는 사인 성분들의 합으로 표현하는 데 사용되는 알고리즘입니다. 따라서 시간 영역에서 주파수 영역으로 신호를 변환합니다.\n\n![image](https://miro.medium.com/v2/resize:fit:1400/1*e-_z80BnbHWyFTfRLblJ_w.gif)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 기사에서 논의하는 FFT 알고리즘은 신호 처리를 사용하여 가장 중요한 주파수를 감지하고 데이터에서 잡음을 제거합니다.\n\n# FFT를 사용하는 이유?\n\n## 주기와 패턴 감지\n\n주식 가격이나 거래량과 같은 금융 시계열은 다양한 경제 주기, 계절성 또는 투자자 행동으로 인해 주기적인 패턴을 나타내는 경우가 많습니다. 푸리에 변환은 이러한 주기와 해당 주파수를 식별하는 데 도움이 됩니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 소음 필터링\n\n금융 데이터는 종종 무작위 변동으로 인해 소음이 발생합니다. 데이터를 주파수 영역으로 변환하여 분석가들은 고주파 소음을 제거하여 중요한 저주파수 트렌드에 집중할 수 있습니다.\n\n## 예측 모델링\n\n주파수를 식별함으로써, 분석가들은 역사적인 패턴을 기반으로 미래 가격 변동이나 트렌드에 대한 예측을 할 수 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 기계 학습을 위한 기능 추출\n\nFourier 변환에서 얻은 주파수 구성 요소는 머신 러닝 모델에서 특징으로 사용되어 예측의 정확도를 향상시킬 수 있습니다.\n\n# 코드 및 단계별 분석\n\n## 노트북 설정 및 주식 데이터 수집\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n필요한 기본 주식 데이터 수집 및 데이터 프레임 조작을 위한 라이브러리 가져오기가 첫 번째 단계입니다.\n\n또한, 분석 기간을 1년으로 설정하고 분석할 주식은 Tata Consultancy Services (TCS)입니다. 필요한 주식의 OLHCAV 데이터는 'df'라는 데이터 프레임에 저장되어 있습니다.\n\n```js\n#라이브러리 가져오기\nimport pandas as pd\nfrom pandas_datareader import data as pdr\nimport numpy as np\nimport math\nimport datetime\nimport scipy.stats as stats\nimport matplotlib.pyplot as plt\nimport yfinance as yfin\nyfin.pdr_override()\n\n# 분석 기간 설정\nend_date = datetime.datetime.now()\nstart_date = end_date - datetime.timedelta(365)\nticker = 'TCS'\n\ndf = pdr.get_data_yahoo(ticker + '.NS', start = start_date, end = end_date)\n```\n\n## FFT의 적용\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nnp.fft.fft()을 사용하여 푸리에 변환을 수행할 것이며, np.fft.fftfreq()를 사용하여 주파수를 얻을 것입니다. 가장 중요한 주파수가 나타나는 때를 나타내기 위해 진폭 대 주기를 그래프로 그려볼 수 있습니다.\n\n```js\nfft_result = np.fft.fft(df['Close'])\nfrequencies = np.fft.fftfreq(len(fft_result), d=1)  # assuming daily data, d=1\nmagnitude = np.abs(fft_result)\nperiods = 1 / frequencies\n```\n\n## 가격 및 주파수 영역 표현 시각화\n\n아래의 주파수 플롯은 시계열 내에서 우세한 주파수를 강조합니다. 이러한 주파수는 역 FFT를 수행하거나 원래 시계열을 다시 만들거나 잡음을 줄인 버전을 생성하는 데 사용될 수 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\n# 가격의 간단한 시각화\nplt.figure(figsize=(10, 8))\nplt.subplot(2, 1, 1)\nplt.plot(df.index, df['Close'])\nplt.title('TCS 시계열')\nplt.xlabel('날짜')\nplt.ylabel('가격')\n\n# 주파수 도메인 표현\nplt.subplot(2, 1, 2)\nplt.plot(periods, magnitude)\nplt.title('TCS의 FFT')\nplt.xlabel('기간 (일)')\nplt.ylabel('크기')\nplt.xlim(0, max(periods[1:]))  # 중요한 주기를 보기 위한 x-축 제한 (큰 주기 무시)\nplt.ylim(0, max(magnitude[1:]) * 1.1)  # 제로 주파수 구성요소 무시\n\nplt.tight_layout()\nplt.show()\n```\n\n<img src=\"/TIL/assets/img/2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform_0.png\" />\n\n하지만, 이러한 우세 주파수의 중요성은 단순히 시계열을 재구성하는 데서 그치지 않습니다. 이들은 시계열 구조에 영향을 미치는 주요 경제 보고서나 거시경제 사건과 관련될 수 있습니다.\n\n## 원래 주식 시장 데이터 복구하기\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nnp.fft.ifft() 함수를 사용하여 원래의 시계열을 복원할 수 있습니다. 이 함수는 fft_results를 역변환합니다. 아래 그래프에서 볼 수 있듯이 완벽하게 재구성되었습니다.\n\n```js\nrecovered = np.fft.ifft(fft_result);\nplt.figure((figsize = (14, 6)));\nplt.plot(df.index, df[\"Close\"], (label = \"Original\"));\nplt.plot(df.index, recovered, (label = \"Recovered\"));\nplt.title(\"TCS 시계열: FFT 역변환\");\nplt.xlabel(\"날짜\");\nplt.ylabel(\"가격\");\nplt.legend();\nplt.show();\n```\n\n<img src=\"/TIL/assets/img/2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform_1.png\" />\n\n## 주요 주파수를 갖는 파형의 재구성\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이것은 상위 25개 FFT 주파수만 사용하여 재구성된 신호를 생성합니다. 이것은 데이터의 노이즈 제거를 의미합니다.\n\n```js\ndominant_periods = pd.Series(periods, (index = magnitude)).nlargest(25);\ndominant_periods.to_frame(\"주기 (일)\");\ntop_periods = dominant_periods.index;\ntop_fft_result = fft_result.copy();\ntop_fft_result[np.abs(frequencies) > 1 / top_periods.min()] = 0;\ntop_recovered = np.fft.ifft(top_fft_result);\n\nplt.figure((figsize = (14, 6)));\nplt.plot(df.index, df[\"Close\"], (label = \"원본\"));\nplt.plot(df.index, top_recovered, (label = \"복원된\"));\nplt.title(\"TCS 시계열: FFT 역변환\");\nplt.xlabel(\"날짜\");\nplt.ylabel(\"가격\");\nplt.legend();\nplt.show();\n```\n\n<img src=\"/TIL/assets/img/2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform_2.png\" />\n\n# 결론\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 문서에서 설명한 알고리즘은 산업 전문가들이 사용하는 분석을 지나치게 단순화한 것입니다. 성능을 개선하기 위해 일반적으로 매일 모델을 조정합니다.\n\n도움이 되었기를 바라며, 여기에 GitHub 파일을 찾을 수 있습니다: [https://github.com/karantha-kur/Signal-Analysis-Using-FFT/tree/main](https://github.com/karantha-kur/Signal-Analysis-Using-FFT/tree/main)\n","ogImage":{"url":"/assets/img/2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform_0.png"},"coverImage":"/TIL/assets/img/2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform_0.png","tag":["Tech"],"readingTime":7},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>소개</h1>\n<p>금융 시장은 본질적으로 소음이 많고 예측할 수 없어서, 수익성 있는 기회를 식별하고 활용하려는 트레이더와 투자자에게 상당한 어려움을 줍니다.</p>\n<p>이 복잡성을 해결하기 위해 현대 트레이더들은 수학적 및 통계적 기술을 활용하여 소음을 걸러내고 데이터의 기저 주기/트렌드를 더 명확히 이해하기 위한 다양한 기법을 사용합니다. FFT(Fast Fourier Transform) 알고리즘은 이러한 강력한 도구 중 하나로, 어떤 신호/파형을 주파수가 변하는 사인 성분들의 합으로 표현하는 데 사용되는 알고리즘입니다. 따라서 시간 영역에서 주파수 영역으로 신호를 변환합니다.</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:1400/1*e-_z80BnbHWyFTfRLblJ_w.gif\" alt=\"image\"></p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>이 기사에서 논의하는 FFT 알고리즘은 신호 처리를 사용하여 가장 중요한 주파수를 감지하고 데이터에서 잡음을 제거합니다.</p>\n<h1>FFT를 사용하는 이유?</h1>\n<h2>주기와 패턴 감지</h2>\n<p>주식 가격이나 거래량과 같은 금융 시계열은 다양한 경제 주기, 계절성 또는 투자자 행동으로 인해 주기적인 패턴을 나타내는 경우가 많습니다. 푸리에 변환은 이러한 주기와 해당 주파수를 식별하는 데 도움이 됩니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>소음 필터링</h2>\n<p>금융 데이터는 종종 무작위 변동으로 인해 소음이 발생합니다. 데이터를 주파수 영역으로 변환하여 분석가들은 고주파 소음을 제거하여 중요한 저주파수 트렌드에 집중할 수 있습니다.</p>\n<h2>예측 모델링</h2>\n<p>주파수를 식별함으로써, 분석가들은 역사적인 패턴을 기반으로 미래 가격 변동이나 트렌드에 대한 예측을 할 수 있습니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>기계 학습을 위한 기능 추출</h2>\n<p>Fourier 변환에서 얻은 주파수 구성 요소는 머신 러닝 모델에서 특징으로 사용되어 예측의 정확도를 향상시킬 수 있습니다.</p>\n<h1>코드 및 단계별 분석</h1>\n<h2>노트북 설정 및 주식 데이터 수집</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>필요한 기본 주식 데이터 수집 및 데이터 프레임 조작을 위한 라이브러리 가져오기가 첫 번째 단계입니다.</p>\n<p>또한, 분석 기간을 1년으로 설정하고 분석할 주식은 Tata Consultancy Services (TCS)입니다. 필요한 주식의 OLHCAV 데이터는 'df'라는 데이터 프레임에 저장되어 있습니다.</p>\n<pre><code class=\"hljs language-js\">#라이브러리 가져오기\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">from</span> pandas_datareader <span class=\"hljs-keyword\">import</span> data <span class=\"hljs-keyword\">as</span> pdr\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">import</span> math\n<span class=\"hljs-keyword\">import</span> datetime\n<span class=\"hljs-keyword\">import</span> scipy.<span class=\"hljs-property\">stats</span> <span class=\"hljs-keyword\">as</span> stats\n<span class=\"hljs-keyword\">import</span> matplotlib.<span class=\"hljs-property\">pyplot</span> <span class=\"hljs-keyword\">as</span> plt\n<span class=\"hljs-keyword\">import</span> yfinance <span class=\"hljs-keyword\">as</span> yfin\nyfin.<span class=\"hljs-title function_\">pdr_override</span>()\n\n# 분석 기간 설정\nend_date = datetime.<span class=\"hljs-property\">datetime</span>.<span class=\"hljs-title function_\">now</span>()\nstart_date = end_date - datetime.<span class=\"hljs-title function_\">timedelta</span>(<span class=\"hljs-number\">365</span>)\nticker = <span class=\"hljs-string\">'TCS'</span>\n\ndf = pdr.<span class=\"hljs-title function_\">get_data_yahoo</span>(ticker + <span class=\"hljs-string\">'.NS'</span>, start = start_date, end = end_date)\n</code></pre>\n<h2>FFT의 적용</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>np.fft.fft()을 사용하여 푸리에 변환을 수행할 것이며, np.fft.fftfreq()를 사용하여 주파수를 얻을 것입니다. 가장 중요한 주파수가 나타나는 때를 나타내기 위해 진폭 대 주기를 그래프로 그려볼 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">fft_result = np.<span class=\"hljs-property\">fft</span>.<span class=\"hljs-title function_\">fft</span>(df[<span class=\"hljs-string\">'Close'</span>])\nfrequencies = np.<span class=\"hljs-property\">fft</span>.<span class=\"hljs-title function_\">fftfreq</span>(<span class=\"hljs-title function_\">len</span>(fft_result), d=<span class=\"hljs-number\">1</span>)  # assuming daily data, d=<span class=\"hljs-number\">1</span>\nmagnitude = np.<span class=\"hljs-title function_\">abs</span>(fft_result)\nperiods = <span class=\"hljs-number\">1</span> / frequencies\n</code></pre>\n<h2>가격 및 주파수 영역 표현 시각화</h2>\n<p>아래의 주파수 플롯은 시계열 내에서 우세한 주파수를 강조합니다. 이러한 주파수는 역 FFT를 수행하거나 원래 시계열을 다시 만들거나 잡음을 줄인 버전을 생성하는 데 사용될 수 있습니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\"># 가격의 간단한 시각화\nplt.<span class=\"hljs-title function_\">figure</span>(figsize=(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">8</span>))\nplt.<span class=\"hljs-title function_\">subplot</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>)\nplt.<span class=\"hljs-title function_\">plot</span>(df.<span class=\"hljs-property\">index</span>, df[<span class=\"hljs-string\">'Close'</span>])\nplt.<span class=\"hljs-title function_\">title</span>(<span class=\"hljs-string\">'TCS 시계열'</span>)\nplt.<span class=\"hljs-title function_\">xlabel</span>(<span class=\"hljs-string\">'날짜'</span>)\nplt.<span class=\"hljs-title function_\">ylabel</span>(<span class=\"hljs-string\">'가격'</span>)\n\n# 주파수 도메인 표현\nplt.<span class=\"hljs-title function_\">subplot</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>)\nplt.<span class=\"hljs-title function_\">plot</span>(periods, magnitude)\nplt.<span class=\"hljs-title function_\">title</span>(<span class=\"hljs-string\">'TCS의 FFT'</span>)\nplt.<span class=\"hljs-title function_\">xlabel</span>(<span class=\"hljs-string\">'기간 (일)'</span>)\nplt.<span class=\"hljs-title function_\">ylabel</span>(<span class=\"hljs-string\">'크기'</span>)\nplt.<span class=\"hljs-title function_\">xlim</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-title function_\">max</span>(periods[<span class=\"hljs-number\">1</span>:]))  # 중요한 주기를 보기 위한 x-축 제한 (큰 주기 무시)\nplt.<span class=\"hljs-title function_\">ylim</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-title function_\">max</span>(magnitude[<span class=\"hljs-number\">1</span>:]) * <span class=\"hljs-number\">1.1</span>)  # 제로 주파수 구성요소 무시\n\nplt.<span class=\"hljs-title function_\">tight_layout</span>()\nplt.<span class=\"hljs-title function_\">show</span>()\n</code></pre>\n<img src=\"/TIL/assets/img/2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform_0.png\">\n<p>하지만, 이러한 우세 주파수의 중요성은 단순히 시계열을 재구성하는 데서 그치지 않습니다. 이들은 시계열 구조에 영향을 미치는 주요 경제 보고서나 거시경제 사건과 관련될 수 있습니다.</p>\n<h2>원래 주식 시장 데이터 복구하기</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>np.fft.ifft() 함수를 사용하여 원래의 시계열을 복원할 수 있습니다. 이 함수는 fft_results를 역변환합니다. 아래 그래프에서 볼 수 있듯이 완벽하게 재구성되었습니다.</p>\n<pre><code class=\"hljs language-js\">recovered = np.<span class=\"hljs-property\">fft</span>.<span class=\"hljs-title function_\">ifft</span>(fft_result);\nplt.<span class=\"hljs-title function_\">figure</span>((figsize = (<span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">6</span>)));\nplt.<span class=\"hljs-title function_\">plot</span>(df.<span class=\"hljs-property\">index</span>, df[<span class=\"hljs-string\">\"Close\"</span>], (label = <span class=\"hljs-string\">\"Original\"</span>));\nplt.<span class=\"hljs-title function_\">plot</span>(df.<span class=\"hljs-property\">index</span>, recovered, (label = <span class=\"hljs-string\">\"Recovered\"</span>));\nplt.<span class=\"hljs-title function_\">title</span>(<span class=\"hljs-string\">\"TCS 시계열: FFT 역변환\"</span>);\nplt.<span class=\"hljs-title function_\">xlabel</span>(<span class=\"hljs-string\">\"날짜\"</span>);\nplt.<span class=\"hljs-title function_\">ylabel</span>(<span class=\"hljs-string\">\"가격\"</span>);\nplt.<span class=\"hljs-title function_\">legend</span>();\nplt.<span class=\"hljs-title function_\">show</span>();\n</code></pre>\n<img src=\"/TIL/assets/img/2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform_1.png\">\n<h2>주요 주파수를 갖는 파형의 재구성</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>이것은 상위 25개 FFT 주파수만 사용하여 재구성된 신호를 생성합니다. 이것은 데이터의 노이즈 제거를 의미합니다.</p>\n<pre><code class=\"hljs language-js\">dominant_periods = pd.<span class=\"hljs-title class_\">Series</span>(periods, (index = magnitude)).<span class=\"hljs-title function_\">nlargest</span>(<span class=\"hljs-number\">25</span>);\ndominant_periods.<span class=\"hljs-title function_\">to_frame</span>(<span class=\"hljs-string\">\"주기 (일)\"</span>);\ntop_periods = dominant_periods.<span class=\"hljs-property\">index</span>;\ntop_fft_result = fft_result.<span class=\"hljs-title function_\">copy</span>();\ntop_fft_result[np.<span class=\"hljs-title function_\">abs</span>(frequencies) > <span class=\"hljs-number\">1</span> / top_periods.<span class=\"hljs-title function_\">min</span>()] = <span class=\"hljs-number\">0</span>;\ntop_recovered = np.<span class=\"hljs-property\">fft</span>.<span class=\"hljs-title function_\">ifft</span>(top_fft_result);\n\nplt.<span class=\"hljs-title function_\">figure</span>((figsize = (<span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">6</span>)));\nplt.<span class=\"hljs-title function_\">plot</span>(df.<span class=\"hljs-property\">index</span>, df[<span class=\"hljs-string\">\"Close\"</span>], (label = <span class=\"hljs-string\">\"원본\"</span>));\nplt.<span class=\"hljs-title function_\">plot</span>(df.<span class=\"hljs-property\">index</span>, top_recovered, (label = <span class=\"hljs-string\">\"복원된\"</span>));\nplt.<span class=\"hljs-title function_\">title</span>(<span class=\"hljs-string\">\"TCS 시계열: FFT 역변환\"</span>);\nplt.<span class=\"hljs-title function_\">xlabel</span>(<span class=\"hljs-string\">\"날짜\"</span>);\nplt.<span class=\"hljs-title function_\">ylabel</span>(<span class=\"hljs-string\">\"가격\"</span>);\nplt.<span class=\"hljs-title function_\">legend</span>();\nplt.<span class=\"hljs-title function_\">show</span>();\n</code></pre>\n<img src=\"/TIL/assets/img/2024-07-09-StockMarketSignalAnalysisUsingFastFourierTransform_2.png\">\n<h1>결론</h1>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>이 문서에서 설명한 알고리즘은 산업 전문가들이 사용하는 분석을 지나치게 단순화한 것입니다. 성능을 개선하기 위해 일반적으로 매일 모델을 조정합니다.</p>\n<p>도움이 되었기를 바라며, 여기에 GitHub 파일을 찾을 수 있습니다: <a href=\"https://github.com/karantha-kur/Signal-Analysis-Using-FFT/tree/main\" rel=\"nofollow\" target=\"_blank\">https://github.com/karantha-kur/Signal-Analysis-Using-FFT/tree/main</a></p>\n</body>\n</html>\n"},"__N_SSG":true}