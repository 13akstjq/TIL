{"pageProps":{"posts":[{"title":"파이썬  데이터 분석 프로젝트 1 15개의 해결된 질문 포함","description":"","date":"2024-07-07 02:26","slug":"2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions","content":"\n## 날씨 데이터 분석\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_0.png)\n\n이 글에서는 날씨 데이터셋을 활용한 데이터 분석을 배워보겠습니다. 주어진 질문을 해결하기 위해 Python 프로그래밍 언어를 사용할 것입니다. 이곳에서 사용하는 IDE는 Jupyter Notebook입니다. Jupyter Lab, Google Colab 등 다른 IDE도 사용할 수 있습니다.\n\n날씨 데이터셋은 특정 위치에서 발생한 날씨 조건에 대한 시계열 데이터 세트입니다. 온도, 이슬점 온도, 상대 습도, 풍속, 가시성, 압력 및 조건을 기록합니다. 이 데이터는 CSV 파일로 제공됩니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 데이터셋을 기반으로 여러 질문이 제시되었고, 우리는 Python의 Pandas 라이브러리를 사용하여 하나씩 해결할 것입니다. Pandas 라이브러리는 데이터 분석을 위한 최고의 라이브러리입니다.\n\n우선 Pandas 라이브러리를 설치하겠습니다.\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_1.png)\n\n다음으로, 날씨 데이터셋을 가져올 것입니다. 데이터셋이 csv 형식이므로, 구문은 다음과 같을 것입니다: pd.read_csv(\"..데이터셋 파일 경로..\")\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_2.png\" />\n\n여기서부터는 데이터 집합을 'df'로 참조할 것입니다. 코드에서 'r'을 써서 유니코드 오류를 제거하였습니다. 'r' 다음에는 우리 데이터 집합 파일의 경로를 따옴표로 전달할 것입니다.\n\n따라서 위의 코드를 실행한 후에 우리 데이터 집합은 이렇게 보일 것입니다.\n\n<img src=\"/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_3.png\" />\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이제 몇 가지 기본 Pandas 명령을 사용하여 데이터 세트를 탐색해 보겠습니다.\n\n## 1. head( )\n\n이렇게 하면 데이터의 첫 N개의 행을 표시합니다 (기본값은 N=5). 즉, 상위 5개 행을 보여줍니다.\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_4.png)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 2. 형태\n\n데이터셋(데이터프레임)의 총 행 수와 열 수를 보여줍니다.\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_5.png)\n\n## 3. 인덱스\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 속성은 데이터프레임의 인덱스 범위를 제공합니다. 인덱스는 0부터 8784까지 시작합니다. 여기서 step=1은 인덱스가 0, 1, 2, 3, 4, 5, ... 와 같이 1씩 증가하는 것을 나타냅니다.\n\n![image](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_6.png)\n\n## 4. columns\n\n데이터프레임에 있는 각 열의 이름을 보여줍니다. 여기서 8개의 열 이름이 모두 표시됩니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![image](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_7.png)\n\n## 5. dtypes( )\n\n각 열의 데이터 유형을 보여줍니다. 여기서 두 개의 열은 'object' (문자열) 형식이며, 네 개의 열은 'float' 형식이며, 두 개의 열은 'integer' 형식입니다.\n\n![image](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_8.png)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 6. unique( )\n\n한 열에서 모든 고유한 값을 표시합니다. 이 함수는 전체 데이터프레임이 아니라 단일 열에만 적용할 수 있습니다.\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_9.png)\n\n여기서 Weather 열의 모든 고유한 값을 표시하고 있습니다. 고유한 값이 너무 많아서 그 수를 세는 것이 어려울 수 있습니다. 다음으로 열의 고유한 값의 총 개수를 표시하는 함수를 사용할 것입니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 7. nunique( )\n\n각 열의 고유한 값의 총수를 보여줍니다. 단일 열 뿐만 아니라 전체 데이터프레임에도 적용할 수 있습니다.\n\n![테이블 이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_10.png)\n\n해당 열인 Weather에 50개의 고유한 값이 있다는 것을 보여줍니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이제 데이터프레임의 각 열에 있는 고유 값의 수를 확인하려면 어떻게 해야 할까요? 그러려면 열이 아닌 전체 데이터프레임에 nunique()를 적용하면 됩니다.\n\n![image](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_11.png)\n\n그래서 한 번에 각 열의 고유 값 수를 얻을 수 있습니다.\n\n## 8. count()\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n각 열의 전체 비 널 값 수를 보여줍니다. 단일 열뿐만 아니라 전체 데이터프레임에도 적용할 수 있습니다.\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_12.png)\n\n데이터프레임의 모든 열에 8784개의 비 널 값을 가지고 있으며, 이는 데이터프레임의 총 행 수와 같습니다. 따라서 어떤 열에도 널 값이 없습니다.\n\n## 9. value_counts( )\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n한 열에서 고유 값과 해당 개수가 모두 표시됩니다. 단일 열에만 적용할 수 있습니다.\n\n![image](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_13.png)\n\n## 10. info( )\n\n데이터프레임에 대한 기본 정보를 제공합니다. 범위 인덱스, 모든 열 이름 및 비널 값 수와 해당 데이터 유형이 표시됩니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_14.png)\n\n다시 한 번 데이터프레임을 살펴보겠습니다.\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_15.png)\n\n데이터프레임의 상위 2개 레코드가 표시됩니다. 참고용으로만 확인해주세요.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n먼저 '풍속' 열의 고유한 값 개수를 nunique 함수를 사용하여 확인할 수 있습니다.\n\n![image](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_16.png)\n\n이 열에는 34개의 고유한 값이 있습니다. 이제 이 값들이 무엇인지 확인해보겠습니다. unique 함수를 사용하면 됩니다.\n\n![image](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_17.png)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그래서, 'Wind Speed_km/h' 열의 모든 고유한 값이 여기 있습니다.\n\n이 질문을 해결하는 데 두 가지 방법을 사용할 것입니다. 첫 번째는 필터링이고, 두 번째는 Groupby 함수입니다.\n\n먼저 value_count 함수를 사용하여 각 열의 고유한 값 수를 확인해 봅시다.\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_18.png)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 열에서 '맑음'의 수는 1326입니다. 따라서 날씨가 맑았던 횟수는 1326번이라는 뜻입니다.\n\n이제 필터링을 사용하여 이 1326개의 레코드를 표시할 것입니다.\n\n![image](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_19.png)\n\n질문에서 요청한 대로 날씨가 '맑음'인 모든 레코드(행)가 여기에 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그룹화( ) 함수를 사용하여 출력을 얻을 수 있는 또 다른 함수는 groupby( ) 입니다. groupby 함수를 사용하여 날씨 열(weather column)의 각 고유한 값들을 그룹화하고 '맑음(clear)'에 대한 출력을 얻을 것입니다. get_group( )를 사용합니다.\n\n![이미지](/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_20.png)\n\n# 계속됩니다 ….\n","ogImage":{"url":"/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_0.png"},"coverImage":"/TIL/assets/img/2024-07-07-PythonDataAnalysisProject1With15SolvedQuestions_0.png","tag":["Tech"],"readingTime":10},{"title":"주말 AI 프로젝트 PC와 Raspberry Pi에서 YOLO를 사용한 객체 탐지 방법","description":"","date":"2024-07-07 02:24","slug":"2024-07-07-AWeekendAIProjectObjectDetectionwithYOLOonPCandRaspberryPi","content":"\n<img src=\"/TIL/assets/img/2024-07-07-AWeekendAIProjectObjectDetectionwithYOLOonPCandRaspberryPi_0.png\" />\n\n컴퓨터 비전은 다양한 규모의 ML 앱에 중요한 역할을 할 수 있습니다. $20,000에 이르는 테슬라 로봇이나 자율 주행 자동차부터 스마트 도어벨과 진공 청소기까지 다양한 영역에 활용될 수 있습니다. 그러나 실제 엣지 디바이스에는 클라우드 인프라와 비교할 때 하드웨어 사양이 제약되어 있는 경우가 많아 도전적인 과제로 여겨집니다.\n\nYOLO(You Only Look Once)는 인기 있는 객체 검출 라이브러리로, 첫 번째 버전은 2015년에 만들어졌습니다. YOLO는 임베디드 디바이스에서 특히 흥미로운데, 거의 모든 곳에서 실행될 수 있습니다. 파이썬 뿐만 아니라 C++(ONNX 및 OpenVINO) 및 Rust 버전도 제공됩니다. 1년 전에 저는 Raspberry Pi 4에서 YOLO v8을 테스트했습니다. 요즘에는 많은 변화가 있었는데, 새로운 Raspberry Pi 5가 출시되었고, 더 새로운 YOLO v10도 출시되었습니다. 따라서 새 모델을 새 하드웨어에서 실행했을 때 더 빠르고 정확하게 작동할 것으로 기대합니다.\n\n본문에 제시된 코드는 크로스 플랫폼이므로 Raspberry Pi가 없는 독자들도 Windows, Linux 또는 OS X 컴퓨터에서 실행할 수 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n계속해서, 어떻게 작동하는지 살펴보겠습니다!\n\n## Raspberry Pi\n\n라즈베리 파이에 대해 들어보지 못한 사람을 위해 간단히 설명해보겠습니다...\n","ogImage":{"url":"/assets/img/2024-07-07-AWeekendAIProjectObjectDetectionwithYOLOonPCandRaspberryPi_0.png"},"coverImage":"/TIL/assets/img/2024-07-07-AWeekendAIProjectObjectDetectionwithYOLOonPCandRaspberryPi_0.png","tag":["Tech"],"readingTime":2},{"title":"Python이 너무 느려요 우리 응용 프로그램에 사용할 수 없는 이유 5가지","description":"","date":"2024-07-07 02:24","slug":"2024-07-07-PythonisTooSlowWeCantUseItforOurApplication","content":"\n\n안녕하세요 여러분, 다니엘 부일레스쿠입니다. 프리랜서 웹 개발자이자 에이전시 소유자로서, 다양한 팀 역학을 경험해왔어요. 그중에서도 인상적이었던 이야기가 있어요. 새로운 기술을 주도하는 팀 리더를 설득하여 웹 앱에 파이썬을 사용하도록 한 적이 있어요. 그 분은 항상 최신이며 눈부신 도구를 찾아내려는 리더였는데, 때때로 그것이 일에 가장 적합한 것은 아니더라도 말이에요. 이 프로젝트도 예외는 아니었어요. 속도에 관해서만 얘기하던 그 분은 파이썬 아이디어에 처음에는 반대했죠. 어떻게 그의 마음을 바꿨는지 (그리고 아마 여러분의 것도) 이야기할게요!\n\n# 팀 리더의 관점: 열정적인 혹평가자\n\n우리 팀 리더는 모든 기술 뉴스레터를 구독하고 있었으며, 유명인의 인스타그램만큼 화려한 GitHub 프로필을 가지고 있었어요. 그 분은 최신 JavaScript 프레임워크와 실험적인 언어를 좋아했죠. 그래서 우리가 새로운 웹 애플리케이션을 개발하게 된다면, 이미 가장 첨단 기술 스택을 상상하고 있었어요.\n\n하지만 문제가 있었어요: 저는 이 작업에 파이썬이 적절한 도구라고 알고 있었어요. 그것은 웹 개발에 완벽한, 견고한 언어였거든요. 그러나 제 팀 리더는 파이썬이 너무 느리다고 생각했어요. 그 분은 몇몇 자신이 관심을 가진 최신 언어들과 비교했을 때 특히 파이썬은 느리다고 주장했어요. 고객이 많은 트래픽을 처리하고 빠른 속도를 제공할 수 있는 언어가 필요하다고 하면서 계속해서 벤치마크와 사례 연구들을 거론했죠...","ogImage":{"url":"/TIL/assets/no-image.jpg"},"coverImage":"/TIL/assets/no-image.jpg","tag":["Tech"],"readingTime":1},{"title":"PySpark의 Cache 기능에 대한 오해","description":"","date":"2024-07-06 10:34","slug":"2024-07-06-CacheinPySparkAmisconception","content":"\n/assets/img/2024-07-06-CacheinPySparkAmisconception_0.png\n\n파이스파크(Pyspark)에서 변환(transformations)과 액션(actions) 사이의 미묘한 차이를 이해하는 것은 데이터 처리 워크플로우를 최적화하는 데 중요합니다. 하나의 흔한 오해는 성능 최적화에 중요한 역할을 하는 `cache()` 함수를 액션으로 잘못 인식하는 것입니다.\n\n이 오해를 자세히 살펴보자\n\n# 변환(Transformations) 및 액션(Actions)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 변환 작업: RDD(Resilience Distributed Dataset)에 대한 연산을 의미하며, 새로운 RDD를 생성합니다. 이러한 작업들은 지연 계산을 사용하여 즉시 결과를 계산하지 않습니다. 중요한 예로는 filter(), join(), flatMap(), cache() 등이 있습니다. (이 목록에 cache()가 포함된 것을 보고 놀라셨을 거라고 생각하지만, 이 내용을 확인하시면 더 큰 깨달음을 얻게 될 거에요 😉)\n- 액션: 액션은 변환 작업을 실행하여 결과를 생성하거나 데이터를 외부 저장소에 쓸 때 사용됩니다. 중요한 예로는 collect(), count(), reduce(), saveAsTextFile() 등이 있습니다.\n\n# cache()가 액션으로 오해되는 부분에 대한 해명\n\ncache()는 RDD를 메모리에 저장하여 이후의 작업에서 빠르게 접근할 수 있도록 표시하는 변환 작업입니다. 이는 즉시 계산을 수행하지 않으며, 단지 RDD가 최초 계산을 수행한 후 메모리에 유지되어야 함을 나타냅니다.\n\ncache()가 효과를 발휘하는 경우:\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nRDD의 실제 캐싱은 액션이 호출될 때에만 발생합니다. 예를 들어, 캐싱된 RDD에 count()와 같은 액션을 수행하면, Spark는 RDD를 계산한 다음 미래 사용을 위해 메모리에 저장합니다.\n\n```js\nrdd = sc.parallelize([1, 2, 3, 4, 5])\ncached_rdd = rdd.map(lambda x: x * 2).cache()  # 이것은 변환입니다\n\n# 현재까지 아직 계산이 발생하지는 않았습니다.\n\ncount = cached_rdd.count()  # 이것은 액션으로 계산 및 캐싱을 트리거합니다\n```\n\n# 요약:\n\n- 변환(Transformation): cache()는 데이터를 메모리에 유지함으로써 미래의 액션을 최적화하는 방법을 Spark에 알려줍니다.\n- 액션(Action): count(), collect()와 같이 실제 계산을 트리거하는 모든 작업은 변환(캐싱 포함)이 실행되도록 합니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이러한 포인트를 이해하면 cache()가 변환(transform)이며 동작(action)이 아닌 이유가 명확해지리라고 생각해요. cache()는 미래 계산을 최적화하는 데 도움을 주지만 직접적인 계산을 일으키지는 않아요.\n","ogImage":{"url":"/assets/img/2024-07-06-CacheinPySparkAmisconception_0.png"},"coverImage":"/TIL/assets/img/2024-07-06-CacheinPySparkAmisconception_0.png","tag":["Tech"],"readingTime":3},{"title":"Snowflake 네이티브 앱 2024년 데이터 공유의 혁명","description":"","date":"2024-07-06 10:33","slug":"2024-07-06-SnowflakeNativeAppsTheNewFormofDataSharing","content":"\n/assets/img/2024-07-06-SnowflakeNativeAppsTheNewFormofDataSharing_0.png\n\n스노우플레이크 네이티브 앱은 스노우플레이크의 데이터 공유에 대한 새로운 접근 방식을 나타냅니다.\n\n본 문서는 데이터 공유의 역사와 스노우플레이크에 대한 심층적인 이해를 목표로 합니다.\n\n# 데이터 공유의 과제\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n현대에서는 데이터가 새로운 \"석유\"로 인식되고 있습니다. 그러나 데이터의 가치는 소유물에서만 나오는 것이 아닙니다. 진정으로 필요로 하는 사람들에게 전달되고 적절히 분석될 때에만 가치를 발휘합니다. Snowflake가 등장하기 전에는 다른 회사와 데이터를 공유하거나 판매하는 것이 굉장히 어려웠습니다.\n\n# 모든 데이터를 사고 팔 수 있는 세상을 만들어가는 과정\n\nSnowflake는 이 데이터 공유 도전에 도전했습니다. \"모든 데이터를 사고 팔 수 있는 세상을 만들어가는\" 비전을 가지고, Snowflake는 점진적으로 혁신적인 기능을 추가해 왔습니다. 첫 번째 추가된 것은 Direct Share 기능이었습니다.\n\nDirect Share는 데이터베이스를 한 계정에서 다른 특정 계정으로 공유할 수 있는 기능입니다. 이 기능은 Share 객체라는 객체를 활용하여 데이터를 덤프하거나 복사하지 않고 제3자 계정과 안전하게 데이터를 공유할 수 있도록 합니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 4단계에서 직접 공유 이해\n\n공급자 계정의 SHARE 개체로 데이터를 \"패키징\"하고, 소비자 계정의 DB 개체로 \"언패킹\"하는 것으로 생각할 수 있습니다.\n\n1. 공유 개체 생성\n\n```js\nCREATE SHARE TEST_SHARE\n```\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n2. 데이터베이스/테이블에 대한 읽기 권한을 공유 개체 (패키징)에 부여하세요.\n\n```js\nGRANT USAGE ON DATABASE DB TO SHARE TEST_SHARE;\nGRANT USAGE ON SCHEMA DB.SCHEMA TO SHARE TEST_SHARE;\nGRANT SELECT ON TABLE DB.SHARE.TABLE TO SHARE TEST_SHARE;ｓｑ\n```\n\n3. 공유 개체의 대상 계정을 지정하세요.\n\n```js\nALTER SHARE TEST_SHARE ADD ACCOUNTS=TEST_ORG.TEST_ACCOUNT;\n```\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n4. 소비자 계정의 공유 객체에서 데이터베이스 만들기 (언 패킹)\n\n```js\nCREATE DATABASE TEST_SHARE FROM SHARE TEST_ORG.TEST_ACCOUNT.TEST_SHARE\n```\n\n## 직접 공유의 문제\n\n그러나 직접 공유에는 중요한 도전 과제가 있었습니다: 다른 클라우드 공급업체나 지역 간에 공유할 수 없었습니다. 예를 들어, AWS 일본 지역 계정 간에는 공유가 가능했지만, AWS 일본 지역 계정과 AWS 미국 지역 계정 또는 AWS 일본 지역 계정과 Azure 일본 지역 계정 간에는 공유할 수 없었습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n만약 다른 제공업체나 지역 간에 꼭 공유가 필요한 경우, 소비자와 동일한 클라우드 제공업체 및 지역에 계정을 열어야 했고, 공유 개체와 데이터를 수동으로 복제한 다음 공유해야 했습니다. 이 과정은 번거롭고 비효율적이었습니다.\n\n## 리스트팅 소개\n\n다른 제공업체 및 지역 간 직접 공유 문제를 해결하기 위해 리스트팅 기능이 도입되었습니다. 리스트팅은 공유 개체를 래핑하고 공유 개체를 자동으로 복제하는 기능입니다. 이를 통해 수동 작업이 필요없이 소비자 요구를 충족할 수 있었습니다.\n\n/assets/img/2024-07-06-SnowflakeNativeAppsTheNewFormofDataSharing_1.png\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 모든 데이터가 거래될 수있는 세상\n\n직접 공유 및 목록 기능을 통해 데이터 제공 업체는 더 이상 어떠한 작업도 수행할 필요가 없었습니다. 이를 통해 시장에서 데이터를 자동으로 판매할 수 있게 되었습니다.\n\n## 공유 객체의 문제점\n\n그러나 공유 객체는 \"데이터 처리 프로세스\"를 저장할 수 없는 단점이 있었습니다. 예를 들어, Python 저장 프로시저를 사용하여 GA4에서 데이터를 가져오는 프로세스와 같은 프로세스는 기업간에 공통되어야하지만 이러한 데이터 처리 프로세스를 공유할 수있는 방법이 없었습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 모든 데이터 및 데이터 처리 프로세스를 거래할 수 있는 세계로\n\n## 스노우플레이크 네이티브 앱의 등장\n\n2023 년 6 월, 스노우플레이크 네이티브 앱이 등장하여 공유 객체의 문제를 해결하였습니다. 스노우플레이크 네이티브 앱은 본질적으로 응용 프로그램 패키지 객체입니다. 이들은 진화된 공유 객체로 간주될 수 있습니다. 제공 업체 계정에서 \"데이터 처리 프로세스\"를 \"포장\"하고 소비자 계정에서 \"풀기\"위한 컨테이너입니다. 공유 객체 대신 응용 프로그램 패키지 객체를 목록에 나열함으로써, Python 저장 프로 시저 및 기타 프로세스를 마켓플레이스에서 배포할 수 있습니다.\n\n## Secure Data Share와 Snowflake 네이티브 앱의 비교\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nSecure Data Share 및 Snowflake Native Apps은 명령어만 다르고 거의 동일하게 작동합니다. 주요 차이점은 다음과 같습니다:\n\n- 공유 방법: Secure Data Share는 쉐어 객체 및 목록을 사용하고, Snowflake Native Apps은 애플리케이션 패키지 객체 및 목록을 사용합니다.\n- 저장 가능한 객체: Secure Data Share는 테이블, 뷰, SQL UDF를 저장할 수 있지만, Snowflake Native Apps는 테이블, 뷰, 모든 유형의 UDF, 모든 파일(스테이지), 저장 프로시저를 저장할 수 있습니다.\n- Secure Data Share의 컨테이너는 SHARE이며, Snowflake Native Apps의 컨테이너는 APPLICATION PACKAGE입니다.\n- Secure Data Share의 콘텐츠는 DATABASE이며, Snowflake Native Apps의 콘텐츠는 APPLICATION입니다.\n- Secure Data Share의 패키지 생성 명령어는 CREATE SHARE `name`이며, Snowflake Native Apps의 패키지 생성 명령어는 CREATE APPLICATION PACKAGE `name`입니다.\n- Secure Data Share의 언패킹 명령어는 CREATE DATABASE FROM SHARE `name`이며, Snowflake Native Apps의 언패킹 명령어는 CREATE APPLICATION FROM APPLICATION PACKAGE `name`입니다.\n\n## Application Package Objects와 Share Objects의 차이점\n\n애플리케이션 패키지 객체를 설치하면 애플리케이션 객체가 언패킹됩니다. Share 객체에 의해 언패킹되는 데이터베이스 객체와 애플리케이션 객체 사이의 주요 차이점은 다음과 같습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 항상 단계가 하나 있습니다. 해당 단계에는 항상 특정 구조가 있습니다 (루트에 manifest.yml이 있어 하나의 설정 스크립트(setup.sql)를 가리킵니다).\n- 설정 스크립트는 풀어푸는 동안 실행될 수 있습니다.\n- App 탭에 표시되는 Streamlit 개체를 지정할 수 있습니다.\n- 애플리케이션 내에 사용자 정의 역할을 정의할 수 있습니다.\n\n## Snowflake Native Apps의 문제점\n\n그러나 Snowflake Native Apps는 도전 과제를 안고 있었습니다. 기존 데이터 처리 프로세스 자산을 재사용할 수 없었습니다. Snowflake Native Apps에서는 SQL, Python 또는 Java만 사용하여 데이터 처리 프로세스를 구현할 수 있었습니다. 실제로 데이터 처리 프로세스는 Rust, Javascript, R 등으로 작성될 수 있으므로 기존 데이터 처리 프로세스를 공유하고 이주하는 것이 진전되지 않았습니다.\n\n# Snowflake Native Apps 확장하기\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이러한 문제에도 불구하고, 이 문제들을 해결하기 위한 기능 세트가 2024년 Data Cloud Summit에서 발표되었습니다.\n\n## Snowpark 컨테이너 서비스와의 통합 (Public Preview)\n\nSnowflake Native Apps가 Snowpark 컨테이너 서비스와 통합되었습니다. 이 통합을 통해 어떤 UI나 언어로 작성된 데이터 처리 프로세스를 Snowflake로 배포할 수 있습니다.\n\n/assets/img/2024-07-06-SnowflakeNativeAppsTheNewFormofDataSharing_2.png\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## Snowflake Trail (공개 미리보기)\n\nSnowflake 내 데이터 처리 프로세스가 더 복잡해지면서 비용 관리 및 설명가능성을 위한 관찰성이 점점 더 중요해지고 있습니다. Snowflake Trail은 Event Tables와 Open Telemetry를 사용하여 로그를 집계합니다.\n\n/assets/img/2024-07-06-SnowflakeNativeAppsTheNewFormofDataSharing_3.png\n\nSnowflake는 매년 데이터 공유에서 데이터 처리 프로세스 공유로의 비전을 지속적으로 발전시키고 있습니다.\n","ogImage":{"url":"/assets/img/2024-07-06-SnowflakeNativeAppsTheNewFormofDataSharing_0.png"},"coverImage":"/TIL/assets/img/2024-07-06-SnowflakeNativeAppsTheNewFormofDataSharing_0.png","tag":["Tech"],"readingTime":8},{"title":"내 경험 없이 AI 스타트업을 처음 구축한 방법","description":"","date":"2024-07-06 10:31","slug":"2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience","content":"\n제 첫 AI 스타트업을 어떻게 구축했는지에 대한 자세한 여정(스타트업을 만들기 위한 조언 포함).\n\n/assets/img/2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience_0.png\n\n# 소개\n\n먼저, 제 소개를 간략히 하겠습니다. 저는 상업 경험이 2년 이상, Python 코딩 경험이 5년 이상인 데이터 과학자입니다. 주로 백엔드와 AI 작업을 맡고 있습니다. 저는 일반적으로 프로젝트 전체를 혼자 만들어본 적은 없지만, 대신 보통 작업을 맡아 왔습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n하지만 시간이 지난 후, 나는 스스로 무언가를 만들어보려는 충분한 지식이 있다고 느끼기 시작했습니다. 그리고 그것을 만들었어요. 제 기대와는 반대로, 그렇게 어렵지 않았죠. 더구나, 창업 동료와 함께 1개월 만에 만들어내기도 했고, 이미 어떤 이익을 올려 1000명 이상의 방문자도 끌어 모았어요. 광고 비용을 내지 않았답니다.\n\n그럼 — 여러분은 이미 한 적이 없다면 왜 스타트업을 만들고 싶어할까요?\n\n나는 그렇게 많은 것을 가르쳐주는 단일한 수업이나 프로젝트는 없었습니다. 수업을 마치면 특정한 기술을 배우지만 제품 전체에 대해 작업할 때는 전체 개발 주기를 이해하기 시작합니다. 디자인부터 빌드까지, 배포까지 말이에요. 제 기존 기술을 연마하고 새로운 것을 배우기도 했으며, 프론트엔드와 백엔드가 실제로 상호 작용하는 방법 및 파이썬 개발자로써 프론트엔드 동료가 더 쉽게 사용할 수 있는 API를 작성하는 법을 이해하기 시작했습니다.\n\n또 다른 이유는 이력서에 좋은 추가입니다. 스타트업에 투입한 시간만큼은 상업적인 근무 경험으로 인정받을 뿐 아니라 포트폴리오에서도 큰 장점이 됩니다 (특히 일부 인사팀이 방문할 수 있는 웹사이트인 경우).\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n마침내 마지막이자 주요한 이유는 돈입니다. 당신의 스타트업이 SaaS(소프트웨어서비스)인 경우, 이를 사실상 수동 소득원으로 생각할 수 있습니다. 그리고 여러 개의 작은 SaaS 웹사이트를 구축하면 더 많은 속도, 전문성 및 경험을 얻을 수 있습니다. 즉, 새 제품을 만드는 데 매우 적은 시간이 걸리면서 더 많은 수익을 창출할 수 있습니다.\n\n이 글에서는 내가 스타트업을 구축하면서 얻은 경험과 구체적인 팁과 조언을 공유하겠습니다.\n\n# 아이디어 찾기\n\n/assets/img/2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience_1.png\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n당신은 제품에 대한 아이디어가 있을 수도 있고, 없을 수도 있습니다. 아니면 수백 가지 아이디어가 있을 수도 있습니다. 브레인스토밍은 창의적인 과정이기 때문에 새로운 아이디어를 발생시키는 표준화된 프로세스는 실제로 존재하지 않습니다.\n\n그러나 아이디어를 검증하는 프로세스는 존재합니다:\n\n- 관련 시장을 확인하세요. 책 대여 웹사이트를 만들고 싶나요? 책, 대여 서비스와 같은 시장 규모를 확인하고, 작년에 판매된 책의 양 등을 찾아보세요. 최근 이러한 시장 중 일부가 하락 추세를 보이고 있다면, 이것이 문제가 될 수 있습니다. 예를 들어, 전자책, 책 앱 등의 등장으로 책이 점점 더 인기가 떨어지고 있습니다.\n- 경쟁사를 확인하세요. 경쟁사가 많다면, 당신의 솔루션이 최소 5배에서 10배 정도 더 나은지 확인해야 합니다. 경쟁사가 적다면, 여전히 긍정적인 신호입니다 — 이 제품을 통해 배울 수 있고, 수익을 내는지 확인할 수 있으며, 시장 적합성이 있는지 확인할 수 있습니다. 그러나 경쟁사가 없다면 — 상황이 복잡해집니다. 이는 아이디어가 너무 혁신적이라 아직 아무도 생각하지 못했을 수도 있고, 아니면 당신의 아이디어가 이른바 \"잡초 구덩이\" 아이디어일 수도 있습니다. 많은 사람들이 시도해봤지만 아무도 성공하지 못했다는 뜻입니다. 이 경우, 가능한 한 이 아이디어에서 멀리 떨어져야 합니다.\n- 당신이 해결하려는 문제와 고객을 분석하세요. 당신의 타깃 대상은 누구인가요? 그들은 얼마나 지불하려고 할까요? 이 문제가 얼마나 자주 발생하는가요? 이를 피할 수 있을까요?\n\n그리고 이제 제 스타트업을 소개할 때가 딱인 시점입니다 — https://validator.yazero.io. 우리는 인공지능, 웹 스크레이핑, 다양한 API, 그리고 측정 가능한 피드백을 활용하여 검증 프로세스를 돕습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아이디어를 찾을 때 하나 더 조언 드릴게요 — \"개인적인 장점\"을 활용해보세요. 물리학 같은 특정 분야의 학위가 있나요? 해당 분야에서 지식을 활용해보세요. 로펌에서 친구가 있는가요? 그의 직면한 문제, 프로세스 최적화 방법 등을 물어보는 방법을 시도해보세요.\n\n그리고 아이디어에 대해 더 알고 싶다면 이전 기사를 확인해보세요. 해당 기사는 기술적인 사람들을 대상으로 한 창업 가이드에요.\n\n# 공동창업자 찾기\n\n/assets/img/2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience_2.png\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n창업 중에서 마케팅이나 프론트엔드, 판매 등 하기 싫은 일이 있나요? 그렇다면, 공동 창업자를 찾는 것이 가장 좋은 해결책입니다. 그들은 해당 분야에서 보다 더 경험이 있을 뿐만 아니라 그 일에 흥미를 가지고 일할 의지를 갖게 될 것입니다. 자신만의 제품을 개발하는 것은 개인적으로 흥미롭고 즐거워야 합니다. 그러니 싫어하는 부분이 있다면 그 부분을 위임하는 것을 시도해보세요.\n\n공동 창업자를 찾는 또 다른 이유는 추가적인 검증입니다. 그들은 항상 여러분이 좋지 않을 수도 있는 아이디어에 너무 깊게 빠지지 않도록 도와줄 것입니다. 제품에 대한 피드백을 제공해 주고, 마지막으로는 여러분만큼 제품 구축에 관심이 있습니다. 이는 여러분이 스타트업을 더 빠르고 더 나은 방향으로 운영할 수 있음을 의미합니다. 때로는 그 이상으로 빠르게 할 수도 있습니다.\n\n예를 들어, 프론트엔드 경험이 없다면 새로운 프레임워크를 배우는 것은 정말 어려울 수 있습니다. 많은 시간이 소요될 뿐만 아니라, 여러분에게 가장 소중한 자원인 동기부여를 앗아갈 수도 있습니다. 그러나 공동 창업자에게 위임하면 그들은 무시무시하게 끝내고 더 높은 품질의 결과물을 제공할 것이며, 여러분은 자신에게 흥미로운 일에 집중할 수 있을 것입니다.\n\nYCombinator 공동 창업자 매칭 플랫폼과 같은 플랫폼에서 첫 번째 공동 창업자를 찾을 수 있습니다. 저는 거기에서 제 공동 창업자를 찾았고, 그 결정에 매우 만족하고 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n또한, 일부 협업 도구들 — 저희의 업무 흐름에서는 할 일을 할당하고 진행 상황을 추적하기 위해 Todoist를 사용하며, 버전 관리와 자동 배포를 위해 Github를 사용하고, 디자인 및 개념 브레인스토밍을 위해 Figma를 사용합니다.\n\n/assets/img/2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience_3.png\n\n# 프론트엔드\n\n마지막으로, 우리는 기술적 부분부터 시작합니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n프론트엔드에 대한 주요 조언(만약 당신이 스스로 구현하기로 결정했다면)은 당신이 알고 있는 프레임워크를 사용하는 것입니다. 그것이 구식이든, 다른 개발자들이 싫어하든 상관없이, 당신이 안다면 사용하세요. 중요한 것은 최종 사용자에게 솔루션을 제공하는 것입니다. 그들에게 작동한다면, 당신에게도 작동합니다.\n\n초보 프론트엔드 개발자들 사이에 종종 발생하는 문제는 항상 최신 트렌드를 따르고, 유명한 유튜버가 추천하는 \"최고\"의 프레임워크를 사용하려고 하며, 결국 모든 새 프로젝트에서 모든 것을 다시 배우는 것입니다.\n\n당신이 알고 있는 프레임워크를 계속 사용하고 그 사용 방법에 대한 기술을 연마하는 것이 훨씬 나은 방법입니다. 이렇게 하면 버그를 수정하는 방법을 알게 되며, 더 빨리 개발할 수 있으며, 다음에 시작할 때 몇 가지 템플릿이 준비되어 있을 것입니다.\n\n파이썬 애호가라면, 나의 파이썬에서의 최상위 5개 프론트엔드 라이브러리 및 파이썬에서의 최상위 5개 프론트엔드 라이브러리 파트2를 확인하는 것을 추천합니다. 나는 가장 많이 사용되는 파이썬 라이브러리들에 대한 포괄적인 개요를 제공하고 그들의 장단점을 비교했습니다. 파이썬에 대한 경험이 있는 경우, 이러한 라이브러리를 사용하는 것이 더 쉬울 것이므로 제품을 빨리 개발할 수 있을 것입니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n/assets/img/2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience_4.png\n\n배포하는 방법은 두 가지입니다:\n\n- Vercel, Netlify 및 AWS Amplify와 같은 기존 솔루션을 사용하는 것입니다. 특히 NextJS와 React와 같은 인기 있는 프레임워크를 사용하는 경우에는 이 방법이 가장 쉽습니다. 다만, 대부분의 이러한 솔루션은 상용으로 무료 배포를 제공하지 않습니다. 예를 들어, Vercel에서는 20달러를 지불해야 합니다. AWS Amplify는 무료 상용 플랜이 있지만, 콜드 스타트(웹사이트가 충분히 자주 방문되지 않으면 다음 방문 시 약 4초가 소요됩니다)가 있습니다.\n- 자체 호스팅 솔루션을 이용하여 Hetzner, AWS, Google Cloud 등의 공급업체를 사용하는 것입니다. 한쪽에서는 무료 티어가 종종 없습니다. 다른 한쪽에서는 가장 저렴한 솔루션이 종종 매우 저렴합니다. 예를 들어, Hetzner에서는 5유로에 2 VCPU 4GB RAM 전용 서버를 구할 수 있습니다(대부분의 경우 100명 이하의 동시 사용자/계산량이 적은 웹사이트에 충분합니다). 자체 호스팅 솔루션을 사용하면 앱에 대한 제어 및 투명성이 많이 제공됩니다. 자체 호스팅 솔루션을 사용하는 장점 중 하나는 DNS, SSL, Docker 등을 설정하는 방법을 배울 수 있어서 이력서와 기술력을 크게 향상시킬 수 있다는 것입니다.\n\n# Backend\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n나는 우리 스타트업에서 주로 백엔드 부분에 작업을 많이 하기 때문에 이 부분을 좀 더 자세히 설명하겠습니다.\n\n가끔 의문이 듭니다 — 왜 백엔드가 필요한 거죠? 모든 것을 사용자 측에서 처리할 수 없는 이유가 뭡니까?\n\n답은 더 나은 보안, 감시 가능성, 파이프라인 제어 권한, 더 나은 로깅 그리고 더 큰 계산 성능을 사용할 수 있는 능력 때문입니다. 큰 머신러닝 모델을 호스팅 중이라면 사용자에게 보내고 그들 쪽에서 계산을 수행하는 것은 종종 좋지 않은 아이디어일 수 있습니다. 더 나은 해결책은 사용자가 사용하는 프론트엔드를 위한 개인 서버와 GPU, API를 사용하는 것입니다.\n\n내가 우리 스타트업의 백엔드에서 사용한 주요 도구는 FastAPI with Pydantic, Gunicorn, Docker, Docker Compose 그리고 Nginx 입니다. Docker를 좋아하는 이유는 OS, 환경 등에 상관없이 항상 작동하는 솔루션을 제공하기 때문입니다. 또한 앱의 여러 구성 요소를 동시에 실행해야 하는 경우 — 예를 들어 백엔드와 병렬로 데이터베이스 등을 실행해야 하는 경우 — 매우 유용합니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n백엔드에서 필요한 중요한 것 중 하나는 모니터링입니다. 이 목표를 위해 두 가지 별도의 솔루션을 찾았습니다 — 프로메테우스(prometheus)와 FastAPI-analytics입니다. 이 두 가지 솔루션은 API가 요청을 성공적으로 처리하는지, 응답 시간은 어떠한지, 가장 많이 사용되는 엔드포인트는 무엇인지 등을 확인할 수 있는 멋진 대시보드를 제공합니다.\n\n/assets/img/2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience_5.png\n\n백엔드를 모니터링하는 장점은 문제/버그가 있는지 또는 예를 들어 더 많은 RAM/CPU 파워를 가진 더 좋은 서버가 필요하다는 지표를 인식할 수 있다는 것입니다.\n\n제가 보통 Hetzner의 VPS에 솔루션을 배포하는데, 그것이 가장 저렴한 옵션이기 때문입니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n마침내, \"파이썬은 프로덕션에서 사용하기에 너무 느리고 무겁다\"고 말하는 사람들이 많습니다. 그러나 이는 99%의 경우 사실이 아닙니다.\n\n우선, 사용자에게는 1밀리초 대신 5밀리초가 걸려도 별 차이가 없습니다. 하지만 해결책을 개발하는 데 몇 주가 아닌 며칠이 걸릴 경우, 이것은 큰 장점이 됩니다.\n\n둘째, 대부분의 라이브러리는 충분히 최적화되어 있거나 베이스로 포트란/C/Rust 등의 언어를 사용하므로 최종적으로 동일한 속도를 얻을 수 있습니다.\n\n마지막으로, AI 앱을 구축하고 특히 LLMs를 사용하는 경우, 응답 생성이 몇 초가 걸릴 수 있습니다(이는 프로그래밍 언어가 아닌 계산 능력/API/기타 요소에 의존합니다). 따라서 요청이 20초 걸린다면, 파이썬 계산이 0.1초 걸리는 것이 중요할까요?\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 요약\n\n이 글에서는 자신의 스타트업을 만드는 주요 부분들에 대해 다루었습니다 — 왜 필요한지, 그 한 가지 완벽한 아이디어를 찾는 방법, 프론트엔드와 백엔드를 구축하는 방법, 그리고 이를 서비스로 제공하는 방법에 대해 이야기했습니다.\n\n만약 이 내용이 유용했다면 알려주세요. 그리고 제가 두 번째 부분(생산에 AI 활용, MLOps, 마케팅, 출판, 판매, 광고, 가격 모델 등)을 쓰는 것이 좋을지 댓글로 의견을 남겨주시면 감사하겠습니다.\n\n또한 백엔드의 상용화에 대해 더 깊이 들어가서 실제 예제와 안내를 제공할 수도 있습니다. 그러니 이 글 아래에 댓글을 달아서 피드백을 주시면 감사하겠습니다!\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n위 내용을 읽어주셔서 감사합니다! 즐거운 코딩하세요!\n업데이트: 다음 글이 이미 공개되었어요. 거기에서 더 많은 인사이트를 파이썬, 데이터 과학 그리고 기업가 정신에 대해 공유했어요!\n\n# 참고 자료\n\n- https://validator.yazero.io\n- https://yazero.io\n- https://shelamanov.medium.com/starting-a-startup-guide-for-techies-d220119c0b07\n- https://www.ycombinator.com/cofounder-matching\n- https://python.plainenglish.io/top-5-python-frontend-libraries-for-data-science-91261a65e366\n- https://medium.com/python-in-plain-english/top-5-python-frontend-libraries-for-data-science-part-2-4d07a48d2fde\n- https://solara.dev/\n- https://github.com/trallnag/prometheus-fastapi-instrumentator\n- https://github.com/tom-draper/api-analytics\n\n# In Plain English 🚀\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n인 플레인 영어 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:\n\n- 작가를 칭찬하고 팔로우 해주세요 👏️️\n- 팔로우하기: X | LinkedIn | YouTube | Discord | Newsletter\n- 다른 플랫폼 방문하기: Stackademic | CoFeed | Venture | Cubed\n- PlainEnglish.io에서 더 많은 콘텐츠 확인하기\n","ogImage":{"url":"/assets/img/2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience_0.png"},"coverImage":"/TIL/assets/img/2024-07-06-HowIBuiltMyFirstAIStartupWithNoExperience_0.png","tag":["Tech"],"readingTime":12},{"title":"파이썬 함수에서 x 사용을 멈춰야 하는 이유","description":"","date":"2024-07-06 10:31","slug":"2024-07-06-StopUsingxinPythonFunctionParameters","content":"\n/assets/img/2024-07-06-StopUsingxinPythonFunctionParameters_0.png\n\n무언가가 합법적이라고 해서 좋은 것은 아닙니다.\n\n이유없이 낯선 사람에게 무례하게 행동하는 것은 불법이 아니라고 해서 (보통) 좋은 일이 아닙니다.\n\n```js\ndef func(ls: List[str] = []):\n    ...\n```\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬 함수에서 변경 가능한 기본 인수도 허용됩니다. 아래와 같은 코드를 실행할 수 있고 파이썬은 이를 허용합니다. 그러나 이는 좋지 않은 관행입니다.\n\n# 가변성의 의미\n\n데이터 구조가 생성 후에 변경될 수 있다면 해당 데이터 구조는 가변적입니다. 리스트, 딕셔너리 및 세트와 같은 데이터 유형은 파이썬에서 가변적입니다.\n\n데이터 구조가 변경되지 않는(불변한) 것은 데이터 구조가 생성 후 변경되지 않는 경우입니다. 정수, 부동 소수점, 부울, 문자열, None, 튜플 및 frozenset과 같은 데이터 유형은 파이썬에서 변경되지 않습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 기본 인수를 사용하는 이유\n\n```js\ndef greet(name: str, greeting: str='hello'):\n    print(greeting, name)\n\ngreet('tom')\n# hello tom\n\ngreet('tom', greeting='ni hao')\n# ni hao tom\n```\n\n위 함수에서 greeting은 기본 인수입니다.\n\ngreeting에 값을 전달하지 않고 선택하는 경우 기본값 `hello`를 갖습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n만약 우리가 인사말에 값을 전달하면, 전달한 값을 사용합니다.\n","ogImage":{"url":"/assets/img/2024-07-06-StopUsingxinPythonFunctionParameters_0.png"},"coverImage":"/TIL/assets/img/2024-07-06-StopUsingxinPythonFunctionParameters_0.png","tag":["Tech"],"readingTime":2},{"title":"2024년 최고의 파이썬 IDE는","description":"","date":"2024-07-06 10:29","slug":"2024-07-06-ThebestPythonIDEin2024","content":"\n/assets/img/2024-07-06-ThebestPythonIDEin2024_0.png\n\n파이썬, 다재다능하고 초보자 친화적인 프로그래밍 언어가 세계를 뜨겁게 달궜습니다. 웹 개발부터 데이터 과학에 이르기까지 다양한 응용 프로그램에 파이썬을 활용하는 개발자들이 더 많아짐에 따라 효율적이고 기능이 풍부한 통합 개발 환경(IDE)의 필요성이 점점 더 중요해지고 있습니다. 이 종합 가이드에서는 2024년에 사용할 수 있는 최고의 Python IDE를 살펴보겠습니다. 특히 PyCharm에 주목하여 많은 전문 Python 개발자들이 선택하는 IDE를 자세히 살펴볼 것입니다. 기능, 혜택 및 고려 사항을 탐색하여 정보를 제공하고 Python 개발 작업을 업그레이드할 수 있도록 도와드릴 것입니다.\n\n원본 및 전체 컨텐츠는 UnfoldAI 블로그에서 확인할 수 있습니다: https://unfoldai.com/the-best-python-ide-in-2024/\n\n## IDE와 코드 편집기의 차이 이해\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬 IDE 중에서 가장 좋은 것을 살펴보기 전에 IDE와 코드 편집기의 차이를 이해하는 것이 중요합니다. 두 도구 모두 코드를 작성하고 편집하는 데 도움을 주지만, 서로 다른 목적을 가지고 있습니다.\n\n코드 편집기:\n\n- 가벼우며 코드 편집 작업에 초점을 맞춤\n- 구문 강조 표시 및 코드 서식 지정과 같은 기본 기능 제공\n- 예시: Sublime Text, Atom, Visual Studio Code\n\n통합 개발 환경 (IDE):\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 전체 개발 수명주기를 아우르는 포괄적인 도구\n- 디버깅, 코드 완성, 통합 테스트 같은 고급 기능 제공\n- 예시: PyCharm, Eclipse, Visual Studio\n\nIDE와 코드 편집기 중 어느 것을 선택할지는 본인의 특정 요구사항과 선호에 따라 다릅니다. 기능이 풍부하고 다양한 도구와 자동화가 필요하다면 PyCharm과 같은 IDE가 적합합니다. 하지만, 최소주의적이고 가벼운 방식을 선호하는 경우 코드 편집기가 적당할 수 있습니다.\n\n## 2024년 최고의 파이썬 IDE\n\nPyCharm: 프로페셔널의 선택 JetBrains에서 개발한 PyCharm은 프로의 파이썬 개발자들에게 각광받는 강력하고 기능이 풍부한 IDE로, 지능적인 코드 완성, 오류 검출, 리팩터링 능력으로 생산성을 높여주는 강력한 도구입니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n주요 기능:\n\n- 스마트 코드 탐색 및 검색 기능\n- 통합 디버깅 및 테스팅 도구\n- Django 및 Flask와 같은 웹 개발 프레임워크 지원\n- 버전 관리 통합 (Git, SVN)\n- 크로스 플랫폼 호환성 (Windows, macOS, Linux)\n\nPyCharm에는 두 가지 버전이 있습니다: Community(무료 오픈 소스) 및 Professional(유료로 추가 기능이 포함됨). Professional 버전에는 데이터베이스 도구, 원격 개발 및 과학 도구와 같은 고급 기능이 포함되어 있어, 풀 스택 웹 개발 및 데이터 과학 프로젝트에 이상적입니다.\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_1.png\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nVisual Studio Code: 다재다능한 만능 편집기 Visual Studio Code (VS Code)는 개발자들 사이에서 엄청난 인기를 얻은 강력한 코드 편집기입니다. 엄밀히 말하면 IDE는 아니지만, VS Code는 다양한 확장 기능과 사용자 정의 옵션을 제공하여 Python 개발에 강력한 경쟁자가 되었습니다.\n\n주요 기능:\n\n- 향상된 기능을 제공하는 확장 라이브러리의 다양성\n- 원활한 버전 관리를 위한 내장 Git 통합\n- Python 스크립트 실행을 위한 통합 터미널\n- 중단점과 변수 검사를 위한 디버깅 지원\n- 협업 코딩 세션을 위한 라이브 공유\n\nVS Code의 장점 중 하나는 유연성입니다. Python 린팅, 코드 서식 지정 등을 위한 확장 프로그램을 설치하여 편집기를 여러분의 요구에 맞게 맞춤 설정할 수 있습니다. VS Code용 Python 확장은 지능형 코드 완성, 코드 탐색 및 디버깅과 같은 기능을 제공하여 완전한 IDE의 대안으로 사용할 수 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_2.png\n\n주피터 노트북: 데이터 과학자의 동반자! 주피터 노트북은 데이터 과학자와 연구자들 사이에서 매우 인기 있는 웹 기반 대화형 개발 환경입니다. 코드 실행, 수식, 시각화 및 설명 텍스트가 포함된 문서를 만들고 공유할 수 있습니다.\n\n주요 기능:\n\n- 대화형 코드 실행 및 시각화\n- 다양한 프로그래밍 언어 지원 (Python, R, Julia)\n- 인라인 플로팅 및 데이터 탐색\n- 노트북을 통한 쉬운 공유 및 협업\n- 인기 있는 데이터 과학 라이브러리와 통합 (NumPy, Pandas, Matplotlib)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n주피터 노트북은 전통적인 IDE가 아니지만 데이터 분석, 탐색 및 프레젠테이션을 위한 독특하고 강력한 환경을 제공합니다. 코드, 출력 및 설명을 하나의 노트북에 통합하는 능력은 데이터 주도 프로젝트와 과학 계산에 귀중한 기능입니다.\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_3.png\n\nSpyder: The Scientific Python IDE Spyder는 과학적 Python 개발을 위해 특별히 설계된 오픈 소스 IDE입니다. NumPy, SciPy, Matplotlib과 같은 인기있는 과학 라이브러리와 잘 통합되어 있어 데이터 분석 및 시각화 작업에 높은 신뢰성을 제공합니다.\n\n주요 특징:\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 대화식 개발을 위한 통합된 IPython 콘솔\n- 변수 탐색기 및 데이터 뷰어\n- 정적 코드 분석 및 디버깅 도구\n- 내장된 문서 뷰어\n- 크로스 플랫폼 호환성\n\nSpyder는 MATLAB과 유사한 개발 환경을 제공하여, 과학적 배경을 가진 사용자들에게 친숙하고 편안한 환경을 제공합니다. 과학적 컴퓨팅과 데이터 분석에 중점을 둔 Spyder는 연구원과 데이터 과학자들에게 가치 있는 도구로 작용합니다.\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_4.png\n\nIDLE: 파이썬 초보자의 친구 IDLE (통합 개발 및 학습 환경)은 Python과 함께 제공되는 기본 IDE로, 단순하고 직관적인 인터페이스를 제공하여 Python을 배우는 초보자들에게 우수한 선택지입니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nKey Features:\n\n- Syntax highlighting and auto-completion\n- Integrated Python shell for interactive testing\n- Debugger with breakpoints and stepping\n- Cross-platform compatibility\n\nIDLE는 다른 IDE에 비해 고급 기능이 부족할 수 있지만, 간결함과 접근성으로 Python 초심자에게 좋은 시작점이 될 수 있습니다. 복잡한 기능으로 사용자를 압도하지 않으면서 Python 개발의 세계를 부드럽게 소개해줍니다.\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_5.png\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nNeovim은 현대화된 Vim 경험을 찾는 개발자들 사이에서 상당한 인기를 얻고 있는 강력하고 확장 가능한 텍스트 편집기입니다. 자질구레한 Vim 편집기를 포크한 Neovim은 Vim 사용자들이 사랑하는 효율성과 모달 편집 패러다임을 유지하면서 성능, 확장 가능성, 사용자 경험 면에서 개선 점을 도입했습니다.\n\n주요 기능은 다음과 같습니다:\n\n- 비동기 플러그인 지원\n- 내장 터미널 에뮬레이터\n- Lua 스크립트 기능\n- 개선된 기본 설정\n\nNeovim의 아키텍처는 더 나은 유지 보수성과 쉬운 기여를 가능하게 하며, 동적이고 진화하는 플랫폼으로 만듭니다. 엄밀히 말해 IDE는 아니지만, Neovim은 언어 서버 프로토콜(LSP) 통합부터 디버깅 도구까지 모든 것을 다루는 풍부한 플러그인 생태계를 통해 강력한 개발 환경으로 변신할 수 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n에디터의 하위 호환성에 대한 헌신은 대부분의 Vim 플러그인 및 구성이 Neovim과 원활하게 작동하도록 보장하므로 사용자들이 원활하게 전환할 수 있습니다. Neovim은 크로스 플랫폼 성격을 가지고 있어 Windows, macOS 및 Linux에서 개발을 지원하여 여러 개발자들에게 다양한 선택지를 제공합니다. Neovim은 성능에 중점을 둔 결과, 대형 파일이나 복잡한 프로젝트를 처리할 때에도 가벼우며 반응성을 유지합니다.\n\n속도, 맞춤화 및 키보드 중심적인 워크플로우를 중요시하는 개발자들에게 Neovim은 코드 편집기 및 IDE들의 환경에서 매력적인 선택지를 제공합니다. Neovim의 성장하는 커뮤니티는 텍스트 편집기에서 가능한 범위를 계속해서 확장하며, 그 결과 Neovim은 경험이 풍부한 Vim 사용자들과 새로운 사용자들 양쪽에게 점점 더 인기 있는 옵션으로 자리잡고 있습니다.\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_6.png\n\n# 적절한 Python IDE 선택하기\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n원본 및 전문 내용은 UnfoldAI 블로그에 있습니다: https://unfoldai.com/the-best-python-ide-in-2024/\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_7.png\n\n다양한 파이썬 IDE가 있지만, 적절한 IDE를 선택하는 것은 어려운 작업일 수 있습니다. 결정을 내릴 때 다음 요소들을 고려해보세요:\n\n- 프로젝트 요구 사항: 파이썬 프로젝트의 특정 요구 사항을 평가해보세요. 웹 개발을 하고 있다면 Django나 Flask와 같은 프레임워크를 지원하는 IDE가 도움이 될 수 있습니다. 데이터 과학 프로젝트를 할 때는 과학 라이브러리와 노트북 스타일 개발을 위한 통합이 있는 IDE가 더 적합할 수 있습니다.\n- 학습 곡선: 본인의 전문 지식 수준과 파이썬에 대한 익숙함을 고려해보세요. 초보자라면 IDLE이나 PyCharm Community Edition과 같이 학습 곡선이 부드러운 IDE가 좋은 시작점이 될 수 있습니다. 경험을 쌓을수록 고급 기능과 사용자 정의 옵션이 있는 IDE를 탐색할 수 있습니다.\n- 성능과 시스템 자원: PyCharm과 같은 일부 IDE는 가벼운 코드 에디터와 비교해 더 높은 시스템 요구 사항을 가질 수 있습니다. 특히 자원이 많이 필요한 프로젝트를 하고 있다면, 개발 머신이 IDE를 원활하게 실행할 수 있는 충분한 자원을 갖추고 있는지 확인하세요.\n- 협업 및 팀 통합: 팀에서 작업 중이라면 Git과 같은 버전 관리 시스템과 잘 통합되는 IDE를 고려해보세요. 라이브 코드 공유, 원격 개발, 코드 검토 도구와 같은 기능은 팀 생산성을 크게 향상시킬 수 있습니다.\n- 확장성과 사용자 정의: 확장성과 사용자 정의에 대한 선호도를 평가해보세요. Visual Studio Code와 같은 일부 IDE는 특정 요구 사항에 맞게 개발 환경을 맞춤화할 수 있는 다양한 확장 생태계를 제공합니다. 다른 IDE인 PyCharm은 더 통합된 경험을 제공하는 경우가 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 파이참 시작하기\n\n많은 프로페셔널 파이썬 개발자들의 선호도를 받는 파이참을 더 자세히 살펴보고자 한다면 이 단계별 가이드를 확인해보세요:\n\n다운로드 및 설치: 공식 파이참 웹사이트 (https://www.jetbrains.com/pycharm/)를 방문하고 운영 체제에 맞는 적절한 버전을 다운로드하세요. 파이참은 커뮤니티 에디션(무료 오픈 소스)과 프로페셔널 에디션(유료 추가 기능 포함) 둘 다 제공합니다. 플랫폼에 따라 특정 설치 지침을 따르세요.\n\n새 프로젝트 생성: 파이참을 실행하면 새 프로젝트를 생성하거나 기존 프로젝트를 열 것인지 묻는 팝업이 나타납니다. \"새 프로젝트 생성\"을 선택하고 프로젝트 위치와 인터프리터를 선택하세요. 파이참은 순수 파이썬, 웹 개발 (장고, 플라스크), 과학 프로젝트 등 다양한 유형의 프로젝트를 지원합니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nPython 인터프리터 설정하기: PyCharm을 사용하여 여러 Python 인터프리터와 가상 환경을 관리할 수 있습니다. 프로젝트용 인터프리터를 구성하려면 “File” - “Settings” (또는 macOS의 경우 “PyCharm” - “Preferences”)로 이동하여 “Project: YourProjectName” - “Python Interpreter”로 이동하면 됩니다. 여기에서 원하는 Python 인터프리터를 선택하거나 새 가상 환경을 만들 수 있습니다.\n\n인터페이스 익히기: PyCharm 인터페이스를 탐험해보세요. 주요 구성 요소는 다음과 같습니다:\n\n- 편집기: Python 코드를 작성하고 편집하는 곳\n- 프로젝트 보기: 프로젝트의 구조와 파일을 표시합니다\n- 탐색 표시줄: 일반적인 작업 및 도구에 빠르게 액세스할 수 있도록 제공합니다\n- 도구 창: Python 콘솔, 터미널, 버전 관리 등이 포함됩니다\n\n코드 작성 및 실행하기: 프로젝트 보기에서 프로젝트를 마우스 오른쪽 버튼으로 클릭하고 “New” - “Python File”을 선택하여 새 Python 파일을 만드세요. 편집기에서 Python 코드를 작성하고 파일을 저장하세요. 코드를 실행하려면 파일을 마우스 오른쪽 버튼으로 클릭하고 “Run”을 선택하거나 키보드 바로 가기(Windows/Linux의 경우 Ctrl+Shift+F10, macOS의 경우 Ctrl+Shift+R)를 사용하세요.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n디버깅 및 테스트: PyCharm은 강력한 디버깅 및 테스트 도구를 제공합니다. 코드를 디버깅하려면, 거터(라인 번호 왼쪽에 있는 영역)를 클릭하여 중단점을 설정하거나 마우스 오른쪽 클릭 메뉴에서 \"Debug\"를 선택하거나 키보드 단축키(Shift+F9)를 사용하세요. 디버거를 사용하면 코드를 단계별로 실행하고 변수를 검사하며 문제를 식별할 수 있습니다.\n\n테스트에 대해, PyCharm은 unittest 및 pytest와 같은 다양한 테스트 프레임워크를 지원합니다. 테스트 파일을 생성하고 IDE에서 직접 실행할 수 있습니다.\n\n고급 기능 탐색: PyCharm에서 좀 더 편안해지면 고급 기능을 살펴보세요:\n\n- 코드 완성 및 탐색: PyCharm은 스마트 코드 완성 및 탐색 도구를 제공하여 효율적으로 코드를 작성할 수 있습니다.\n- 리팩터링: PyCharm의 리팩터링 기능을 활용하여 코드를 재구성하고 오류를 발생시키지 않습니다.\n- 버전 관리 통합: PyCharm은 Git과 같은 버전 관리 시스템과 원활하게 통합되어 코드베이스를 쉽게 관리할 수 있습니다.\n- 데이터베이스 도구: PyCharm의 Professional Edition에는 IDE에서 직접 데이터베이스를 관리하고 쿼리하는 데이터베이스 도구가 포함되어 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이참은 여러분이 기능을 최대한 활용할 수 있도록 도와주는 광범위한 문서 및 자습서를 제공합니다. IDE의 이해를 깊이있게 하기 위해 내장된 도움말 시스템과 온라인 자원을 활용해보세요.\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_8.png\n\n원본 및 전체 내용은 UnfoldAI 블로그에서 확인할 수 있습니다: https://unfoldai.com/the-best-python-ide-in-2024/\n\n# 결론\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬 IDE를 선택하는 것은 개발 워크플로와 생산성에 큰 영향을 미칠 수 있는 중요한 결정입니다. 모든 사람에게 적합한 해결책은 없지만, PyCharm은 전문 파이썬 개발자를 위한 최고의 선택으로 빛납니다. 다양한 기능 세트, 지능적인 코드 지원 및 포괄적인 생태계로 PyCharm은 파이썬 개발에 강력한 지원을 제공합니다.\n\n그러나 IDE를 선택할 때는 꼭 당신의 특정 요구사항과 선호도를 고려해야 합니다. Visual Studio Code의 다양성, Jupyter Notebook의 데이터 과학 기능 또는 IDLE의 간편성 중에서 선택하든, 적절한 IDE는 파이썬 개발 경험을 향상시키고 훌륭한 애플리케이션을 만드는 데 도움이 될 것입니다.\n\nIDE는 개발 프로세스를 지원하는 도구일 뿐, 마법같은 해결책이 아닙니다. 언어 자체를 배우는 데 시간을 투자하고 최선의 방법을 이해하며 실제 문제를 해결하는 것이 중요합니다. 잘 선택된 IDE와 파이썬에 대한 튼튼한 기초의 조합은 능숙하고 성공적인 파이썬 개발자가 되는 길을 열어줄 것입니다.\n\n파이썬 생태계가 계속 발전함에 따라 최신 IDE 기능과 확장 프로그램을 계속해서 업데이트하세요. 선택한 IDE의 강력함을 받아들이고 사용자 정의하여 개발 워크플로를 최적화하세요. 적절한 IDE가 곁에 있다면 어떠한 파이썬 프로젝트에도 잘 대처할 수 있을 것입니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n/assets/img/2024-07-06-ThebestPythonIDEin2024_9.png\n\n읽어 주셔서 감사합니다. 내 컨텐츠가 마음에 들었다면, 저를 지원하고 싶다면 —\n\n- 제 LinkedIn 및 GitHub에서 저와 연결하세요. 거기서는 머신러닝 시스템 구축에 더 효율적해지도록 다양한 무료 컨텐츠를 공유하고 있습니다.\n- X(트위터) 및 Medium에서 나를 팔로우하세요. 새 소식을 즉시 받아보세요.\n- 곧 출시될 다가오는 통찰력 있는 콘텐츠를 위해 내 YouTube 채널에 가입하세요.\n","ogImage":{"url":"/assets/img/2024-07-06-ThebestPythonIDEin2024_0.png"},"coverImage":"/TIL/assets/img/2024-07-06-ThebestPythonIDEin2024_0.png","tag":["Tech"],"readingTime":14},{"title":"최신 파이썬 개발 모범 사례 10가지","description":"","date":"2024-07-06 10:28","slug":"2024-07-06-BestPracticesinModernPythonDevelopment","content":"\n/assets/img/2024-07-06-BestPracticesinModernPythonDevelopment_0.png\n\nPython Version Management\n\n서로 다른 Python 버전을 각기 다른 프로젝트 간에 효율적으로 관리하려면 pyenv 또는 mise와 같은 도구를 추천합니다. 이러한 도구를 사용하면 Python 버전을 원활하게 전환할 수 있어 프로젝트 간의 호환성과 독립성을 보장할 수 있습니다. 또한 개발 환경 컨테이너를 사용하면 서로 다른 프로젝트를 위해 격리된 환경을 유지할 수 있습니다.\n\n최신 Python 버전\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n새로운 프로젝트를 시작할 때는 최신 안정 버전의 Python을 사용하는 것이 가장 좋습니다. 이렇게 하면 최신 보안 패치와 성능 향상을 누릴 수 있습니다. 새 버전이 출시될 때마다 정기적으로 프로젝트를 업그레이드하는 것이 좋으며, Python 개발팀은 일반적으로 각 버전을 약 다섯 년간 지원합니다.\n\nPython 도구 및 응용 프로그램\n\n전통적인 패키지 설치 방법인 pip 대신에 pipx를 사용하여 Python 응용 프로그램을 실행하는 것이 좋습니다. pipx를 사용하면 응용 프로그램이 필요한 라이브러리와 함께 격리된 환경에서 실행되므로 보안을 개선하고 종속성 충돌을 줄일 수 있습니다.\n\n프로젝트 구성 및 관리\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬 프로젝트를 설정할 때에는, Poetry와 같은 오래된 도구를 사용하지 않는 것이 좋습니다. 이러한 도구들은 현대적인 파이썬 표준을 준수하지 않을 수 있습니다. 대신에 PDM이나 Hatch와 같은 도구들을 사용하는 것이 추천됩니다.\n","ogImage":{"url":"/assets/img/2024-07-06-BestPracticesinModernPythonDevelopment_0.png"},"coverImage":"/TIL/assets/img/2024-07-06-BestPracticesinModernPythonDevelopment_0.png","tag":["Tech"],"readingTime":2},{"title":"최신 파이썬 멀티페이지 Streamlit 애플리케이션으로 올림픽 결과 분석하는 방법","description":"","date":"2024-07-06 10:27","slug":"2024-07-06-ATimelyPythonMulti-pageStreamlitApplicationonOlympicResults","content":"\n/assets/img/2024-07-06-ATimelyPythonMulti-pageStreamlitApplicationonOlympicResults_0.png\n\nStreamlit은 데이터 과학자들이 쉽게 대화형 웹 애플리케이션을 만들 수 있도록 하는 오픈 소스 응용 프로그램 프레임워크입니다.\n\n파이썬 몇 줄만 사용하면 데이터 스크립트를 공유 가능한 웹 앱으로 변환할 수 있습니다.\n\nPlotly와 같은 데이터 시각화 라이브러리와 결합하면 몇 줄의 코드로 아름다운 차트와 지도를 만들 수 있습니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 글에서는 Streamlit을 사용하여 올림픽 메달 데이터를 시각화하는 멀티페이지 대화형 애플리케이션을 만드는 방법을 안내하겠습니다.\n\n이 애플리케이션은 세 가지 페이지로 구성될 것입니다:\n\n- 메달 수에 대한 개요,\n- 특정 국가 분석, 그리고\n- 전 세계 메달 분포를 보여주는 코로플레스 맵.\n\n시작해봅시다!\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 데이터 세트\n\n이 작업을 수행하는 데 사용된 데이터는 \"국가별 올림픽 메달\" 데이터 세트입니다. Kaggle에서 이용할 수 있습니다.\n\n이 데이터 세트에는 연도, 국가 및 \"Gold\", \"Silver\" 및 \"Bronze\" 메달의 수가 포함되어 있습니다. 데이터 세트의 처음 15행을 캡처한 화면은 다음과 같습니다:\n","ogImage":{"url":"/assets/img/2024-07-06-ATimelyPythonMulti-pageStreamlitApplicationonOlympicResults_0.png"},"coverImage":"/TIL/assets/img/2024-07-06-ATimelyPythonMulti-pageStreamlitApplicationonOlympicResults_0.png","tag":["Tech"],"readingTime":2}],"page":"32","totalPageCount":35,"totalPageGroupCount":2,"lastPageGroup":15,"currentPageGroup":1},"__N_SSG":true}