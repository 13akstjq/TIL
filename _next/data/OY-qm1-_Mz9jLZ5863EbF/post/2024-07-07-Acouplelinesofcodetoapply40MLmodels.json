{"pageProps":{"post":{"title":"코드 몇 줄로 40개의 머신러닝 모델 적용하는 방법","description":"","date":"2024-07-07 19:15","slug":"2024-07-07-Acouplelinesofcodetoapply40MLmodels","content":"\n\n<img src=\"/assets/img/2024-07-07-Acouplelinesofcodetoapply40MLmodels_0.png\" />\n\n이 글에서는 \"lazypredict\" 라이브러리를 소개하려고 합니다. 이 라이브러리를 사용하면 여러 개의 머신러닝 모델을 동시에 적용할 수 있습니다.\n\n이 라이브러리는 pip로 설치할 수 있습니다:\n\n<img src=\"/assets/img/2024-07-07-Acouplelinesofcodetoapply40MLmodels_1.png\" />\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n여기에서는 mal 고객 데이터 세트를 사용합니다: [링크](https://gist.githubusercontent.com/pravalliyaram/5c05f43d2351249927b8a3f3cc3e5ecf/raw/8bd6144a87988213693754baaa13fb204933282d/Mall_Customers.csv)\n\n데이터 세트의 처음을 살펴보겠습니다:\n\n```python\nimport pandas as pd\n\ndf = pd.read_csv('https://gist.githubusercontent.com/pravalliyaram/5c05f43d2351249927b8a3f3cc3e5ecf/raw/8bd6144a87988213693754baaa13fb204933282d/Mall_Customers.csv')\n\ndf.head()\n```\n\n![이미지](/assets/img/2024-07-07-Acouplelinesofcodetoapply40MLmodels_2.png)\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n간단해요. \"지출 점수\"는 종속 변수 Y이고 다른 필드들은 X입니다.\n\n그런 다음, 데이터 집합을 훈련 세트와 테스트 세트로 분할하십시오:\n\n```js\nfrom sklearn.model_selection import train_test_split\n\nX = df.loc[:, df.columns != 'Spending Score (1-100)']\ny = df['Spending Score (1-100)']\n\nX_train, X_test, y_train, y_test =…\n```","ogImage":{"url":"/assets/img/2024-07-07-Acouplelinesofcodetoapply40MLmodels_0.png"},"coverImage":"/assets/img/2024-07-07-Acouplelinesofcodetoapply40MLmodels_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/assets/img/2024-07-07-Acouplelinesofcodetoapply40MLmodels_0.png\">\n<p>이 글에서는 \"lazypredict\" 라이브러리를 소개하려고 합니다. 이 라이브러리를 사용하면 여러 개의 머신러닝 모델을 동시에 적용할 수 있습니다.</p>\n<p>이 라이브러리는 pip로 설치할 수 있습니다:</p>\n<img src=\"/assets/img/2024-07-07-Acouplelinesofcodetoapply40MLmodels_1.png\">\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>여기에서는 mal 고객 데이터 세트를 사용합니다: <a href=\"https://gist.githubusercontent.com/pravalliyaram/5c05f43d2351249927b8a3f3cc3e5ecf/raw/8bd6144a87988213693754baaa13fb204933282d/Mall_Customers.csv\" rel=\"nofollow\" target=\"_blank\">링크</a></p>\n<p>데이터 세트의 처음을 살펴보겠습니다:</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n\ndf = pd.read_csv(<span class=\"hljs-string\">'https://gist.githubusercontent.com/pravalliyaram/5c05f43d2351249927b8a3f3cc3e5ecf/raw/8bd6144a87988213693754baaa13fb204933282d/Mall_Customers.csv'</span>)\n\ndf.head()\n</code></pre>\n<p><img src=\"/assets/img/2024-07-07-Acouplelinesofcodetoapply40MLmodels_2.png\" alt=\"이미지\"></p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>간단해요. \"지출 점수\"는 종속 변수 Y이고 다른 필드들은 X입니다.</p>\n<p>그런 다음, 데이터 집합을 훈련 세트와 테스트 세트로 분할하십시오:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">from</span> sklearn.<span class=\"hljs-property\">model_selection</span> <span class=\"hljs-keyword\">import</span> train_test_split\n\nX = df.<span class=\"hljs-property\">loc</span>[:, df.<span class=\"hljs-property\">columns</span> != <span class=\"hljs-string\">'Spending Score (1-100)'</span>]\ny = df[<span class=\"hljs-string\">'Spending Score (1-100)'</span>]\n\nX_train, X_test, y_train, y_test =…\n</code></pre>\n</body>\n</html>\n"},"__N_SSG":true}