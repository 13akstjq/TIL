{"pageProps":{"post":{"title":"Python을 사용한 PDF를 Word로 변환하는 5가지 방법 비교 가이드","description":"","date":"2024-07-09 14:43","slug":"2024-07-09-5WaystoConvertPDFtoWordinPythonAComparisonGuide","content":"\n\n![image](/assets/img/2024-07-09-5WaystoConvertPDFtoWordinPythonAComparisonGuide_0.png)\n\nPDF 문서를 편집 가능한 Microsoft Word 파일로 변환하면 변경 사항을 가할 수 있고 주석을 추가하며 PDF 콘텐츠에 대해 더 효율적으로 협업할 수 있습니다.\n\n이 블로그 포스트에서는 무료 오픈 소스 라이브러리 또는 상용 라이브러리를 사용하여 Python에서 PDF를 Word로 변환하는 5가지 솔루션을 모아서 각 솔루션의 장단점을 강조했습니다.\n\n- PyPDF2 및 python-docx를 사용하여 PDF를 Word로 변환\n- pdfplumber 및 python-docx를 사용하여 PDF를 Word로 변환\n- pdf2docx를 사용하여 PDF를 Word로 변환\n- Spire.PDF for Python을 사용하여 PDF를 Word로 변환\n- .NET을 통해 Aspose.Words for Python을 사용하여 PDF를 Word로 변환\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## PyPDF2와 python-docx를 사용하여 PDF를 Word로 변환하기\n\nPyPDF2는 Python에서 PDF 파일을 다루는 데 사용하는 무료 오픈 소스 라이브러리로, PDF 문서를 읽고 조작하며 처리하는 다양한 기능을 제공합니다.\n\npython-docx는 Microsoft Word (.docx) 파일을 생성하고 업데이트하는 데 사용하는 무료 오픈 소스 라이브러리입니다.\n\nPyPI를 통해 이들을 설치하려면 다음과 같은 pip 명령을 사용하십시오.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\npip install PyPDF2\npip install python-docx\n```\n\n코드 예시:\n\n```js\nfrom PyPDF2 import PdfReader\nfrom PyPDF2 import PdfWriter\nfrom docx import Document\nfrom docx.shared import Inches\n\n# 새 Word 문서 생성\ndocument = Document()\n\n# PDF 파일 열기\nwith open(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Input.pdf\", \"rb\") as file:\n    \n    # PdfReader 객체 생성\n    pdf_reader = PdfReader(file)\n\n    # 쓰기용으로 Word 문서 열기\n    with open(\"output.docx\", \"wb\") as output_file:\n\n        # 각 페이지를 순환하며\n        for page_num in range(len(pdf_reader.pages)):\n            \n            # 현재 페이지 가져오기\n            page = pdf_reader.pages[page_num]\n\n            # 페이지에서 텍스트 추출\n            text = page.extract_text()\n            \n            # 텍스트를 담는 단락을 Word에 추가\n            document.add_paragraph(text)\n\n# Word 문서 저장\ndocument.save(\"output.docx\")\n```\n\n장점:\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 무료입니다.\n\n단점:\n\n- 텍스트만 추출되어 워드 문서에 삽입됩니다.\n- 원본 PDF 파일의 모든 서식과 레이아웃이 손실됩니다.\n\n## pdfplumber와 python-docx를 이용해 PDF를 워드로 변환하기\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\npython-docx은 Microsoft Word (.docx) 파일을 만들고 업데이트하기 위한 무료 오픈소스 라이브러리입니다.\n\npdfplumber는 PDF 파일로부터 텍스트와 테이블을 추출하기 위한 무료 오픈소스 Python 라이브러리입니다.\n\n아래 명령어를 통해 PyPI를 통해 이를 설치할 수 있습니다.\n\n```js\npip install pdfplumber\npip install python-docx\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 코드 예시입니다:\n\n```js\nimport pdfplumber\nfrom docx import Document\nfrom docx.shared import Inches\n\n# PDF 파일 열기\nwith pdfplumber.open(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Input.pdf\") as pdf:\n\n    # PDF에서 텍스트 추출\n    text = \"\"\n    for page in pdf.pages:\n        text += page.extract_text()\n \n# 새 Word 문서 생성\ndocument = Document()\n\n# 문서에 텍스트가 들어갈 단락 추가\ndocument.add_paragraph(text)\n\n# Word 문서 저장\ndocument.save(\"output.docx\")\n```\n\n장점:\n\n- 무료입니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n**단점:**\n\n- 텍스트만 추출되어 워드 문서에 들어가게 됩니다.\n- 원본 PDF 파일의 모든 서식과 레이아웃이 사라집니다.\n\n## pdf2docx를 사용하여 PDF를 워드로 변환하기\n\npdf2docx는 PDF 파일을 Microsoft Word (.docx) 문서로 간단하고 효율적으로 변환하는 방법을 제공하는 Python 라이브러리입니다. 이는 문서 변환, 데이터 추출 및 텍스트 처리와 같은 여러 목적으로 사용할 수 있는 무료 오픈 소스 라이브러리입니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n다음 pip 명령을 사용하여 PyPI에서 설치할 수 있습니다.\n\n```js\npip install pdf2docx\n```\n\n코드 예시:\n\n```js\nfrom pdf2docx import Converter\n\ndef convert_pdf_to_docx(pdf_file, docx_file):\n\n    # Converter 객체 생성\n    cv = Converter(pdf_file)\n\n    # 지정된 PDF 페이지를 docx로 변환\n    cv.convert(docx_file, start=0, end=None)\n    cv.close()\n\n# PDF를 Docx 파일로 변환\nconvert_pdf_to_docx(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Input.pdf\", \"Output.docx\")\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n장점:\n\n- 무료입니다.\n- 텍스트 및 그래픽 요소가 모두 변환됩니다.\n- 형식 및 레이아웃이 유지됩니다.\n\n단점:\n\n- 상업용 라이브러리를 사용하는 것보다 복잡한 PDF 문서를 변환하는 데 시간이 조금 더 소요됩니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## Spire.PDF를 사용하여 PDF를 Word로 변환하기\n\nSpire.PDF for Python은 Python에서 PDF 문서를 처리하는 기능이 풍부한 라이브러리입니다. PDF 파일을 프로그래밍적으로 만들거나 수정하거나 조작하기 위한 다양한 도구를 제공합니다.\n\nPyPI에서 다음 pip 명령어를 사용하여 설치할 수 있습니다.\n\n```js\npip install Spire.PDF\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n코드 예시:\n\n```python\nfrom spire.pdf.common import *\nfrom spire.pdf import *\n\n# PdfDocument 객체 생성\ndoc = PdfDocument()\n\n# PDF 문서 불러오기\ndoc.LoadFromFile(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Input.pdf\")\n\n# 스트리밍 레이아웃으로 PDF를 Word로 변환\n# doc.ConvertOptions.SetPdfToDocOptions(True, True)\n\n# docx 파일로 변환\ndoc.SaveToFile(\"Output.docx\", FileFormat.DOCX)\n\n# 리소스 해제\ndoc.Close()\n```\n\n장점:\n\n- 텍스트와 그래픽 요소가 모두 변환됩니다.\n- 서식과 레이아웃이 보존됩니다(고정 페이지 레이아웃 모드에서).\n- 변환 속도가 빠릅니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n단점:\n\n- 최저 수준의 라이선스 비용은 $999입니다.\n\n## Aspose.Words for Python을 사용하여 PDF를 Word로 변환하기\n\nAspose.Words for Python via .NET은 Python을 통해 Microsoft Word 문서(.docx, .doc)를 조작하고 변환하는 상용 라이브러리입니다. 또한 PDF 및 HTML과 같은 다른 형식을 Word 형식으로 변환하는 기능도 지원합니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n테이블 태그를 Markdown 형식으로 변경해보세요.\n\n\n| Header One | Header Two |\n|------------|------------|\n| Data 1     | Data 2     |\n| Data 3     | Data 4     |\n\n\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n장점:\n\n- 텍스트 및 그래픽 요소가 모두 변환됩니다.\n- 형식과 레이아웃이 보존됩니다.\n- 변환 속도가 빠릅니다.\n\n단점:\n\n- 가장 낮은 수준의 라이선스 비용은 $1199입니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 결론\n\n무료이자 오픈 소스인 라이브러리를 사용하면 Python을 활용해 PDF 및 Word 문서를 처리할 수 있어 편리하며, 라이선스나 비용에 대한 걱정 없이 사용할 수 있습니다. 상업용 솔루션은 일반적으로 무료이자 오픈 소스인 라이브러리보다 더 고급 기능을 제공하며 더 나은 성능을 보장합니다. 이러한 옵션 중 어떤 것을 선택할지는 당신의 특정 요구 사항, 예산 및 필요한 기능 수준에 따라 다를 것입니다.\n\n## 관련 자료\n\nPython에서 PDF에 주석 달기의 8가지 방법\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬에서 PDF 파일을 나누고 병합하기\n\n파이썬에서 PDF의 텍스트 추출하기\n\n파이썬에서 PDF에서 이미지 추출하기","ogImage":{"url":"/assets/img/2024-07-09-5WaystoConvertPDFtoWordinPythonAComparisonGuide_0.png"},"coverImage":"/assets/img/2024-07-09-5WaystoConvertPDFtoWordinPythonAComparisonGuide_0.png","tag":["Tech"],"readingTime":9},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-07-09-5WaystoConvertPDFtoWordinPythonAComparisonGuide_0.png\" alt=\"image\"></p>\n<p>PDF 문서를 편집 가능한 Microsoft Word 파일로 변환하면 변경 사항을 가할 수 있고 주석을 추가하며 PDF 콘텐츠에 대해 더 효율적으로 협업할 수 있습니다.</p>\n<p>이 블로그 포스트에서는 무료 오픈 소스 라이브러리 또는 상용 라이브러리를 사용하여 Python에서 PDF를 Word로 변환하는 5가지 솔루션을 모아서 각 솔루션의 장단점을 강조했습니다.</p>\n<ul>\n<li>PyPDF2 및 python-docx를 사용하여 PDF를 Word로 변환</li>\n<li>pdfplumber 및 python-docx를 사용하여 PDF를 Word로 변환</li>\n<li>pdf2docx를 사용하여 PDF를 Word로 변환</li>\n<li>Spire.PDF for Python을 사용하여 PDF를 Word로 변환</li>\n<li>.NET을 통해 Aspose.Words for Python을 사용하여 PDF를 Word로 변환</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>PyPDF2와 python-docx를 사용하여 PDF를 Word로 변환하기</h2>\n<p>PyPDF2는 Python에서 PDF 파일을 다루는 데 사용하는 무료 오픈 소스 라이브러리로, PDF 문서를 읽고 조작하며 처리하는 다양한 기능을 제공합니다.</p>\n<p>python-docx는 Microsoft Word (.docx) 파일을 생성하고 업데이트하는 데 사용하는 무료 오픈 소스 라이브러리입니다.</p>\n<p>PyPI를 통해 이들을 설치하려면 다음과 같은 pip 명령을 사용하십시오.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\">pip install <span class=\"hljs-title class_\">PyPDF2</span>\npip install python-docx\n</code></pre>\n<p>코드 예시:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">from</span> <span class=\"hljs-title class_\">PyPDF2</span> <span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">PdfReader</span>\n<span class=\"hljs-keyword\">from</span> <span class=\"hljs-title class_\">PyPDF2</span> <span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">PdfWriter</span>\n<span class=\"hljs-keyword\">from</span> docx <span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Document</span>\n<span class=\"hljs-keyword\">from</span> docx.<span class=\"hljs-property\">shared</span> <span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Inches</span>\n\n# 새 <span class=\"hljs-title class_\">Word</span> 문서 생성\n<span class=\"hljs-variable language_\">document</span> = <span class=\"hljs-title class_\">Document</span>()\n\n# <span class=\"hljs-variable constant_\">PDF</span> 파일 열기\n<span class=\"hljs-keyword\">with</span> <span class=\"hljs-title function_\">open</span>(<span class=\"hljs-string\">\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Input.pdf\"</span>, <span class=\"hljs-string\">\"rb\"</span>) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-attr\">file</span>:\n    \n    # <span class=\"hljs-title class_\">PdfReader</span> 객체 생성\n    pdf_reader = <span class=\"hljs-title class_\">PdfReader</span>(file)\n\n    # 쓰기용으로 <span class=\"hljs-title class_\">Word</span> 문서 열기\n    <span class=\"hljs-keyword\">with</span> <span class=\"hljs-title function_\">open</span>(<span class=\"hljs-string\">\"output.docx\"</span>, <span class=\"hljs-string\">\"wb\"</span>) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-attr\">output_file</span>:\n\n        # 각 페이지를 순환하며\n        <span class=\"hljs-keyword\">for</span> page_num <span class=\"hljs-keyword\">in</span> <span class=\"hljs-title function_\">range</span>(<span class=\"hljs-title function_\">len</span>(pdf_reader.<span class=\"hljs-property\">pages</span>)):\n            \n            # 현재 페이지 가져오기\n            page = pdf_reader.<span class=\"hljs-property\">pages</span>[page_num]\n\n            # 페이지에서 텍스트 추출\n            text = page.<span class=\"hljs-title function_\">extract_text</span>()\n            \n            # 텍스트를 담는 단락을 <span class=\"hljs-title class_\">Word</span>에 추가\n            <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">add_paragraph</span>(text)\n\n# <span class=\"hljs-title class_\">Word</span> 문서 저장\n<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">save</span>(<span class=\"hljs-string\">\"output.docx\"</span>)\n</code></pre>\n<p>장점:</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ul>\n<li>무료입니다.</li>\n</ul>\n<p>단점:</p>\n<ul>\n<li>텍스트만 추출되어 워드 문서에 삽입됩니다.</li>\n<li>원본 PDF 파일의 모든 서식과 레이아웃이 손실됩니다.</li>\n</ul>\n<h2>pdfplumber와 python-docx를 이용해 PDF를 워드로 변환하기</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>python-docx은 Microsoft Word (.docx) 파일을 만들고 업데이트하기 위한 무료 오픈소스 라이브러리입니다.</p>\n<p>pdfplumber는 PDF 파일로부터 텍스트와 테이블을 추출하기 위한 무료 오픈소스 Python 라이브러리입니다.</p>\n<p>아래 명령어를 통해 PyPI를 통해 이를 설치할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">pip install pdfplumber\npip install python-docx\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>아래는 코드 예시입니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> pdfplumber\n<span class=\"hljs-keyword\">from</span> docx <span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Document</span>\n<span class=\"hljs-keyword\">from</span> docx.<span class=\"hljs-property\">shared</span> <span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Inches</span>\n\n# <span class=\"hljs-variable constant_\">PDF</span> 파일 열기\n<span class=\"hljs-keyword\">with</span> pdfplumber.<span class=\"hljs-title function_\">open</span>(<span class=\"hljs-string\">\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Input.pdf\"</span>) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-attr\">pdf</span>:\n\n    # <span class=\"hljs-variable constant_\">PDF</span>에서 텍스트 추출\n    text = <span class=\"hljs-string\">\"\"</span>\n    <span class=\"hljs-keyword\">for</span> page <span class=\"hljs-keyword\">in</span> pdf.<span class=\"hljs-property\">pages</span>:\n        text += page.<span class=\"hljs-title function_\">extract_text</span>()\n \n# 새 <span class=\"hljs-title class_\">Word</span> 문서 생성\n<span class=\"hljs-variable language_\">document</span> = <span class=\"hljs-title class_\">Document</span>()\n\n# 문서에 텍스트가 들어갈 단락 추가\n<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">add_paragraph</span>(text)\n\n# <span class=\"hljs-title class_\">Word</span> 문서 저장\n<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">save</span>(<span class=\"hljs-string\">\"output.docx\"</span>)\n</code></pre>\n<p>장점:</p>\n<ul>\n<li>무료입니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p><strong>단점:</strong></p>\n<ul>\n<li>텍스트만 추출되어 워드 문서에 들어가게 됩니다.</li>\n<li>원본 PDF 파일의 모든 서식과 레이아웃이 사라집니다.</li>\n</ul>\n<h2>pdf2docx를 사용하여 PDF를 워드로 변환하기</h2>\n<p>pdf2docx는 PDF 파일을 Microsoft Word (.docx) 문서로 간단하고 효율적으로 변환하는 방법을 제공하는 Python 라이브러리입니다. 이는 문서 변환, 데이터 추출 및 텍스트 처리와 같은 여러 목적으로 사용할 수 있는 무료 오픈 소스 라이브러리입니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>다음 pip 명령을 사용하여 PyPI에서 설치할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">pip install pdf2docx\n</code></pre>\n<p>코드 예시:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">from</span> pdf2docx <span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Converter</span>\n\ndef <span class=\"hljs-title function_\">convert_pdf_to_docx</span>(pdf_file, docx_file):\n\n    # <span class=\"hljs-title class_\">Converter</span> 객체 생성\n    cv = <span class=\"hljs-title class_\">Converter</span>(pdf_file)\n\n    # 지정된 <span class=\"hljs-variable constant_\">PDF</span> 페이지를 docx로 변환\n    cv.<span class=\"hljs-title function_\">convert</span>(docx_file, start=<span class=\"hljs-number\">0</span>, end=<span class=\"hljs-title class_\">None</span>)\n    cv.<span class=\"hljs-title function_\">close</span>()\n\n# <span class=\"hljs-variable constant_\">PDF</span>를 <span class=\"hljs-title class_\">Docx</span> 파일로 변환\n<span class=\"hljs-title function_\">convert_pdf_to_docx</span>(<span class=\"hljs-string\">\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Input.pdf\"</span>, <span class=\"hljs-string\">\"Output.docx\"</span>)\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>장점:</p>\n<ul>\n<li>무료입니다.</li>\n<li>텍스트 및 그래픽 요소가 모두 변환됩니다.</li>\n<li>형식 및 레이아웃이 유지됩니다.</li>\n</ul>\n<p>단점:</p>\n<ul>\n<li>상업용 라이브러리를 사용하는 것보다 복잡한 PDF 문서를 변환하는 데 시간이 조금 더 소요됩니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>Spire.PDF를 사용하여 PDF를 Word로 변환하기</h2>\n<p>Spire.PDF for Python은 Python에서 PDF 문서를 처리하는 기능이 풍부한 라이브러리입니다. PDF 파일을 프로그래밍적으로 만들거나 수정하거나 조작하기 위한 다양한 도구를 제공합니다.</p>\n<p>PyPI에서 다음 pip 명령어를 사용하여 설치할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">pip install <span class=\"hljs-title class_\">Spire</span>.<span class=\"hljs-property\">PDF</span>\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>코드 예시:</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> spire.pdf.common <span class=\"hljs-keyword\">import</span> *\n<span class=\"hljs-keyword\">from</span> spire.pdf <span class=\"hljs-keyword\">import</span> *\n\n<span class=\"hljs-comment\"># PdfDocument 객체 생성</span>\ndoc = PdfDocument()\n\n<span class=\"hljs-comment\"># PDF 문서 불러오기</span>\ndoc.LoadFromFile(<span class=\"hljs-string\">\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Input.pdf\"</span>)\n\n<span class=\"hljs-comment\"># 스트리밍 레이아웃으로 PDF를 Word로 변환</span>\n<span class=\"hljs-comment\"># doc.ConvertOptions.SetPdfToDocOptions(True, True)</span>\n\n<span class=\"hljs-comment\"># docx 파일로 변환</span>\ndoc.SaveToFile(<span class=\"hljs-string\">\"Output.docx\"</span>, FileFormat.DOCX)\n\n<span class=\"hljs-comment\"># 리소스 해제</span>\ndoc.Close()\n</code></pre>\n<p>장점:</p>\n<ul>\n<li>텍스트와 그래픽 요소가 모두 변환됩니다.</li>\n<li>서식과 레이아웃이 보존됩니다(고정 페이지 레이아웃 모드에서).</li>\n<li>변환 속도가 빠릅니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>단점:</p>\n<ul>\n<li>최저 수준의 라이선스 비용은 $999입니다.</li>\n</ul>\n<h2>Aspose.Words for Python을 사용하여 PDF를 Word로 변환하기</h2>\n<p>Aspose.Words for Python via .NET은 Python을 통해 Microsoft Word 문서(.docx, .doc)를 조작하고 변환하는 상용 라이브러리입니다. 또한 PDF 및 HTML과 같은 다른 형식을 Word 형식으로 변환하는 기능도 지원합니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>테이블 태그를 Markdown 형식으로 변경해보세요.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Header One</th><th>Header Two</th></tr></thead><tbody><tr><td>Data 1</td><td>Data 2</td></tr><tr><td>Data 3</td><td>Data 4</td></tr></tbody></table>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>장점:</p>\n<ul>\n<li>텍스트 및 그래픽 요소가 모두 변환됩니다.</li>\n<li>형식과 레이아웃이 보존됩니다.</li>\n<li>변환 속도가 빠릅니다.</li>\n</ul>\n<p>단점:</p>\n<ul>\n<li>가장 낮은 수준의 라이선스 비용은 $1199입니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>결론</h2>\n<p>무료이자 오픈 소스인 라이브러리를 사용하면 Python을 활용해 PDF 및 Word 문서를 처리할 수 있어 편리하며, 라이선스나 비용에 대한 걱정 없이 사용할 수 있습니다. 상업용 솔루션은 일반적으로 무료이자 오픈 소스인 라이브러리보다 더 고급 기능을 제공하며 더 나은 성능을 보장합니다. 이러한 옵션 중 어떤 것을 선택할지는 당신의 특정 요구 사항, 예산 및 필요한 기능 수준에 따라 다를 것입니다.</p>\n<h2>관련 자료</h2>\n<p>Python에서 PDF에 주석 달기의 8가지 방법</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>파이썬에서 PDF 파일을 나누고 병합하기</p>\n<p>파이썬에서 PDF의 텍스트 추출하기</p>\n<p>파이썬에서 PDF에서 이미지 추출하기</p>\n</body>\n</html>\n"},"__N_SSG":true}