{"pageProps":{"post":{"title":"제발, 제발 If-Else 문 사용하기, 아니면 후회할 거예요","description":"","date":"2024-07-09 14:51","slug":"2024-07-09-PleasePLEASEUseIf-ElseStatementsorIllFindYou","content":"\n![이미지](/TIL/assets/img/2024-07-09-PleasePLEASEUseIf-ElseStatementsorIllFindYou_0.png)\n\n프로그래밍 세계에서 명확한 조건문이 없는 코드는 미치도록 짜증이 납니다. 교통 부호 없는 도시를 운전하는 것과 같습니다. 난잡하고 혼란스럽고 정말 위험합니다. 그래서 논리적으로 생각한다면, if-else 문을 사용해주세요. 그렇지 않다면, 당신을 찾아가서 강제로 코드 리팩토링을 시킬지도 몰라요.\n\n# 조건문의 아름다움\n\nif-else 문은 프로그래밍에서 의사 결정을 하는 데 중추적인 역할을 합니다. 다양한 조건에 따라 코드가 가지를 치거나 다른 경로를 따라갈 수 있습니다. 이렇게 함으로써 코드가 유연하고 가독성이 좋아지며 유지보수하기 쉬워집니다. 간단한 예제로 설명해보겠습니다:\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n만약 온도가 30도를 넘으면:\nprint(\"뜨거운 날씨네요, 수분을 충분히 섭취하세요!\")\n그렇지 않으면:\nprint(\"날씨가 좋고 시원해요.\")\n\n이 구조를 사용하면 코드를 읽는 사람이 각 메시지가 출력되는 조건을 즉시 이해할 수 있습니다. 명확하고 간결하며 효율적입니다.\n\n# 중첩된 삼항 연산자의 공포\n\n이제 중첩된 삼항 연산자의 공포를 상상해보세요. 다음의 혼돈스러운 예제를 해독하려고 노력하는 것을 상상해보세요:\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nmessage = \"기온이 30도를 넘는 더운 날씨네요! 수분을 충분히 섭취하세요.\" if temperature > 30 else \"날씨가 시원해서 좋네요.\"\n\n이것은 코드를 간결하게 줄이는 똑똑한 방법인 것 같지만, 조건이 더 복잡해지면 읽기가 굉장히 어려워집니다. 중첩된 삼항 연산자는 마침표가 없는 소설을 읽는 것과 같습니다. 뜻을 이해할 수는 있겠지만, 고통스러운 경험이 될 것입니다.\n\n# 명확성을 위한 이유\n\n명확한 코드는 예의뿐만 아니라 필수적입니다. 깨끗하고 이해하기 쉬운 코드를 작성할 때, 당신뿐만 아니라 미래에 프로젝트에 참여할 수 있는 모든 개발자들에게 도움이 됩니다. 복잡하고 따라가기 어려운 로직이 가득한 코드베이스를 상속받는 상황을 상상해보세요. 당신은 당혹스럽고 오류가 발생하기 쉬운 상황에 처할 것입니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nif-else문을 사용하면 당신의 의도를 명확하게 전달할 수 있습니다. 코드를 읽는 사람에게 로드맵을 제공하여 디버깅, 수정 및 확장을 쉽게 만들 수 있습니다. 아래에는 차이를 보여주기 위한 더 복잡한 예제가 있습니다:\n\n# If-Else 방식\n\n```js\nif user.is_logged_in:\n    if user.has_permission(\"admin\"):\n        display_admin_panel()\n    else:\n        display_user_dashboard()\nelse:\n    prompt_login()\n```\n\n# Ternary 방식\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\ndisplay_admin_panel() if user.is_logged_in and user.has_permission(\"admin\") else display_user_dashboard() if user.is_logged_in else prompt_login()\n```\n\n어떤 방법을 유지하시겠습니까?\n\n# 개발자들에게 호소\n\n저와 같은 개발자 여러분들에게 작은 부탁이 있습니다. 제 정신 건강과 여러분의 것을 위해, if-else 문을 사용해 주세요. 이것은 좋은 습관뿐만 아니라 생명줄이기도 합니다. 당신의 논리를 하나의 난해한 줄로 압축하려는 유혹이 들 때, 이 글을 기억해 주세요. 언젠가 여러분의 코드를 읽게 될 개발자가 여러분을 감사하며 명료함을 선택했음을 기억해 주세요.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그게 만족스럽지 않다면, 기억해둬 — 내가 널 찾을 수 있는 곳을 알고 있다니까.\n","ogImage":{"url":"/assets/img/2024-07-09-PleasePLEASEUseIf-ElseStatementsorIllFindYou_0.png"},"coverImage":"/TIL/assets/img/2024-07-09-PleasePLEASEUseIf-ElseStatementsorIllFindYou_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/TIL/assets/img/2024-07-09-PleasePLEASEUseIf-ElseStatementsorIllFindYou_0.png\" alt=\"이미지\"></p>\n<p>프로그래밍 세계에서 명확한 조건문이 없는 코드는 미치도록 짜증이 납니다. 교통 부호 없는 도시를 운전하는 것과 같습니다. 난잡하고 혼란스럽고 정말 위험합니다. 그래서 논리적으로 생각한다면, if-else 문을 사용해주세요. 그렇지 않다면, 당신을 찾아가서 강제로 코드 리팩토링을 시킬지도 몰라요.</p>\n<h1>조건문의 아름다움</h1>\n<p>if-else 문은 프로그래밍에서 의사 결정을 하는 데 중추적인 역할을 합니다. 다양한 조건에 따라 코드가 가지를 치거나 다른 경로를 따라갈 수 있습니다. 이렇게 함으로써 코드가 유연하고 가독성이 좋아지며 유지보수하기 쉬워집니다. 간단한 예제로 설명해보겠습니다:</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>만약 온도가 30도를 넘으면:\nprint(\"뜨거운 날씨네요, 수분을 충분히 섭취하세요!\")\n그렇지 않으면:\nprint(\"날씨가 좋고 시원해요.\")</p>\n<p>이 구조를 사용하면 코드를 읽는 사람이 각 메시지가 출력되는 조건을 즉시 이해할 수 있습니다. 명확하고 간결하며 효율적입니다.</p>\n<h1>중첩된 삼항 연산자의 공포</h1>\n<p>이제 중첩된 삼항 연산자의 공포를 상상해보세요. 다음의 혼돈스러운 예제를 해독하려고 노력하는 것을 상상해보세요:</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>message = \"기온이 30도를 넘는 더운 날씨네요! 수분을 충분히 섭취하세요.\" if temperature > 30 else \"날씨가 시원해서 좋네요.\"</p>\n<p>이것은 코드를 간결하게 줄이는 똑똑한 방법인 것 같지만, 조건이 더 복잡해지면 읽기가 굉장히 어려워집니다. 중첩된 삼항 연산자는 마침표가 없는 소설을 읽는 것과 같습니다. 뜻을 이해할 수는 있겠지만, 고통스러운 경험이 될 것입니다.</p>\n<h1>명확성을 위한 이유</h1>\n<p>명확한 코드는 예의뿐만 아니라 필수적입니다. 깨끗하고 이해하기 쉬운 코드를 작성할 때, 당신뿐만 아니라 미래에 프로젝트에 참여할 수 있는 모든 개발자들에게 도움이 됩니다. 복잡하고 따라가기 어려운 로직이 가득한 코드베이스를 상속받는 상황을 상상해보세요. 당신은 당혹스럽고 오류가 발생하기 쉬운 상황에 처할 것입니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>if-else문을 사용하면 당신의 의도를 명확하게 전달할 수 있습니다. 코드를 읽는 사람에게 로드맵을 제공하여 디버깅, 수정 및 확장을 쉽게 만들 수 있습니다. 아래에는 차이를 보여주기 위한 더 복잡한 예제가 있습니다:</p>\n<h1>If-Else 방식</h1>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">if</span> user.<span class=\"hljs-property\">is_logged_in</span>:\n    <span class=\"hljs-keyword\">if</span> user.<span class=\"hljs-title function_\">has_permission</span>(<span class=\"hljs-string\">\"admin\"</span>):\n        <span class=\"hljs-title function_\">display_admin_panel</span>()\n    <span class=\"hljs-attr\">else</span>:\n        <span class=\"hljs-title function_\">display_user_dashboard</span>()\n<span class=\"hljs-attr\">else</span>:\n    <span class=\"hljs-title function_\">prompt_login</span>()\n</code></pre>\n<h1>Ternary 방식</h1>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">display_admin_panel</span>() <span class=\"hljs-keyword\">if</span> user.<span class=\"hljs-property\">is_logged_in</span> and user.<span class=\"hljs-title function_\">has_permission</span>(<span class=\"hljs-string\">\"admin\"</span>) <span class=\"hljs-keyword\">else</span> <span class=\"hljs-title function_\">display_user_dashboard</span>() <span class=\"hljs-keyword\">if</span> user.<span class=\"hljs-property\">is_logged_in</span> <span class=\"hljs-keyword\">else</span> <span class=\"hljs-title function_\">prompt_login</span>()\n</code></pre>\n<p>어떤 방법을 유지하시겠습니까?</p>\n<h1>개발자들에게 호소</h1>\n<p>저와 같은 개발자 여러분들에게 작은 부탁이 있습니다. 제 정신 건강과 여러분의 것을 위해, if-else 문을 사용해 주세요. 이것은 좋은 습관뿐만 아니라 생명줄이기도 합니다. 당신의 논리를 하나의 난해한 줄로 압축하려는 유혹이 들 때, 이 글을 기억해 주세요. 언젠가 여러분의 코드를 읽게 될 개발자가 여러분을 감사하며 명료함을 선택했음을 기억해 주세요.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>그게 만족스럽지 않다면, 기억해둬 — 내가 널 찾을 수 있는 곳을 알고 있다니까.</p>\n</body>\n</html>\n"},"__N_SSG":true}