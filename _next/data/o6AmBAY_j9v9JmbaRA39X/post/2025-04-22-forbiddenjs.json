{"pageProps":{"post":{"title":"nextjs 15 접근 금지 페이지 forbidden.js로 쉽게 만드는 방법","description":"","date":"2025-04-22 02:37","slug":"2025-04-22-forbiddenjs","content":"\n\n# forbidden.js 파일 설명\n\nNext.js에서 인증 과정 중 forbidden 함수가 호출될 때 표시되는 UI를 커스터마이징할 수 있는 파일이 바로 forbidden.js예요. 이 파일을 통해 사용자가 권한이 없을 때 어떤 화면을 보여줄지 자유롭게 디자인할 수 있답니다. 그리고 중요한 점은, 이 컴포넌트를 렌더링하면 Next.js가 자동으로 HTTP 상태 코드 403(Forbidden)을 반환한다는 거예요.\n\n예를 들어, 기본적인 forbidden.js는 아래처럼 작성할 수 있어요:\n\n```js\nimport Link from 'next/link'\n\nexport default function Forbidden() {\n  return (\n    <div>\n      <h2>Forbidden</h2>\n      <p>You are not authorized to access this resource.</p>\n      <Link href=\"/\">Return Home</Link>\n    </div>\n  )\n}\n```\n\n조금 더 친근하게 메시지를 바꾸거나, 추가적인 안내 문구를 넣어 사용자 경험을 개선할 수도 있겠죠? 예를 들어, 로그인이 필요한 경우라면 로그인 페이지로 바로 가는 버튼을 추가하는 것도 좋은 방법이에요.\n\n```js\nimport Link from 'next/link'\n\nexport default function Forbidden() {\n  return (\n    <div style={{ textAlign: 'center', margin: '2rem' }}>\n      <h2>접근 금지</h2>\n      <p>이 페이지에 접근할 권한이 없어요.</p>\n      <p>계속하려면 로그인이 필요합니다.</p>\n      <Link href=\"/login\">\n        <a style={{ color: 'blue', textDecoration: 'underline' }}>로그인 하러 가기</a>\n      </Link>\n      <br />\n      <Link href=\"/\">\n        <a style={{ color: 'gray', marginTop: '1rem', display: 'inline-block' }}>홈으로 돌아가기</a>\n      </Link>\n    </div>\n  )\n}\n```\n\n> 참고로, 이런 방식으로 UI를 커스텀하면 사용자에게 명확한 안내를 제공할 수 있고, 더 나은 사용자 경험(UX)을 만들 수 있다는 점 기억하세요!\n\n## 참고자료\n- Next.js 공식 문서: [Error Handling](https://nextjs.org/docs/advanced-features/custom-error-page)\n- HTTP 상태 코드 403: [MDN - 403 Forbidden](https://developer.mozilla.org/ko/docs/Web/HTTP/Status/403)\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n### Props\n\nforbidden.js 컴포넌트는 어떤 props도 받지 않습니다.\n\n## 버전 히스토리\n\n| 버전       | 변경사항                   |\n|------------|---------------------------|\n| `v15.1.0`  | forbidden.js가 새로 추가됨 |\n\n버전 히스토리를 보면 forbidden.js는 v15.1.0에서 처음 등장했네요. 새로운 컴포넌트를 도입할 때는 이렇게 변경사항을 꼼꼼히 챙겨두면 나중에 관리할 때 정말 도움이 됩니다. 개발하면서 버전 관리는 꼭 습관처럼 하시길 추천드려요!","ogImage":{"url":"/TIL/assets/img/nextjs.png"},"coverImage":"/TIL/assets/img/nextjs.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>forbidden.js 파일 설명</h1>\n<p>Next.js에서 인증 과정 중 forbidden 함수가 호출될 때 표시되는 UI를 커스터마이징할 수 있는 파일이 바로 forbidden.js예요. 이 파일을 통해 사용자가 권한이 없을 때 어떤 화면을 보여줄지 자유롭게 디자인할 수 있답니다. 그리고 중요한 점은, 이 컴포넌트를 렌더링하면 Next.js가 자동으로 HTTP 상태 코드 403(Forbidden)을 반환한다는 거예요.</p>\n<p>예를 들어, 기본적인 forbidden.js는 아래처럼 작성할 수 있어요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Link</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'next/link'</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Forbidden</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Forbidden<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>You are not authorized to access this resource.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/\"</span>></span>Return Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Link</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n  )\n}\n</code></pre>\n<p>조금 더 친근하게 메시지를 바꾸거나, 추가적인 안내 문구를 넣어 사용자 경험을 개선할 수도 있겠죠? 예를 들어, 로그인이 필요한 경우라면 로그인 페이지로 바로 가는 버튼을 추가하는 것도 좋은 방법이에요.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Link</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'next/link'</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Forbidden</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">textAlign:</span> '<span class=\"hljs-attr\">center</span>', <span class=\"hljs-attr\">margin:</span> '<span class=\"hljs-attr\">2rem</span>' }}></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>접근 금지<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>이 페이지에 접근할 권한이 없어요.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>계속하려면 로그인이 필요합니다.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/login\"</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">color:</span> '<span class=\"hljs-attr\">blue</span>', <span class=\"hljs-attr\">textDecoration:</span> '<span class=\"hljs-attr\">underline</span>' }}></span>로그인 하러 가기<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Link</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/\"</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">color:</span> '<span class=\"hljs-attr\">gray</span>', <span class=\"hljs-attr\">marginTop:</span> '<span class=\"hljs-attr\">1rem</span>', <span class=\"hljs-attr\">display:</span> '<span class=\"hljs-attr\">inline-block</span>' }}></span>홈으로 돌아가기<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Link</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n  )\n}\n</code></pre>\n<blockquote>\n<p>참고로, 이런 방식으로 UI를 커스텀하면 사용자에게 명확한 안내를 제공할 수 있고, 더 나은 사용자 경험(UX)을 만들 수 있다는 점 기억하세요!</p>\n</blockquote>\n<h2>참고자료</h2>\n<ul>\n<li>Next.js 공식 문서: <a href=\"https://nextjs.org/docs/advanced-features/custom-error-page\" rel=\"nofollow\" target=\"_blank\">Error Handling</a></li>\n<li>HTTP 상태 코드 403: <a href=\"https://developer.mozilla.org/ko/docs/Web/HTTP/Status/403\" rel=\"nofollow\" target=\"_blank\">MDN - 403 Forbidden</a></li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h3>Props</h3>\n<p>forbidden.js 컴포넌트는 어떤 props도 받지 않습니다.</p>\n<h2>버전 히스토리</h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>버전</th><th>변경사항</th></tr></thead><tbody><tr><td><code>v15.1.0</code></td><td>forbidden.js가 새로 추가됨</td></tr></tbody></table>\n<p>버전 히스토리를 보면 forbidden.js는 v15.1.0에서 처음 등장했네요. 새로운 컴포넌트를 도입할 때는 이렇게 변경사항을 꼼꼼히 챙겨두면 나중에 관리할 때 정말 도움이 됩니다. 개발하면서 버전 관리는 꼭 습관처럼 하시길 추천드려요!</p>\n</body>\n</html>\n"},"__N_SSG":true}