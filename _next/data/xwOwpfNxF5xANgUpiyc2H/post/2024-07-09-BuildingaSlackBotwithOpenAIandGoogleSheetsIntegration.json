{"pageProps":{"post":{"title":"OpenAI와 Google Sheets 통합으로 Slack 봇 만드는 방법","description":"","date":"2024-07-09 18:55","slug":"2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration","content":"\n이 글에서 OpenAI Assistants의 기능을 활용하고 Google Sheets와 통합하여 사용자 쿼리에 지능적으로 응답하는 Slack 봇을 만드는 방법을 안내할 거에요. 이 봇은 사용자가 어려움을 겪을 때 Slack에서 지원 티켓을 생성할 수도 있어요. 이 튜토리얼을 마치면 Google Sheets 문서에서 관련 정보를 가져와 질문에 답하거나 티켓을 생성할 수 있는 봇을 보유하게 될 거에요.\n\n# 프로젝트 개요\n\n이 프로젝트의 주요 구성 요소는 다음과 같아요:\n\n- app.py: Slack 앱을 초기화하고 수신된 메시지를 처리합니다.\n- assistants.py: OpenAI API와의 상호 작용을 관리하고 사용자 쿼리를 처리합니다.\n- google_sheets_integration.py: Google Sheets를 통합하여 사용자 쿼리에 대한 답변에 필요한 관련 정보를 가져옵니다.\n- create_ticket.py: 특정 Slack 채널에서 지원 티켓을 생성합니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n각 구성 요소를 살펴보고 어떻게 작동하여 기능적인 Slack 봇을 만드는지 알아봅시다.\n\n# 단계 1: 환경 설정\n\n먼저, 환경을 설정해야 합니다. 환경 변수를 관리하기 위해 dotenv를 사용할 것입니다. 다음 종속성이 설치되어 있는지 확인해주세요:\n\n![image](/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_0.png)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nAPI 키 및 토큰을 저장하는 .env 파일을 만들어보세요:\n\n![Image](/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_1.png)\n\n# 단계 2: Slack 앱 초기화\n\napp.py 스크립트는 Slack 앱을 초기화하고 수신 메시지를 처리합니다. 이는 OpenAI API를 사용하여 응답을 생성하고 쓰레드 메시지의 컨텍스트를 유지합니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![Image](/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_2.png)\n\n# 단계 3: OpenAI 통합\n\nassistants.py 스크립트는 OpenAI API와 상호 작용을 관리하고 사용자 쿼리를 처리합니다. Google Sheets 문서에서 정보를 기반으로 응답이 이루어지도록 합니다.\n\n![Image](/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_3.png)\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 단계 4: Google Sheets와 통합하기\n\n구글 시트 통합 스크립트인 google_sheets_integration.py는 사용자 쿼리에 답변하기 위한 관련 정보를 가져 오는 데 Google Sheets와 통합됩니다.\n\n![이미지](/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_4.png)\n\n# 단계 5: 지원 티켓 생성하기\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\ncreate_ticket.py 스크립트는 지정된 Slack 채널에 지원 티켓을 생성합니다.\n\n![ticket image](/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_5.png)\n\n# 마무리\n\n이 가이드를 따라가면, OpenAI 및 Google Sheets와 통합된 Slack 봇을 설정하여 사용자 쿼리에 지능적으로 응답하고 지원 티켓을 생성할 수 있습니다. 이 프로젝트는 다양한 사용 사례에 맞게 확장 및 사용자 정의할 수 있는 기본 기반입니다.\n\n<!-- TIL 수평 -->\n\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n일부 오류가 발생할 수 있고, 봇을 사용자의 요구에 맞게 맞추기 위해 조정이 필요할 수 있습니다. 그러나 이 구현은 프로젝트에 좋은 출발점을 제공해줄 것입니다. 즐거운 코딩되세요!\n","ogImage":{"url":"/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_0.png"},"coverImage":"/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>이 글에서 OpenAI Assistants의 기능을 활용하고 Google Sheets와 통합하여 사용자 쿼리에 지능적으로 응답하는 Slack 봇을 만드는 방법을 안내할 거에요. 이 봇은 사용자가 어려움을 겪을 때 Slack에서 지원 티켓을 생성할 수도 있어요. 이 튜토리얼을 마치면 Google Sheets 문서에서 관련 정보를 가져와 질문에 답하거나 티켓을 생성할 수 있는 봇을 보유하게 될 거에요.</p>\n<h1>프로젝트 개요</h1>\n<p>이 프로젝트의 주요 구성 요소는 다음과 같아요:</p>\n<ul>\n<li>app.py: Slack 앱을 초기화하고 수신된 메시지를 처리합니다.</li>\n<li>assistants.py: OpenAI API와의 상호 작용을 관리하고 사용자 쿼리를 처리합니다.</li>\n<li>google_sheets_integration.py: Google Sheets를 통합하여 사용자 쿼리에 대한 답변에 필요한 관련 정보를 가져옵니다.</li>\n<li>create_ticket.py: 특정 Slack 채널에서 지원 티켓을 생성합니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>각 구성 요소를 살펴보고 어떻게 작동하여 기능적인 Slack 봇을 만드는지 알아봅시다.</p>\n<h1>단계 1: 환경 설정</h1>\n<p>먼저, 환경을 설정해야 합니다. 환경 변수를 관리하기 위해 dotenv를 사용할 것입니다. 다음 종속성이 설치되어 있는지 확인해주세요:</p>\n<p><img src=\"/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_0.png\" alt=\"image\"></p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>API 키 및 토큰을 저장하는 .env 파일을 만들어보세요:</p>\n<p><img src=\"/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_1.png\" alt=\"Image\"></p>\n<h1>단계 2: Slack 앱 초기화</h1>\n<p>app.py 스크립트는 Slack 앱을 초기화하고 수신 메시지를 처리합니다. 이는 OpenAI API를 사용하여 응답을 생성하고 쓰레드 메시지의 컨텍스트를 유지합니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p><img src=\"/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_2.png\" alt=\"Image\"></p>\n<h1>단계 3: OpenAI 통합</h1>\n<p>assistants.py 스크립트는 OpenAI API와 상호 작용을 관리하고 사용자 쿼리를 처리합니다. Google Sheets 문서에서 정보를 기반으로 응답이 이루어지도록 합니다.</p>\n<p><img src=\"/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_3.png\" alt=\"Image\"></p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>단계 4: Google Sheets와 통합하기</h1>\n<p>구글 시트 통합 스크립트인 google_sheets_integration.py는 사용자 쿼리에 답변하기 위한 관련 정보를 가져 오는 데 Google Sheets와 통합됩니다.</p>\n<p><img src=\"/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_4.png\" alt=\"이미지\"></p>\n<h1>단계 5: 지원 티켓 생성하기</h1>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>create_ticket.py 스크립트는 지정된 Slack 채널에 지원 티켓을 생성합니다.</p>\n<p><img src=\"/TIL/assets/img/2024-07-09-BuildingaSlackBotwithOpenAIandGoogleSheetsIntegration_5.png\" alt=\"ticket image\"></p>\n<h1>마무리</h1>\n<p>이 가이드를 따라가면, OpenAI 및 Google Sheets와 통합된 Slack 봇을 설정하여 사용자 쿼리에 지능적으로 응답하고 지원 티켓을 생성할 수 있습니다. 이 프로젝트는 다양한 사용 사례에 맞게 확장 및 사용자 정의할 수 있는 기본 기반입니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>일부 오류가 발생할 수 있고, 봇을 사용자의 요구에 맞게 맞추기 위해 조정이 필요할 수 있습니다. 그러나 이 구현은 프로젝트에 좋은 출발점을 제공해줄 것입니다. 즐거운 코딩되세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}