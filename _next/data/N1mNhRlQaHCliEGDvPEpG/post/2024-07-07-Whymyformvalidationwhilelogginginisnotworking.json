{"pageProps":{"post":{"title":"로그인 시 폼 유효성 검사가 작동하지 않는 이유는","description":"","date":"2024-07-07 19:18","slug":"2024-07-07-Whymyformvalidationwhilelogginginisnotworking","content":"\n\n내 ts 컴포넌트 파일:\n\n```js\nimport { Component, inject } from '@angular/core';\nimport { HeaderComponent } from \"../header/header.component\";\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { timer } from 'rxjs';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n@Component({\n    selector: 'app-login',\n    standalone: true,\n    templateUrl: './login.component.html',\n    styleUrl: './login.component.css',\n    imports: [HeaderComponent,CommonModule,ReactiveFormsModule]\n})\nexport class LoginComponent {\n  \n    isLoginInProgress: boolean | undefined;\n    errorMessage: string | null = null; \n    \n    form = this.fb.nonNullable.group({ \n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n    \n    constructor(\n      private fb: FormBuilder, \n      private authService: AuthService,\n      ) {\n      \n      const accessToken = localStorage.getItem('accessToken');\n      if (accessToken) {\n        window.history.back();\n      }\n    }\n     router = inject(Router);\n  \n    // fb = inject(FormBuilder);\n    // http = inject(HttpClient);\n    //  authService = inject(AuthService);\n    data: any[] = [];\n    \n    validateEmail(email: string): boolean {\n      if (!email) {\n        return true; // 이메일 필드가 비어있으면 유효한 것으로 간주합니다 (필요 시 조정)\n      }\n      const emailRegex = /^\\S+@\\S+\\.\\S+$/; \n      return emailRegex.test(email);\n    }\n    \n\n    noemail=false;\n    noform=false;\n    nopwd=false;\n    login=false;\n  \n    onSubmit(): void {\n      this.errorMessage = null;\n        this.noemail = false;\n        this.noform = false;\n        this.nopwd = false;\n        console.log('폼 제출됨');\n        const rawform = this.form.getRawValue();\n        const email = rawform.email.trim();\n        this.isLoginInProgress = true;\n        this.authService\n          .login(email, rawform.password.trim())\n          .subscribe({\n            next: (response) => {\n              console.log(response!.user!.uid);\n              const accessToken = response!.user!.accessToken;\n              const user_uid = response!.user!.uid;\n              localStorage.setItem('accessToken', accessToken);\n              localStorage.setItem('user_uid', user_uid);\n              this.router.navigateByUrl('/');\n              window.location.reload();\n              this.isLoginInProgress = false;\n            },\n            error: (err: any) => {\n              this.handleAuthError(err);\n              this.isLoginInProgress = false;\n            },\n          });\n        if (!email) {\n          this.noemail = true \n  \n          this.noform=false\n          // 이메일이 입력되지 않았습니다\n        } \n        if (!this.validateEmail(email)) {\n          this.noemail=false\n          this.nopwd=false\n          this.noform=true \n          // 유효하지 않은 이메일 형식입니다\n        }\n        else\n        {\n          \n          this.noform=false\n        }\n  \n        \n        const mdp=rawform.password.trim();\n        if(!mdp ) \n          {\n            this.nopwd=true\n          }  \n    }\n  \n    handleAuthError(err: any): void {\n      console.error('인증 오류:', err); \n      const rawform = this.form.getRawValue();// 검사를 위해 오류 객체 기록\n      const email = rawform.email.trim();\n      switch (err.code) {\n        case 'auth/invalid-credential':\n          this.errorMessage = '유효하지 않은 비밀번호 또는 이메일';\n          this.nopwd=false\n          this.noemail=false\n          this.noform=false\n          break;\n        case 'auth/invalid-email' :\n          if (email)\n            {\n              this.nopwd=false\n              \n            }\n          break;\n        case this.validateEmail(email)  :\n          this.noform=false\n          this.noemail=false\n          break; \n      }\n  \n    }\n  \n    isLoggedIn(): boolean {\n      const hasAccessToken = localStorage.getItem('accessToken') !== null;\n      \n      timer(1000);\n      if (hasAccessToken) {\n        return true;\n      } else {     \n        return false;\n      }\n    }\n   \n    \n}\r\n```\n\n내 html 컴포넌트 내용:\n\n```js\n<app-header style=\"background: linear-gradient(to left ,#032961,#4588ee);\"></app-header>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link href=\"/assets/css/styles.css\" rel=\"stylesheet\">\n  <link href=\"/assets/bootstrap/bootstrap.css\" rel=\"stylesheet\">\n  \n</head>\n<body class=\"form-v9\" style=\"background: linear-gradient(to left ,#032961,#4588ee); \">\n    <div class=\"page-content\">\n        <div class=\"form-v9-content\" >\n            <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form-detail\" action=\"#\" method=\"post\">\n                <h2>로그인 양식</h2>\n                <div class=\"form-row-total\">\n                        \n                        <div *ngIf=\"login\" class=\"alert alert-success\" role=\"alert\">\n                            성공적으로 로그인했습니다\n                        </div>\n                    <div class=\"form-row\">\n                        <input type=\"text\" name=\"email\" id=\"email\" class=\"input-text\" placeholder=\"이메일 주소\" required pattern=\"[^@]+@[^@]+.[a-zA-Z]{2,6}\">\n                    </div>\n                    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n                        { errorMessage }\n                      </div>\n                          <div *ngIf=\"noemail \" class=\"alert alert-danger\" role=\"alert\">\n                              이메일을 입력하세요\n                          </div> \n                          <div *ngIf=\"noform\" class=\"alert alert-danger\" role=\"alert\">\n                              올바르지 않은 이메일 형식 \n                          </div>\n                </div>\n                <div class=\"form-row-total\">\n                    <div class=\"form-row\">\n                        <input type=\"password\" name=\"password\" id=\"password\" class=\"input-text\" placeholder=\"비밀번호\" required>\n                    </div>\n                    \n                    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\" >\n                        { errorMessage }\n                      </div>\n                    <div *ngIf=\"nopwd\" class=\"alert alert-danger\" role=\"alert\"  style=\"margin-top: 90px;\">\n                        비밀번호를 입력하세요\n                    </div>\n                    \n                </div>\n                <div class=\"form-row-last\">\n                    <input type=\"submit\" name=\"register\" class=\"register\" value=\"로그인\" >\n                </div>\n            </form>\n        </div>\n    </div>\n</body>\r\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 로그인 버튼을 누를 때 (필드가 비어있든 아니든) 표시되는 메시지가 \"비밀번호를 입력하십시오\" 및 \"이메일을 입력하십시오\"인 것 같습니다 (즉, 변수 'nopwd' 및 'noemail'의 값은 항상 true인 것처럼 보입니다). 문제가 정확히 어디에 있을까요? 그리고 무엇을 변경해야 할까요?\n\n# 해결책\n\n입력란에 formControlName을 추가하는 것을 잊으신 것 같습니다.\n\n```js\n<input type=\"text\" formControlName=\"email\" name=\"email\" id=\"email\" class=\"input-text\" placeholder=\"이메일을 입력하세요\" required pattern=\"[^@]+@[^@]+.[a-zA-Z]{2,6}\">\n\n<input type=\"password\" formControlName=\"password\" name=\"password\" id=\"password\" class=\"input-text\" placeholder=\"비밀번호를 입력하세요\" required>\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n코드를 개선했습니다.\n\ncomponent.ts\n\n```js\nimport { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { Location } from '@angular/common';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CustomValidators } from './custom-validators';\nimport { catchError, of, take, tap } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css',\n  imports: [RouterOutlet, ReactiveFormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  private readonly _router = inject(Router);\n  private readonly _location = inject(Location);\n  private readonly _authService = inject(TestAuthService);\n\n  authError = signal<boolean>(false);\n  isLoginInProgress = signal<boolean>(false);\n\n  form = new FormGroup({\n    email: new FormControl<string>('', { nonNullable: true, validators: [Validators.required, CustomValidators.email] }),\n    password: new FormControl<string>('', { nonNullable: true, validators: [Validators.required] }),\n  });\n\n  login = false; // 항상 false입니다 O_o\n\n  constructor() {\n    const accessToken = localStorage.getItem('accessToken');\n    if (accessToken) this._location.back();\n  }\n\n  onSubmit(): void {\n    this.isLoginInProgress.set(true);\n    this._authService\n      .login(this.form.controls.email.value.trim(), this.form.controls.password.value.trim())\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          this.handleAuthError(error);\n          return of(error);\n        }),\n        tap(response => this._handleLogin(response)),\n        finalize(() => this.isLoginInProgress.set(false))\n      )\n      .subscribe();\n  }\n\n  private _handleLogin(response: any): void {\n    if (!response?.user) return;\n\n    const accessToken = response.user.accessToken;\n    const user_uid = response.user.uid;\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('user_uid', user_uid);\n    this._router.navigateByUrl('/');\n    window.location.reload();\n  }\n\n  handleAuthError(err: HttpErrorResponse): void {\n    if (!err.error.code) return;\n\n    this.authError.set(true);\n    this.form.valueChanges\n      .pipe(\n        take(1),\n        tap(() => this.authError.set(false))\n      )\n      .subscribe();\n  }\n\n  isLoggedIn(): boolean {\n    return localStorage.getItem('accessToken') !== null\n  }\n}\n```\n\ncomponent.html\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n\n```html\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form-detail\">\n  <h2>Login Form</h2>\n  <div class=\"form-row-total\">\n\n    @if(login) {\n      <div class=\"alert alert-success\" role=\"alert\">\n        Login avec succès\n      </div>\n    }\n\n    <div class=\"form-row\">\n      <input type=\"text\" formControlName=\"email\" name=\"email\" id=\"email\" class=\"input-text\" placeholder=\"이메일\" required pattern=\"[^@]+@[^@]+\\.[a-zA-Z]{2,6}\">\n    </div>\n    @if (authError()) {\n      <div class=\"alert alert-danger\" role=\"alert\">\n        잘못된 비밀번호 또는 이메일\n      </div>\n    }\n    @if (form.controls.email.errors?.required) {\n      <div class=\"alert alert-danger\" role=\"alert\">\n        이메일을 입력해주세요\n      </div>\n    }\n    @if (form.controls.email.errors?.email) {\n      <div class=\"alert alert-danger\" role=\"alert\">\n        잘못된 이메일 형식입니다\n      </div>\n    }\n  </div>\n\n  <div class=\"form-row-total\">\n    <div class=\"form-row\">\n      <input type=\"password\" formControlName=\"password\" name=\"password\" id=\"password\" class=\"input-text\" placeholder=\"비밀번호\" required>\n    </div>\n\n    @if (authError()) {\n      <div class=\"alert alert-danger\" role=\"alert\" >\n        잘못된 비밀번호 또는 이메일\n      </div>\n    }\n\n    @if (form.controls.password.errors?.required) {\n      <div class=\"alert alert-danger\" role=\"alert\"  style=\"margin-top: 90px;\">\n        비밀번호를 입력해주세요\n      </div>\n    }\n\n  </div>\n  <div class=\"form-row-last\">\n    <input type=\"submit\" name=\"register\" class=\"register\" value=\"로그인\" [disabled]=\"!form.valid\" >\n  </div>\n</form>\n```\n\ncustom-validators.ts\n\n```js\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport class CustomValidators {\n  static email(control: AbstractControl<string>): ValidationErrors | null {\n    const emailRegex = new RegExp(/^\\S+@\\S+\\.\\S+$/);\n\n    if (!control.value) return null;\n    return emailRegex.test(control.value) ? null : { email: true };\n  }\n}\n``` \n\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n답변 확인자 - Marie Seifert (수정 관리자)\n\n이 답변은 stackoverflow에서 수집되었으며 cc by-sa 2.5, cc by-sa 3.0 및 cc by-sa 4.0의 라이센스를 따릅니다.","ogImage":{"url":"/TIL/assets/no-image.jpg"},"coverImage":"/TIL/assets/no-image.jpg","tag":["Tech"],"readingTime":13},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>내 ts 컴포넌트 파일:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Component</span>, inject } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">HeaderComponent</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"../header/header.component\"</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">FormBuilder</span>, <span class=\"hljs-title class_\">Validators</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/forms'</span>;\n<span class=\"hljs-keyword\">import</span> { timer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'rxjs'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Router</span>, <span class=\"hljs-title class_\">RouterModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/router'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AuthService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../../auth.service'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">CommonModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/common'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ReactiveFormsModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/forms'</span>;\n@<span class=\"hljs-title class_\">Component</span>({\n    <span class=\"hljs-attr\">selector</span>: <span class=\"hljs-string\">'app-login'</span>,\n    <span class=\"hljs-attr\">standalone</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">templateUrl</span>: <span class=\"hljs-string\">'./login.component.html'</span>,\n    <span class=\"hljs-attr\">styleUrl</span>: <span class=\"hljs-string\">'./login.component.css'</span>,\n    <span class=\"hljs-attr\">imports</span>: [<span class=\"hljs-title class_\">HeaderComponent</span>,<span class=\"hljs-title class_\">CommonModule</span>,<span class=\"hljs-title class_\">ReactiveFormsModule</span>]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LoginComponent</span> {\n  \n    <span class=\"hljs-attr\">isLoginInProgress</span>: boolean | <span class=\"hljs-literal\">undefined</span>;\n    <span class=\"hljs-attr\">errorMessage</span>: string | <span class=\"hljs-literal\">null</span> = <span class=\"hljs-literal\">null</span>; \n    \n    form = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fb</span>.<span class=\"hljs-property\">nonNullable</span>.<span class=\"hljs-title function_\">group</span>({ \n      <span class=\"hljs-attr\">email</span>: [<span class=\"hljs-string\">''</span>, <span class=\"hljs-title class_\">Validators</span>.<span class=\"hljs-property\">required</span>],\n      <span class=\"hljs-attr\">password</span>: [<span class=\"hljs-string\">''</span>, <span class=\"hljs-title class_\">Validators</span>.<span class=\"hljs-property\">required</span>],\n    });\n    \n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">\n      private fb: FormBuilder, \n      private authService: AuthService,\n      </span>) {\n      \n      <span class=\"hljs-keyword\">const</span> accessToken = <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">'accessToken'</span>);\n      <span class=\"hljs-keyword\">if</span> (accessToken) {\n        <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">history</span>.<span class=\"hljs-title function_\">back</span>();\n      }\n    }\n     router = <span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-title class_\">Router</span>);\n  \n    <span class=\"hljs-comment\">// fb = inject(FormBuilder);</span>\n    <span class=\"hljs-comment\">// http = inject(HttpClient);</span>\n    <span class=\"hljs-comment\">//  authService = inject(AuthService);</span>\n    <span class=\"hljs-attr\">data</span>: any[] = [];\n    \n    <span class=\"hljs-title function_\">validateEmail</span>(<span class=\"hljs-attr\">email</span>: string): boolean {\n      <span class=\"hljs-keyword\">if</span> (!email) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// 이메일 필드가 비어있으면 유효한 것으로 간주합니다 (필요 시 조정)</span>\n      }\n      <span class=\"hljs-keyword\">const</span> emailRegex = <span class=\"hljs-regexp\">/^\\S+@\\S+\\.\\S+$/</span>; \n      <span class=\"hljs-keyword\">return</span> emailRegex.<span class=\"hljs-title function_\">test</span>(email);\n    }\n    \n\n    noemail=<span class=\"hljs-literal\">false</span>;\n    noform=<span class=\"hljs-literal\">false</span>;\n    nopwd=<span class=\"hljs-literal\">false</span>;\n    login=<span class=\"hljs-literal\">false</span>;\n  \n    <span class=\"hljs-title function_\">onSubmit</span>(): <span class=\"hljs-keyword\">void</span> {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">errorMessage</span> = <span class=\"hljs-literal\">null</span>;\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noemail</span> = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noform</span> = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">nopwd</span> = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'폼 제출됨'</span>);\n        <span class=\"hljs-keyword\">const</span> rawform = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">form</span>.<span class=\"hljs-title function_\">getRawValue</span>();\n        <span class=\"hljs-keyword\">const</span> email = rawform.<span class=\"hljs-property\">email</span>.<span class=\"hljs-title function_\">trim</span>();\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isLoginInProgress</span> = <span class=\"hljs-literal\">true</span>;\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">authService</span>\n          .<span class=\"hljs-title function_\">login</span>(email, rawform.<span class=\"hljs-property\">password</span>.<span class=\"hljs-title function_\">trim</span>())\n          .<span class=\"hljs-title function_\">subscribe</span>({\n            <span class=\"hljs-attr\">next</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">response</span>) =></span> {\n              <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(response!.<span class=\"hljs-property\">user</span>!.<span class=\"hljs-property\">uid</span>);\n              <span class=\"hljs-keyword\">const</span> accessToken = response!.<span class=\"hljs-property\">user</span>!.<span class=\"hljs-property\">accessToken</span>;\n              <span class=\"hljs-keyword\">const</span> user_uid = response!.<span class=\"hljs-property\">user</span>!.<span class=\"hljs-property\">uid</span>;\n              <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">'accessToken'</span>, accessToken);\n              <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">'user_uid'</span>, user_uid);\n              <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">router</span>.<span class=\"hljs-title function_\">navigateByUrl</span>(<span class=\"hljs-string\">'/'</span>);\n              <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-title function_\">reload</span>();\n              <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isLoginInProgress</span> = <span class=\"hljs-literal\">false</span>;\n            },\n            <span class=\"hljs-attr\">error</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">err: any</span>) =></span> {\n              <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">handleAuthError</span>(err);\n              <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isLoginInProgress</span> = <span class=\"hljs-literal\">false</span>;\n            },\n          });\n        <span class=\"hljs-keyword\">if</span> (!email) {\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noemail</span> = <span class=\"hljs-literal\">true</span> \n  \n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noform</span>=<span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-comment\">// 이메일이 입력되지 않았습니다</span>\n        } \n        <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">validateEmail</span>(email)) {\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noemail</span>=<span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">nopwd</span>=<span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noform</span>=<span class=\"hljs-literal\">true</span> \n          <span class=\"hljs-comment\">// 유효하지 않은 이메일 형식입니다</span>\n        }\n        <span class=\"hljs-keyword\">else</span>\n        {\n          \n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noform</span>=<span class=\"hljs-literal\">false</span>\n        }\n  \n        \n        <span class=\"hljs-keyword\">const</span> mdp=rawform.<span class=\"hljs-property\">password</span>.<span class=\"hljs-title function_\">trim</span>();\n        <span class=\"hljs-keyword\">if</span>(!mdp ) \n          {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">nopwd</span>=<span class=\"hljs-literal\">true</span>\n          }  \n    }\n  \n    <span class=\"hljs-title function_\">handleAuthError</span>(<span class=\"hljs-attr\">err</span>: any): <span class=\"hljs-keyword\">void</span> {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'인증 오류:'</span>, err); \n      <span class=\"hljs-keyword\">const</span> rawform = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">form</span>.<span class=\"hljs-title function_\">getRawValue</span>();<span class=\"hljs-comment\">// 검사를 위해 오류 객체 기록</span>\n      <span class=\"hljs-keyword\">const</span> email = rawform.<span class=\"hljs-property\">email</span>.<span class=\"hljs-title function_\">trim</span>();\n      <span class=\"hljs-keyword\">switch</span> (err.<span class=\"hljs-property\">code</span>) {\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'auth/invalid-credential'</span>:\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">errorMessage</span> = <span class=\"hljs-string\">'유효하지 않은 비밀번호 또는 이메일'</span>;\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">nopwd</span>=<span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noemail</span>=<span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noform</span>=<span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-keyword\">break</span>;\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'auth/invalid-email'</span> :\n          <span class=\"hljs-keyword\">if</span> (email)\n            {\n              <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">nopwd</span>=<span class=\"hljs-literal\">false</span>\n              \n            }\n          <span class=\"hljs-keyword\">break</span>;\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">validateEmail</span>(email)  :\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noform</span>=<span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">noemail</span>=<span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-keyword\">break</span>; \n      }\n  \n    }\n  \n    <span class=\"hljs-title function_\">isLoggedIn</span>(): boolean {\n      <span class=\"hljs-keyword\">const</span> hasAccessToken = <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">'accessToken'</span>) !== <span class=\"hljs-literal\">null</span>;\n      \n      <span class=\"hljs-title function_\">timer</span>(<span class=\"hljs-number\">1000</span>);\n      <span class=\"hljs-keyword\">if</span> (hasAccessToken) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n      } <span class=\"hljs-keyword\">else</span> {     \n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n      }\n    }\n   \n    \n}\n</code></pre>\n<p>내 html 컴포넌트 내용:</p>\n<pre><code class=\"hljs language-js\">&#x3C;app-header style=<span class=\"hljs-string\">\"background: linear-gradient(to left ,#032961,#4588ee);\"</span>>&#x3C;/app-header>\n\n&#x3C;head>\n  &#x3C;meta charset=\"UTF-8\">\n  &#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  &#x3C;link href=\"/assets/css/styles.css\" rel=\"stylesheet\">\n  &#x3C;link href=\"/assets/bootstrap/bootstrap.css\" rel=\"stylesheet\">\n  \n&#x3C;/head>\n&#x3C;body class=\"form-v9\" style=\"background: linear-gradient(to left ,#032961,#4588ee); \">\n    &#x3C;div class=\"page-content\">\n        &#x3C;div class=\"form-v9-content\" >\n            &#x3C;form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form-detail\" action=\"#\" method=\"post\">\n                &#x3C;h2>로그인 양식&#x3C;/h2>\n                &#x3C;div class=\"form-row-total\">\n                        \n                        &#x3C;div *ngIf=\"login\" class=\"alert alert-success\" role=\"alert\">\n                            성공적으로 로그인했습니다\n                        &#x3C;/div>\n                    &#x3C;div class=\"form-row\">\n                        &#x3C;input type=\"text\" name=\"email\" id=\"email\" class=\"input-text\" placeholder=\"이메일 주소\" required pattern=\"[^@]+@[^@]+.[a-zA-Z]{2,6}\">\n                    &#x3C;/div>\n                    &#x3C;div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n                        { errorMessage }\n                      &#x3C;/div>\n                          &#x3C;div *ngIf=\"noemail \" class=\"alert alert-danger\" role=\"alert\">\n                              이메일을 입력하세요\n                          &#x3C;/div> \n                          &#x3C;div *ngIf=\"noform\" class=\"alert alert-danger\" role=\"alert\">\n                              올바르지 않은 이메일 형식 \n                          &#x3C;/div>\n                &#x3C;/div>\n                &#x3C;div class=\"form-row-total\">\n                    &#x3C;div class=\"form-row\">\n                        &#x3C;input type=\"password\" name=\"password\" id=\"password\" class=\"input-text\" placeholder=\"비밀번호\" required>\n                    &#x3C;/div>\n                    \n                    &#x3C;div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\" >\n                        { errorMessage }\n                      &#x3C;/div>\n                    &#x3C;div *ngIf=\"nopwd\" class=\"alert alert-danger\" role=\"alert\"  style=\"margin-top: 90px;\">\n                        비밀번호를 입력하세요\n                    &#x3C;/div>\n                    \n                &#x3C;/div>\n                &#x3C;div class=\"form-row-last\">\n                    &#x3C;input type=\"submit\" name=\"register\" class=\"register\" value=\"로그인\" >\n                &#x3C;/div>\n            &#x3C;/form>\n        &#x3C;/div>\n    &#x3C;/div>\n&#x3C;/body>\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>로그인 버튼을 누를 때 (필드가 비어있든 아니든) 표시되는 메시지가 \"비밀번호를 입력하십시오\" 및 \"이메일을 입력하십시오\"인 것 같습니다 (즉, 변수 'nopwd' 및 'noemail'의 값은 항상 true인 것처럼 보입니다). 문제가 정확히 어디에 있을까요? 그리고 무엇을 변경해야 할까요?</h1>\n<h1>해결책</h1>\n<p>입력란에 formControlName을 추가하는 것을 잊으신 것 같습니다.</p>\n<pre><code class=\"hljs language-js\">&#x3C;input type=<span class=\"hljs-string\">\"text\"</span> formControlName=<span class=\"hljs-string\">\"email\"</span> name=<span class=\"hljs-string\">\"email\"</span> id=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"input-text\"</span> placeholder=<span class=\"hljs-string\">\"이메일을 입력하세요\"</span> required pattern=<span class=\"hljs-string\">\"[^@]+@[^@]+.[a-zA-Z]{2,6}\"</span>>\n\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">formControlName</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"input-text\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"비밀번호를 입력하세요\"</span> <span class=\"hljs-attr\">required</span>></span>\n</span></code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>코드를 개선했습니다.</p>\n<p>component.ts</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ChangeDetectionStrategy</span>, <span class=\"hljs-title class_\">Component</span>, inject, signal } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Router</span>, <span class=\"hljs-title class_\">RouterOutlet</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/router'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AuthService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../../auth.service'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Location</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/common'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">FormControl</span>, <span class=\"hljs-title class_\">FormGroup</span>, <span class=\"hljs-title class_\">ReactiveFormsModule</span>, <span class=\"hljs-title class_\">Validators</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/forms'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">CustomValidators</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./custom-validators'</span>;\n<span class=\"hljs-keyword\">import</span> { catchError, <span class=\"hljs-keyword\">of</span>, take, tap } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'rxjs'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">HttpErrorResponse</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/common/http'</span>;\n\n@<span class=\"hljs-title class_\">Component</span>({\n  <span class=\"hljs-attr\">selector</span>: <span class=\"hljs-string\">'app-login'</span>,\n  <span class=\"hljs-attr\">standalone</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">templateUrl</span>: <span class=\"hljs-string\">'./login.component.html'</span>,\n  <span class=\"hljs-attr\">styleUrl</span>: <span class=\"hljs-string\">'./login.component.css'</span>,\n  <span class=\"hljs-attr\">imports</span>: [<span class=\"hljs-title class_\">RouterOutlet</span>, <span class=\"hljs-title class_\">ReactiveFormsModule</span>],\n  <span class=\"hljs-attr\">changeDetection</span>: <span class=\"hljs-title class_\">ChangeDetectionStrategy</span>.<span class=\"hljs-property\">OnPush</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AppComponent</span> {\n  private readonly _router = <span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-title class_\">Router</span>);\n  private readonly _location = <span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-title class_\">Location</span>);\n  private readonly _authService = <span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-title class_\">TestAuthService</span>);\n\n  authError = signal&#x3C;boolean>(<span class=\"hljs-literal\">false</span>);\n  isLoginInProgress = signal&#x3C;boolean>(<span class=\"hljs-literal\">false</span>);\n\n  form = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FormGroup</span>({\n    <span class=\"hljs-attr\">email</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FormControl</span>&#x3C;string>(<span class=\"hljs-string\">''</span>, { <span class=\"hljs-attr\">nonNullable</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">validators</span>: [<span class=\"hljs-title class_\">Validators</span>.<span class=\"hljs-property\">required</span>, <span class=\"hljs-title class_\">CustomValidators</span>.<span class=\"hljs-property\">email</span>] }),\n    <span class=\"hljs-attr\">password</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FormControl</span>&#x3C;string>(<span class=\"hljs-string\">''</span>, { <span class=\"hljs-attr\">nonNullable</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">validators</span>: [<span class=\"hljs-title class_\">Validators</span>.<span class=\"hljs-property\">required</span>] }),\n  });\n\n  login = <span class=\"hljs-literal\">false</span>; <span class=\"hljs-comment\">// 항상 false입니다 O_o</span>\n\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> accessToken = <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">'accessToken'</span>);\n    <span class=\"hljs-keyword\">if</span> (accessToken) <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_location</span>.<span class=\"hljs-title function_\">back</span>();\n  }\n\n  <span class=\"hljs-title function_\">onSubmit</span>(): <span class=\"hljs-keyword\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isLoginInProgress</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-literal\">true</span>);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_authService</span>\n      .<span class=\"hljs-title function_\">login</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">form</span>.<span class=\"hljs-property\">controls</span>.<span class=\"hljs-property\">email</span>.<span class=\"hljs-property\">value</span>.<span class=\"hljs-title function_\">trim</span>(), <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">form</span>.<span class=\"hljs-property\">controls</span>.<span class=\"hljs-property\">password</span>.<span class=\"hljs-property\">value</span>.<span class=\"hljs-title function_\">trim</span>())\n      .<span class=\"hljs-title function_\">pipe</span>(\n        <span class=\"hljs-title function_\">catchError</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">error: HttpErrorResponse</span>) =></span> {\n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">handleAuthError</span>(error);\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">of</span>(error);\n        }),\n        <span class=\"hljs-title function_\">tap</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">response</span> =></span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_handleLogin</span>(response)),\n        <span class=\"hljs-title function_\">finalize</span>(<span class=\"hljs-function\">() =></span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isLoginInProgress</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-literal\">false</span>))\n      )\n      .<span class=\"hljs-title function_\">subscribe</span>();\n  }\n\n  private <span class=\"hljs-title function_\">_handleLogin</span>(<span class=\"hljs-attr\">response</span>: any): <span class=\"hljs-keyword\">void</span> {\n    <span class=\"hljs-keyword\">if</span> (!response?.<span class=\"hljs-property\">user</span>) <span class=\"hljs-keyword\">return</span>;\n\n    <span class=\"hljs-keyword\">const</span> accessToken = response.<span class=\"hljs-property\">user</span>.<span class=\"hljs-property\">accessToken</span>;\n    <span class=\"hljs-keyword\">const</span> user_uid = response.<span class=\"hljs-property\">user</span>.<span class=\"hljs-property\">uid</span>;\n    <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">'accessToken'</span>, accessToken);\n    <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">'user_uid'</span>, user_uid);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_router</span>.<span class=\"hljs-title function_\">navigateByUrl</span>(<span class=\"hljs-string\">'/'</span>);\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-title function_\">reload</span>();\n  }\n\n  <span class=\"hljs-title function_\">handleAuthError</span>(<span class=\"hljs-attr\">err</span>: <span class=\"hljs-title class_\">HttpErrorResponse</span>): <span class=\"hljs-keyword\">void</span> {\n    <span class=\"hljs-keyword\">if</span> (!err.<span class=\"hljs-property\">error</span>.<span class=\"hljs-property\">code</span>) <span class=\"hljs-keyword\">return</span>;\n\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">authError</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-literal\">true</span>);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">form</span>.<span class=\"hljs-property\">valueChanges</span>\n      .<span class=\"hljs-title function_\">pipe</span>(\n        <span class=\"hljs-title function_\">take</span>(<span class=\"hljs-number\">1</span>),\n        <span class=\"hljs-title function_\">tap</span>(<span class=\"hljs-function\">() =></span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">authError</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-literal\">false</span>))\n      )\n      .<span class=\"hljs-title function_\">subscribe</span>();\n  }\n\n  <span class=\"hljs-title function_\">isLoggedIn</span>(): boolean {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">'accessToken'</span>) !== <span class=\"hljs-literal\">null</span>\n  }\n}\n</code></pre>\n<p>component.html</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> [<span class=\"hljs-attr\">formGroup</span>]=<span class=\"hljs-string\">\"form\"</span> (<span class=\"hljs-attr\">ngSubmit</span>)=<span class=\"hljs-string\">\"onSubmit()\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-detail\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Login Form<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-row-total\"</span>></span>\n\n    @if(login) {\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-success\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">\"alert\"</span>></span>\n        Login avec succès\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    }\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-row\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">formControlName</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"input-text\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"이메일\"</span> <span class=\"hljs-attr\">required</span> <span class=\"hljs-attr\">pattern</span>=<span class=\"hljs-string\">\"[^@]+@[^@]+\\.[a-zA-Z]{2,6}\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    @if (authError()) {\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-danger\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">\"alert\"</span>></span>\n        잘못된 비밀번호 또는 이메일\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    }\n    @if (form.controls.email.errors?.required) {\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-danger\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">\"alert\"</span>></span>\n        이메일을 입력해주세요\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    }\n    @if (form.controls.email.errors?.email) {\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-danger\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">\"alert\"</span>></span>\n        잘못된 이메일 형식입니다\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    }\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-row-total\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-row\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">formControlName</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"input-text\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"비밀번호\"</span> <span class=\"hljs-attr\">required</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n    @if (authError()) {\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-danger\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">\"alert\"</span> ></span>\n        잘못된 비밀번호 또는 이메일\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    }\n\n    @if (form.controls.password.errors?.required) {\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-danger\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">\"alert\"</span>  <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-top: 90px;\"</span>></span>\n        비밀번호를 입력해주세요\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    }\n\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-row-last\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"register\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"register\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"로그인\"</span> [<span class=\"hljs-attr\">disabled</span>]=<span class=\"hljs-string\">\"!form.valid\"</span> ></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n</code></pre>\n<p>custom-validators.ts</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractControl</span>, <span class=\"hljs-title class_\">ValidationErrors</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/forms'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CustomValidators</span> {\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">email</span>(<span class=\"hljs-attr\">control</span>: <span class=\"hljs-title class_\">AbstractControl</span>&#x3C;string>): <span class=\"hljs-title class_\">ValidationErrors</span> | <span class=\"hljs-literal\">null</span> {\n    <span class=\"hljs-keyword\">const</span> emailRegex = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(<span class=\"hljs-regexp\">/^\\S+@\\S+\\.\\S+$/</span>);\n\n    <span class=\"hljs-keyword\">if</span> (!control.<span class=\"hljs-property\">value</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n    <span class=\"hljs-keyword\">return</span> emailRegex.<span class=\"hljs-title function_\">test</span>(control.<span class=\"hljs-property\">value</span>) ? <span class=\"hljs-literal\">null</span> : { <span class=\"hljs-attr\">email</span>: <span class=\"hljs-literal\">true</span> };\n  }\n}\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>답변 확인자 - Marie Seifert (수정 관리자)</p>\n<p>이 답변은 stackoverflow에서 수집되었으며 cc by-sa 2.5, cc by-sa 3.0 및 cc by-sa 4.0의 라이센스를 따릅니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}