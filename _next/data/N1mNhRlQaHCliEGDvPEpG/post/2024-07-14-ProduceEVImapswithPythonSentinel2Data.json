{"pageProps":{"post":{"title":"Sentinel 2 데이터를 이용한 Python으로 EVI 지도 생성하는 방법","description":"","date":"2024-07-14 23:46","slug":"2024-07-14-ProduceEVImapswithPythonSentinel2Data","content":"\n\n# TL;TR\n\n증강 식물 지수 (EVI)는 원격 감지에서 널리 사용되는 분광 지수로, 위성 영상을 통해 식물 건강 및 영역을 평가하는 데 사용됩니다. 일반화된 차이 식물 지수 (NDVI)를 개선하여 대기 영향을 최소화하고 수관 구조 변화 및 밀집 식물 지역에 대한 민감도를 향상시켰습니다.\n\n## EVI의 주요 특징:\n\n- 식물에 대한 민감도: EVI는 대기 영향을 최소화하고 수관 특성에 대한 민감도를 증가시킴으로써 특히 밀집 식물 지역에서 효과적으로 작동하도록 설계되었습니다.\n- 공식: EVI 공식은 빨강, 근적외선 (NIR), 파랑 분광대를 포함하여 식물에 대한 민감도를 개선합니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_0.png\" />\n\n여기서:\n\n- NIR은 근적외선 대역의 반사율입니다.\n- Red는 빨간 대역의 반사율입니다.\n- Blue는 파란 대역의 반사율입니다.\n- G는 이득 요소입니다 (기본값: 2.5).\n- C1 및 C2는 대기의 영향을 최소화하기 위한 계수입니다 (기본값: 각각 6 및 7.5).\n- L은 수관 배경 조정 요소입니다 (기본값: 1).\n\n값의 범위: EVI 값은 일반적으로 -1에서 1 사이의 범위를 갖습니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 높은 값은 밀도가 높은 식물을 나타냅니다.\n- 0 또는 음수에 가까운 값은 비식물 또는 희소식물이 자리 잡은 지역을 나타냅니다.\n\n## 응용:\n\n- 식물 모니터링: EVI는 식물 동태를 모니터링하는 데 널리 사용되며 성장 패턴, 건강 평가, 그리고 환경 요소 또는 인간 활동으로 인한 변화 감지에 도움이 됩니다.\n- 토지 이용 및 토지 피복 매핑: 특히 식물로 지배되는 토지 이용 유형을 매핑하고 분류하는 데 도움이 됩니다.\n- 생태학 연구: 식물 분포를 분석하는 데 유용하며, 생물 다양성 평가 및 서식지 매핑에 활용됩니다.\n\n## 장점:\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 민감도 향상: NDVI와 비교하여 밀집 식물 지역의 변화에 대한 감도를 향상시켰습니다.\n- 대기 보정: 대기 간섭을 줄이기 위한 계수를 포함하여 대기 보정을 통해 전 세계 및 지역 규모의 응용 프로그램에 더 견고하게 만들었습니다.\n\n## 고려 사항:\n\n- 데이터 요구 사항: 일반적으로 중고해상도 위성 플랫폼에서 널리 사용되는 빨강, NIR 및 파랑 밴드를 갖춘 다중 스펙트럼 위성 영상이 필요합니다.\n- 매개변수 민감도: 계수 G, C1, C2 및 L의 선택에 민감하며 특정 환경 조건 및 연구 목표에 따라 조정이 필요할 수 있습니다.\n\n## 선행 조건:\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 여정에서는 다음을 설치해야 합니다:\n\n- Python 3.10+\n- 시각화를 위한 QGIS 3.X.X +\n\n또한 다음이 필요합니다:\n\n- Copernicus 사이트에서 다운로드할 데이터 세트. 2024년 2월 27일 센티넬 2 2A 이미지로 작업할 예정입니다 (이미지 참조: T36QUL_20240227T082911).\n- Copernicus 플랫폼에서 다운로드할 수 있습니다; 데이터 다운로드에 대한 문서를 확인할 수 있습니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# Sentinel-2 데이터를 활용한 실제 적용:\n\n## 1. 저장소 복제\n\n분류 스크립트 및 학습 샘플을 가져오세요:\n\n```js\ngit clone https://github.com/kokatic/remote_sensing\n```\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이렇게 작성하시면 됩니다 :\n\n\n<img src=\"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_1.png\" />\n\n내 레포지토리(/data/)에 데이터 폴더를 추가했습니다. 이 폴더에는 2024년 4월 30일 에르 우에드 지역의 Sentinel-2 데이터가 포함되어 있습니다. 기준 이미지는 T32SKC_20240430T102021이며, 밴드 4와 8을 포함하고 있습니다.\n\n## 2. 가상 환경 생성 및 필수 모듈 설치\n\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n현재 작업 폴더 디렉토리에서 명령 줄 인터페이스를 엽니다:\n\n```js\npython -m venv venv\n```\n\n그런 다음 가상 환경을 활성화합니다:\n\nWindows용 (CMD)에서:\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n\nvenv\\Scripts\\activate # Linux의 경우: source venv/bin/activate\n\n\n필요한 패키지 설치 후:\n\n\npip install -r requirements.txt\n\n\n## 3. 스크립트 실행\n\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n동일한 폴더에서 스크립트를 실행하려면 터미널 또는 명령 프롬프트를 열고 스크립트가 있는 폴더로 이동한 다음 다음 명령을 실행하세요:\n\n```js\nimport rasterio\nimport numpy as np\n\ndef calculate_evi(red_band_path, nir_band_path, blue_band_path, output_path):\n    try:\n        # rasterio 데이터셋으로 빨간색, NIR, 파란색 밴드 열기\n        with rasterio.open(red_band_path) as red_dataset, \\\n             rasterio.open(nir_band_path) as nir_dataset, \\\n             rasterio.open(blue_band_path) as blue_dataset:\n\n            # rasterio 데이터셋에서 데이터 읽기\n            red = red_dataset.read(1, masked=True).astype('float32')\n            nir = nir_dataset.read(1, masked=True).astype('float32')\n            blue = blue_dataset.read(1, masked=True).astype('float32')\n\n            # EVI 계산\n            G = 2.5\n            C1 = 6\n            C2 = 7.5\n            L = 1\n            epsilon = 1e-6  # 0으로 나누기를 피하기 위한 작은 엡실론 값\n            denominator = nir + C1 * red - C2 * blue + L\n            evi = np.where(denominator != 0, G * ((nir - red) / denominator), np.nan)\n\n            # EVI 값을 [-1, 1] 범위로 클리핑\n            evi = np.clip(evi, -1, 1)\n\n            # EVI 출력을 위한 프로필 업데이트\n            profile = red_dataset.profile\n            profile.update(dtype=rasterio.float32, count=1, compress='lzw')\n\n            # 새 GeoTIFF 파일에 EVI 결과 작성\n            with rasterio.open(output_path, 'w', **profile) as dst:\n                dst.write(evi.astype(np.float32), 1)\n\n    except Exception as e:\n        print(f\"오류가 발생했습니다: {e}\")\n\n# 예시 파일 경로\nred_band_path = 'data/Toshka/S2A_MSIL2A_20240227T082911/T36QUL_20240227T082911_B04_10m.jp2'  # 빨간색 밴드\nnir_band_path = 'data/Toshka/S2A_MSIL2A_20240227T082911/T36QUL_20240227T082911_B08_10m.jp2'  # 근적외선 밴드\nblue_band_path = 'data/Toshka/S2A_MSIL2A_20240227T082911/T36QUL_20240227T082911_B02_10m.jp2'  # 파란색 밴드\noutput_path = 'output/evi.tif'  # EVI 출력 파일\n\ncalculate_evi(red_band_path, nir_band_path, blue_band_path, output_path)\n```\n\n스크립트를 실행한 후 output/ 폴더에 EVI 출력물을 찾을 수 있습니다:\n\n![EVI 출력물](/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_2.png)\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n3- 결과 확인: 시각화와 분석\n\n- EVI 출력 파일 (evi.tif)을 QGIS에 로드합니다.\n- 더 밀집한 식물 상층을 나타내는 더 높은 EVI 값의 시각화를 위해 적합한 컬러 팔레트를 적용합니다.\n- EVI 값에 기반하여 관심 영역을 강조하기 위해 시각화 설정을 조정하여 식물 건강 평가 및 토지 피복 맵핑을 지원합니다.\n\n![이미지1](/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_3.png)\n\n![이미지2](/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_4.png)\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 결론\n\n요약하자면, 향상된 식물지수(EVI)는 원격 감지 응용 프로그램에 강력한 도구로, 식물 역학 및 건강 평가에 대한 감도를 향상시켜줍니다. Sentinel-2 위성 이미지와 Python 및 QGIS와 같은 컴퓨터 도구를 활용하여 연구원 및 실무자는 효과적으로 식물 변화를 모니터링하고 토지 피복 유형을 분류하며 생태학 연구 및 환경 관리에 기여할 수 있습니다. 더 자세한 내용이나 문의 사항이 있으시면 언제든지 댓글을 남기거나 직접 연락해주세요.\n\n# 팔로우\n\n- 내 랜딩 페이지\n- 내 Youtube 채널\n- 내 SaaS 서비스\n- 내 GitHub","ogImage":{"url":"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_0.png"},"coverImage":"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_0.png","tag":["Tech"],"readingTime":8},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>TL;TR</h1>\n<p>증강 식물 지수 (EVI)는 원격 감지에서 널리 사용되는 분광 지수로, 위성 영상을 통해 식물 건강 및 영역을 평가하는 데 사용됩니다. 일반화된 차이 식물 지수 (NDVI)를 개선하여 대기 영향을 최소화하고 수관 구조 변화 및 밀집 식물 지역에 대한 민감도를 향상시켰습니다.</p>\n<h2>EVI의 주요 특징:</h2>\n<ul>\n<li>식물에 대한 민감도: EVI는 대기 영향을 최소화하고 수관 특성에 대한 민감도를 증가시킴으로써 특히 밀집 식물 지역에서 효과적으로 작동하도록 설계되었습니다.</li>\n<li>공식: EVI 공식은 빨강, 근적외선 (NIR), 파랑 분광대를 포함하여 식물에 대한 민감도를 개선합니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<img src=\"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_0.png\">\n<p>여기서:</p>\n<ul>\n<li>NIR은 근적외선 대역의 반사율입니다.</li>\n<li>Red는 빨간 대역의 반사율입니다.</li>\n<li>Blue는 파란 대역의 반사율입니다.</li>\n<li>G는 이득 요소입니다 (기본값: 2.5).</li>\n<li>C1 및 C2는 대기의 영향을 최소화하기 위한 계수입니다 (기본값: 각각 6 및 7.5).</li>\n<li>L은 수관 배경 조정 요소입니다 (기본값: 1).</li>\n</ul>\n<p>값의 범위: EVI 값은 일반적으로 -1에서 1 사이의 범위를 갖습니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ul>\n<li>높은 값은 밀도가 높은 식물을 나타냅니다.</li>\n<li>0 또는 음수에 가까운 값은 비식물 또는 희소식물이 자리 잡은 지역을 나타냅니다.</li>\n</ul>\n<h2>응용:</h2>\n<ul>\n<li>식물 모니터링: EVI는 식물 동태를 모니터링하는 데 널리 사용되며 성장 패턴, 건강 평가, 그리고 환경 요소 또는 인간 활동으로 인한 변화 감지에 도움이 됩니다.</li>\n<li>토지 이용 및 토지 피복 매핑: 특히 식물로 지배되는 토지 이용 유형을 매핑하고 분류하는 데 도움이 됩니다.</li>\n<li>생태학 연구: 식물 분포를 분석하는 데 유용하며, 생물 다양성 평가 및 서식지 매핑에 활용됩니다.</li>\n</ul>\n<h2>장점:</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ul>\n<li>민감도 향상: NDVI와 비교하여 밀집 식물 지역의 변화에 대한 감도를 향상시켰습니다.</li>\n<li>대기 보정: 대기 간섭을 줄이기 위한 계수를 포함하여 대기 보정을 통해 전 세계 및 지역 규모의 응용 프로그램에 더 견고하게 만들었습니다.</li>\n</ul>\n<h2>고려 사항:</h2>\n<ul>\n<li>데이터 요구 사항: 일반적으로 중고해상도 위성 플랫폼에서 널리 사용되는 빨강, NIR 및 파랑 밴드를 갖춘 다중 스펙트럼 위성 영상이 필요합니다.</li>\n<li>매개변수 민감도: 계수 G, C1, C2 및 L의 선택에 민감하며 특정 환경 조건 및 연구 목표에 따라 조정이 필요할 수 있습니다.</li>\n</ul>\n<h2>선행 조건:</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>이 여정에서는 다음을 설치해야 합니다:</p>\n<ul>\n<li>Python 3.10+</li>\n<li>시각화를 위한 QGIS 3.X.X +</li>\n</ul>\n<p>또한 다음이 필요합니다:</p>\n<ul>\n<li>Copernicus 사이트에서 다운로드할 데이터 세트. 2024년 2월 27일 센티넬 2 2A 이미지로 작업할 예정입니다 (이미지 참조: T36QUL_20240227T082911).</li>\n<li>Copernicus 플랫폼에서 다운로드할 수 있습니다; 데이터 다운로드에 대한 문서를 확인할 수 있습니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>Sentinel-2 데이터를 활용한 실제 적용:</h1>\n<h2>1. 저장소 복제</h2>\n<p>분류 스크립트 및 학습 샘플을 가져오세요:</p>\n<pre><code class=\"hljs language-js\">git clone <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//github.com/kokatic/remote_sensing</span>\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>이렇게 작성하시면 됩니다 :</p>\n<img src=\"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_1.png\">\n<p>내 레포지토리(/data/)에 데이터 폴더를 추가했습니다. 이 폴더에는 2024년 4월 30일 에르 우에드 지역의 Sentinel-2 데이터가 포함되어 있습니다. 기준 이미지는 T32SKC_20240430T102021이며, 밴드 4와 8을 포함하고 있습니다.</p>\n<h2>2. 가상 환경 생성 및 필수 모듈 설치</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>현재 작업 폴더 디렉토리에서 명령 줄 인터페이스를 엽니다:</p>\n<pre><code class=\"hljs language-js\">python -m venv venv\n</code></pre>\n<p>그런 다음 가상 환경을 활성화합니다:</p>\n<p>Windows용 (CMD)에서:</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>venv\\Scripts\\activate # Linux의 경우: source venv/bin/activate</p>\n<p>필요한 패키지 설치 후:</p>\n<p>pip install -r requirements.txt</p>\n<h2>3. 스크립트 실행</h2>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>동일한 폴더에서 스크립트를 실행하려면 터미널 또는 명령 프롬프트를 열고 스크립트가 있는 폴더로 이동한 다음 다음 명령을 실행하세요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> rasterio\n<span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\ndef <span class=\"hljs-title function_\">calculate_evi</span>(red_band_path, nir_band_path, blue_band_path, output_path):\n    <span class=\"hljs-attr\">try</span>:\n        # rasterio 데이터셋으로 빨간색, <span class=\"hljs-variable constant_\">NIR</span>, 파란색 밴드 열기\n        <span class=\"hljs-keyword\">with</span> rasterio.<span class=\"hljs-title function_\">open</span>(red_band_path) <span class=\"hljs-keyword\">as</span> red_dataset, \\\n             rasterio.<span class=\"hljs-title function_\">open</span>(nir_band_path) <span class=\"hljs-keyword\">as</span> nir_dataset, \\\n             rasterio.<span class=\"hljs-title function_\">open</span>(blue_band_path) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-attr\">blue_dataset</span>:\n\n            # rasterio 데이터셋에서 데이터 읽기\n            red = red_dataset.<span class=\"hljs-title function_\">read</span>(<span class=\"hljs-number\">1</span>, masked=<span class=\"hljs-title class_\">True</span>).<span class=\"hljs-title function_\">astype</span>(<span class=\"hljs-string\">'float32'</span>)\n            nir = nir_dataset.<span class=\"hljs-title function_\">read</span>(<span class=\"hljs-number\">1</span>, masked=<span class=\"hljs-title class_\">True</span>).<span class=\"hljs-title function_\">astype</span>(<span class=\"hljs-string\">'float32'</span>)\n            blue = blue_dataset.<span class=\"hljs-title function_\">read</span>(<span class=\"hljs-number\">1</span>, masked=<span class=\"hljs-title class_\">True</span>).<span class=\"hljs-title function_\">astype</span>(<span class=\"hljs-string\">'float32'</span>)\n\n            # <span class=\"hljs-variable constant_\">EVI</span> 계산\n            G = <span class=\"hljs-number\">2.5</span>\n            <span class=\"hljs-variable constant_\">C1</span> = <span class=\"hljs-number\">6</span>\n            <span class=\"hljs-variable constant_\">C2</span> = <span class=\"hljs-number\">7.5</span>\n            L = <span class=\"hljs-number\">1</span>\n            epsilon = <span class=\"hljs-number\">1e-6</span>  # <span class=\"hljs-number\">0</span>으로 나누기를 피하기 위한 작은 엡실론 값\n            denominator = nir + <span class=\"hljs-variable constant_\">C1</span> * red - <span class=\"hljs-variable constant_\">C2</span> * blue + L\n            evi = np.<span class=\"hljs-title function_\">where</span>(denominator != <span class=\"hljs-number\">0</span>, G * ((nir - red) / denominator), np.<span class=\"hljs-property\">nan</span>)\n\n            # <span class=\"hljs-variable constant_\">EVI</span> 값을 [-<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>] 범위로 클리핑\n            evi = np.<span class=\"hljs-title function_\">clip</span>(evi, -<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>)\n\n            # <span class=\"hljs-variable constant_\">EVI</span> 출력을 위한 프로필 업데이트\n            profile = red_dataset.<span class=\"hljs-property\">profile</span>\n            profile.<span class=\"hljs-title function_\">update</span>(dtype=rasterio.<span class=\"hljs-property\">float32</span>, count=<span class=\"hljs-number\">1</span>, compress=<span class=\"hljs-string\">'lzw'</span>)\n\n            # 새 <span class=\"hljs-title class_\">GeoTIFF</span> 파일에 <span class=\"hljs-variable constant_\">EVI</span> 결과 작성\n            <span class=\"hljs-keyword\">with</span> rasterio.<span class=\"hljs-title function_\">open</span>(output_path, <span class=\"hljs-string\">'w'</span>, **profile) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-attr\">dst</span>:\n                dst.<span class=\"hljs-title function_\">write</span>(evi.<span class=\"hljs-title function_\">astype</span>(np.<span class=\"hljs-property\">float32</span>), <span class=\"hljs-number\">1</span>)\n\n    except <span class=\"hljs-title class_\">Exception</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-attr\">e</span>:\n        <span class=\"hljs-title function_\">print</span>(f<span class=\"hljs-string\">\"오류가 발생했습니다: {e}\"</span>)\n\n# 예시 파일 경로\nred_band_path = <span class=\"hljs-string\">'data/Toshka/S2A_MSIL2A_20240227T082911/T36QUL_20240227T082911_B04_10m.jp2'</span>  # 빨간색 밴드\nnir_band_path = <span class=\"hljs-string\">'data/Toshka/S2A_MSIL2A_20240227T082911/T36QUL_20240227T082911_B08_10m.jp2'</span>  # 근적외선 밴드\nblue_band_path = <span class=\"hljs-string\">'data/Toshka/S2A_MSIL2A_20240227T082911/T36QUL_20240227T082911_B02_10m.jp2'</span>  # 파란색 밴드\noutput_path = <span class=\"hljs-string\">'output/evi.tif'</span>  # <span class=\"hljs-variable constant_\">EVI</span> 출력 파일\n\n<span class=\"hljs-title function_\">calculate_evi</span>(red_band_path, nir_band_path, blue_band_path, output_path)\n</code></pre>\n<p>스크립트를 실행한 후 output/ 폴더에 EVI 출력물을 찾을 수 있습니다:</p>\n<p><img src=\"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_2.png\" alt=\"EVI 출력물\"></p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>3- 결과 확인: 시각화와 분석</p>\n<ul>\n<li>EVI 출력 파일 (evi.tif)을 QGIS에 로드합니다.</li>\n<li>더 밀집한 식물 상층을 나타내는 더 높은 EVI 값의 시각화를 위해 적합한 컬러 팔레트를 적용합니다.</li>\n<li>EVI 값에 기반하여 관심 영역을 강조하기 위해 시각화 설정을 조정하여 식물 건강 평가 및 토지 피복 맵핑을 지원합니다.</li>\n</ul>\n<p><img src=\"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_3.png\" alt=\"이미지1\"></p>\n<p><img src=\"/TIL/assets/img/2024-07-14-ProduceEVImapswithPythonSentinel2Data_4.png\" alt=\"이미지2\"></p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>결론</h1>\n<p>요약하자면, 향상된 식물지수(EVI)는 원격 감지 응용 프로그램에 강력한 도구로, 식물 역학 및 건강 평가에 대한 감도를 향상시켜줍니다. Sentinel-2 위성 이미지와 Python 및 QGIS와 같은 컴퓨터 도구를 활용하여 연구원 및 실무자는 효과적으로 식물 변화를 모니터링하고 토지 피복 유형을 분류하며 생태학 연구 및 환경 관리에 기여할 수 있습니다. 더 자세한 내용이나 문의 사항이 있으시면 언제든지 댓글을 남기거나 직접 연락해주세요.</p>\n<h1>팔로우</h1>\n<ul>\n<li>내 랜딩 페이지</li>\n<li>내 Youtube 채널</li>\n<li>내 SaaS 서비스</li>\n<li>내 GitHub</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}