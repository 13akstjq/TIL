{"pageProps":{"post":{"title":"오늘 배운 사실  왜 속성에 바다코끼리 연산자를 사용할 수 없을까","description":"","date":"2024-07-12 19:35","slug":"2024-07-12-TodayILearntWeCantUseTheWalrusOperatorOnAttributes","content":"\n\n\n![Example of the walrus operator](/TIL/assets/img/2024-07-12-TodayILearntWeCantUseTheWalrusOperatorOnAttributes_0.png)\r\n\r\nThe walrus operator := can condense 2 lines of code into one.\r\n\r\n```javascript\r\n// without walrus operator\r\n\r\nlet x = 'apple';\r\nif (x == 'apple') {\r\n    console.log('ok');\r\n}\r\n```\r\n\r\n```javascript\r\n// with walrus operator\r\n\r\nif ((x := 'apple') === 'apple') {\r\n    console.log('ok');\r\n}\r\n```\r\n\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n(x := `apple`)라는 구문에서 2가지 작업이 발생합니다:\n\n- x가 `apple`에 할당됩니다.\n- (x := `apple`) 자체가 `apple` 값을 반환합니다.\n\n# 배악 체이너와 속성\n\n하지만 객체 속성으로 이 작업을 시도할 때 오류가 발생합니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nclass Dog:\n    pass\n\ndog = Dog()\n\nif (dog.age = 5) == 5:\n    print('ok')\n\n# SyntaxError: cannot use assignment expressions with attribute\n```\n\n그래서 우리는 dog.age와 같은 속성에 월러스 연산자 :=을 사용할 수 없다는 것을 알 수 있습니다. 저에게는 좀 이상한 것 같네요.\n\n그렇다면 어떻게 한 줄의 코드로 여전히 동일한 효과를 얻을 수 있을까요?\n\n# 해결책\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n먼저 속성을 설정하는 방법에 대해 알아봅시다\n\n```js\ndog.name = 'rocky'\n```\n\n```js\n# 위와 동일합니다\nsetattr(dog, 'name', 'rocky')\n\n# setattr()은 None을 반환합니다\n```\n\n다음으로 x 또는 `hello` 구문을 살펴보겠습니다\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\n# x은 Truthy 값입니다. 예: 5, 'apple'\n\nx = 'apple'\ny = x 또는 'hello'\n\nprint(y)  # apple\n```\n\n```js\n# x은 Falsy 값입니다. 예: None, 0, ''\n\nx = None\ny = x 또는 'hello'\n\nprint(y)  # hello\n```\n\n^ x 또는 `hello`에서:\n\n- x가 Truthy 값이면, 이 식은 x의 원래 값 반환\n- x가 Falsy 값이면, 이 식은 `hello`를 반환합니다.\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n여기서 이점을 취할 수 있어요:\n\n```js\n# 우리가 이루려고 하는 것 (이건 불법입니다)\n\nif (dog.name := 'rocky') == 'rocky':\n    # 작업\r\n```\n\n```js\n# 우리의 해결책\n\nif (setattr(dog, 'name', 'rocky') or 'rocky') == 'rocky':\n    # 작업\r\n```\n\n# 결론\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 건은 하나의 줄로 코드를 작성하길 원하는 경우에만 필요합니다. 그게 아니라면 2줄로 작성하세요.\n\n참고 - 프로덕션 코드에서는 사용하지 마세요\n\n# 만약 제가 크리에이터로서를 지원하길 원한다면\n\n<!-- TIL 수평 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-4877378276818686\"\n     data-ad-slot=\"1549334788\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 제 책을 구매해주세요! — 파이썬에 대해 전혀 몰랐던 101가지 이야기\n- 찾을 수 있는 곳: [여기를 클릭해주세요](https://payhip.com/b/vywcf)\n- 이 이야기를 칭찬해주세요. 50번!\n- 자신의 생각을 남겨주세요.\n- 이야기 중에서 가장 마음에 드는 부분을 강조해주세요.\n\n감사합니다! 이런 작은 행동들이 큰 변화를 만듭니다. 정말 감사드립니다!\n\nYouTube: [여기를 클릭해주세요](https://www.youtube.com/@zlliu246)\n\nLinkedIn: [여기를 클릭해주세요](https://www.linkedin.com/in/zlliu/)","ogImage":{"url":"/TIL/assets/img/2024-07-12-TodayILearntWeCantUseTheWalrusOperatorOnAttributes_0.png"},"coverImage":"/TIL/assets/img/2024-07-12-TodayILearntWeCantUseTheWalrusOperatorOnAttributes_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/TIL/assets/img/2024-07-12-TodayILearntWeCantUseTheWalrusOperatorOnAttributes_0.png\" alt=\"Example of the walrus operator\"></p>\n<p>The walrus operator := can condense 2 lines of code into one.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// without walrus operator</span>\r\n\r\n<span class=\"hljs-keyword\">let</span> x = <span class=\"hljs-string\">'apple'</span>;\r\n<span class=\"hljs-keyword\">if</span> (x == <span class=\"hljs-string\">'apple'</span>) {\r\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'ok'</span>);\r\n}\n</code></pre>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// with walrus operator</span>\r\n\r\n<span class=\"hljs-keyword\">if</span> ((x := <span class=\"hljs-string\">'apple'</span>) === <span class=\"hljs-string\">'apple'</span>) {\r\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'ok'</span>);\r\n}\n</code></pre>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>(x := <code>apple</code>)라는 구문에서 2가지 작업이 발생합니다:</p>\n<ul>\n<li>x가 <code>apple</code>에 할당됩니다.</li>\n<li>(x := <code>apple</code>) 자체가 <code>apple</code> 값을 반환합니다.</li>\n</ul>\n<h1>배악 체이너와 속성</h1>\n<p>하지만 객체 속성으로 이 작업을 시도할 때 오류가 발생합니다.</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Dog</span>:\n    pass\n\ndog = <span class=\"hljs-title class_\">Dog</span>()\n\n<span class=\"hljs-keyword\">if</span> (dog.<span class=\"hljs-property\">age</span> = <span class=\"hljs-number\">5</span>) == <span class=\"hljs-number\">5</span>:\n    <span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">'ok'</span>)\n\n# <span class=\"hljs-title class_\">SyntaxError</span>: cannot use assignment expressions <span class=\"hljs-keyword\">with</span> attribute\n</code></pre>\n<p>그래서 우리는 dog.age와 같은 속성에 월러스 연산자 :=을 사용할 수 없다는 것을 알 수 있습니다. 저에게는 좀 이상한 것 같네요.</p>\n<p>그렇다면 어떻게 한 줄의 코드로 여전히 동일한 효과를 얻을 수 있을까요?</p>\n<h1>해결책</h1>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>먼저 속성을 설정하는 방법에 대해 알아봅시다</p>\n<pre><code class=\"hljs language-js\">dog.<span class=\"hljs-property\">name</span> = <span class=\"hljs-string\">'rocky'</span>\n</code></pre>\n<pre><code class=\"hljs language-js\"># 위와 동일합니다\n<span class=\"hljs-title function_\">setattr</span>(dog, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'rocky'</span>)\n\n# <span class=\"hljs-title function_\">setattr</span>()은 <span class=\"hljs-title class_\">None</span>을 반환합니다\n</code></pre>\n<p>다음으로 x 또는 <code>hello</code> 구문을 살펴보겠습니다</p>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\"># x은 <span class=\"hljs-title class_\">Truthy</span> 값입니다. 예: <span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">'apple'</span>\n\nx = <span class=\"hljs-string\">'apple'</span>\ny = x 또는 <span class=\"hljs-string\">'hello'</span>\n\n<span class=\"hljs-title function_\">print</span>(y)  # apple\n</code></pre>\n<pre><code class=\"hljs language-js\"># x은 <span class=\"hljs-title class_\">Falsy</span> 값입니다. 예: <span class=\"hljs-title class_\">None</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">''</span>\n\nx = <span class=\"hljs-title class_\">None</span>\ny = x 또는 <span class=\"hljs-string\">'hello'</span>\n\n<span class=\"hljs-title function_\">print</span>(y)  # hello\n</code></pre>\n<p>^ x 또는 <code>hello</code>에서:</p>\n<ul>\n<li>x가 Truthy 값이면, 이 식은 x의 원래 값 반환</li>\n<li>x가 Falsy 값이면, 이 식은 <code>hello</code>를 반환합니다.</li>\n</ul>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>여기서 이점을 취할 수 있어요:</p>\n<pre><code class=\"hljs language-js\"># 우리가 이루려고 하는 것 (이건 불법입니다)\n\n<span class=\"hljs-keyword\">if</span> (dog.<span class=\"hljs-property\">name</span> := <span class=\"hljs-string\">'rocky'</span>) == <span class=\"hljs-string\">'rocky'</span>:\n    # 작업\n</code></pre>\n<pre><code class=\"hljs language-js\"># 우리의 해결책\n\n<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_\">setattr</span>(dog, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'rocky'</span>) or <span class=\"hljs-string\">'rocky'</span>) == <span class=\"hljs-string\">'rocky'</span>:\n    # 작업\n</code></pre>\n<h1>결론</h1>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>이 건은 하나의 줄로 코드를 작성하길 원하는 경우에만 필요합니다. 그게 아니라면 2줄로 작성하세요.</p>\n<p>참고 - 프로덕션 코드에서는 사용하지 마세요</p>\n<h1>만약 제가 크리에이터로서를 지원하길 원한다면</h1>\n<!-- TIL 수평 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1549334788\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ul>\n<li>제 책을 구매해주세요! — 파이썬에 대해 전혀 몰랐던 101가지 이야기</li>\n<li>찾을 수 있는 곳: <a href=\"https://payhip.com/b/vywcf\" rel=\"nofollow\" target=\"_blank\">여기를 클릭해주세요</a></li>\n<li>이 이야기를 칭찬해주세요. 50번!</li>\n<li>자신의 생각을 남겨주세요.</li>\n<li>이야기 중에서 가장 마음에 드는 부분을 강조해주세요.</li>\n</ul>\n<p>감사합니다! 이런 작은 행동들이 큰 변화를 만듭니다. 정말 감사드립니다!</p>\n<p>YouTube: <a href=\"https://www.youtube.com/@zlliu246\" rel=\"nofollow\" target=\"_blank\">여기를 클릭해주세요</a></p>\n<p>LinkedIn: <a href=\"https://www.linkedin.com/in/zlliu/\" rel=\"nofollow\" target=\"_blank\">여기를 클릭해주세요</a></p>\n</body>\n</html>\n"},"__N_SSG":true}